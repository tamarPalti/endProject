[{"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\index.js":"1","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reportWebVitals.js":"2","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\App.js":"3","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reduces\\index.js":"4","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\privatenew.js":"5","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\MyLocation.js":"6","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Home.js":"7","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Advertisements\\Advertisements.js":"8","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Heder.js":"9","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\ChartPage\\ChartPage.js":"10","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\TableTasks.js":"11","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reduces\\users.js":"12","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reduces\\business.js":"13","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\BusinessSearch.js":"14","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\PrivateArea.js":"15","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\UseresSearch.js":"16","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\404\\Page404.js":"17","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\Search.js":"18","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\Manager.js":"19","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Logo\\Logo.js":"20","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\SingUp.js":"21","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\AddCtegory.js":"22","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\UpdataUser.js":"23","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\UpdataBusiness.js":"24","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\AddUser.js":"25","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\index.js":"26","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\ChartPage\\components\\Page.js":"27","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\ChartPage\\utils\\demos.js":"28","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\ChartPage\\utils\\colors.js":"29","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\ForgotPassword.js":"30","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\ExpandingDetails.js":"31","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\singIn.js":"32","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\ActionTypes.js":"33","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\services\\SortService.js":"34","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\actions\\index.js":"35","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\ResultSearchUser.js":"36","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\SendMail.js":"37","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\Tasks.js":"38","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\UtilCategory.js":"39","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\Location.js":"40","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\Manager.js":"41","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\ChartPage\\components\\Typography.js":"42","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Tasks.js":"43","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\ChartPage\\utils\\propTypes.js":"44","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\classes\\business.js":"45","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\actions\\business.js":"46","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\actions\\users.js":"47","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\User.js":"48","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\UtilBuisness.js":"49","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\UtilUser.js":"50","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\ChartPage\\utils\\bemnames.js":"51","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\classes\\task.js":"52","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\classes\\user.js":"53","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\BusinessInformationUpdate.js":"54","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\ResultSearchBusiness.js":"55","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\SearchHistory.js":"56","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\TableTasks.js":"57","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\AddingBusiness.js":"58","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\BasicDetails.js":"59","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdatePersonalDetails.js":"60","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\ModelCompo.js":"61","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\Business.js":"62","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\AddCategory.js":"63","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdateBuisness\\ListBuisness.js":"64","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Histories\\Buisness.js":"65","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\UpdateBuisnesOfManager.js":"66","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Histories\\Users.js":"67","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdateBuisness\\UpdateBuisnes.js":"68","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdateBuisness\\MiniUpdate.js":"69"},{"size":1117,"mtime":1631529240822,"results":"70","hashOfConfig":"71"},{"size":375,"mtime":1631529240831,"results":"72","hashOfConfig":"71"},{"size":2987,"mtime":1640345273445,"results":"73","hashOfConfig":"71"},{"size":86,"mtime":1631529240825,"results":"74","hashOfConfig":"71"},{"size":5056,"mtime":1640347495006,"results":"75","hashOfConfig":"71"},{"size":1029,"mtime":1635636675818,"results":"76","hashOfConfig":"71"},{"size":5493,"mtime":1640171448506,"results":"77","hashOfConfig":"71"},{"size":693,"mtime":1640345273463,"results":"78","hashOfConfig":"71"},{"size":7688,"mtime":1640164244574,"results":"79","hashOfConfig":"71"},{"size":9374,"mtime":1640345273466,"results":"80","hashOfConfig":"71"},{"size":11162,"mtime":1637426294105,"results":"81","hashOfConfig":"71"},{"size":2742,"mtime":1631529240830,"results":"82","hashOfConfig":"71"},{"size":2772,"mtime":1631529240824,"results":"83","hashOfConfig":"71"},{"size":5603,"mtime":1640345273474,"results":"84","hashOfConfig":"71"},{"size":6523,"mtime":1634751521085,"results":"85","hashOfConfig":"71"},{"size":4831,"mtime":1634751521124,"results":"86","hashOfConfig":"71"},{"size":205,"mtime":1636719017795,"results":"87","hashOfConfig":"71"},{"size":5620,"mtime":1640345273476,"results":"88","hashOfConfig":"71"},{"size":240,"mtime":1637614765046,"results":"89","hashOfConfig":"71"},{"size":237,"mtime":1638788718460,"results":"90","hashOfConfig":"71"},{"size":2541,"mtime":1634751521034,"results":"91","hashOfConfig":"71"},{"size":3639,"mtime":1637533407147,"results":"92","hashOfConfig":"71"},{"size":3679,"mtime":1635441114569,"results":"93","hashOfConfig":"71"},{"size":3695,"mtime":1635441114567,"results":"94","hashOfConfig":"71"},{"size":3678,"mtime":1637533407155,"results":"95","hashOfConfig":"71"},{"size":833,"mtime":1640345273482,"results":"96","hashOfConfig":"71"},{"size":1575,"mtime":1637614765034,"results":"97","hashOfConfig":"71"},{"size":163,"mtime":1637614765038,"results":"98","hashOfConfig":"71"},{"size":798,"mtime":1637614765037,"results":"99","hashOfConfig":"71"},{"size":6997,"mtime":1638788718562,"results":"100","hashOfConfig":"71"},{"size":8191,"mtime":1636644337571,"results":"101","hashOfConfig":"71"},{"size":8936,"mtime":1636648905628,"results":"102","hashOfConfig":"71"},{"size":1061,"mtime":1631529240675,"results":"103","hashOfConfig":"71"},{"size":1723,"mtime":1631529240922,"results":"104","hashOfConfig":"71"},{"size":480,"mtime":1631529240678,"results":"105","hashOfConfig":"71"},{"size":1532,"mtime":1634751521111,"results":"106","hashOfConfig":"71"},{"size":146,"mtime":1631631484449,"results":"107","hashOfConfig":"71"},{"size":805,"mtime":1635629725542,"results":"108","hashOfConfig":"71"},{"size":257,"mtime":1631529240925,"results":"109","hashOfConfig":"71"},{"size":1321,"mtime":1640345273478,"results":"110","hashOfConfig":"71"},{"size":2047,"mtime":1640345273480,"results":"111","hashOfConfig":"71"},{"size":958,"mtime":1637614765035,"results":"112","hashOfConfig":"71"},{"size":8600,"mtime":1637533407145,"results":"113","hashOfConfig":"71"},{"size":304,"mtime":1637614765039,"results":"114","hashOfConfig":"71"},{"size":291,"mtime":1631529240776,"results":"115","hashOfConfig":"71"},{"size":2682,"mtime":1631529240678,"results":"116","hashOfConfig":"71"},{"size":3967,"mtime":1631529240681,"results":"117","hashOfConfig":"71"},{"size":8418,"mtime":1637614765055,"results":"118","hashOfConfig":"71"},{"size":1165,"mtime":1637318623411,"results":"119","hashOfConfig":"71"},{"size":2436,"mtime":1637318342299,"results":"120","hashOfConfig":"71"},{"size":676,"mtime":1637614765036,"results":"121","hashOfConfig":"71"},{"size":261,"mtime":1631529240777,"results":"122","hashOfConfig":"71"},{"size":412,"mtime":1631529240779,"results":"123","hashOfConfig":"71"},{"size":519,"mtime":1634751521059,"results":"124","hashOfConfig":"71"},{"size":2210,"mtime":1636278955056,"results":"125","hashOfConfig":"71"},{"size":3354,"mtime":1635629725512,"results":"126","hashOfConfig":"71"},{"size":7748,"mtime":1640345273469,"results":"127","hashOfConfig":"71"},{"size":14123,"mtime":1640345273472,"results":"128","hashOfConfig":"71"},{"size":13308,"mtime":1636277715376,"results":"129","hashOfConfig":"71"},{"size":15343,"mtime":1636235249347,"results":"130","hashOfConfig":"71"},{"size":672,"mtime":1635618175103,"results":"131","hashOfConfig":"71"},{"size":6921,"mtime":1637614765053,"results":"132","hashOfConfig":"71"},{"size":6159,"mtime":1638049438203,"results":"133","hashOfConfig":"71"},{"size":8745,"mtime":1636719017802,"results":"134","hashOfConfig":"71"},{"size":3492,"mtime":1636712306181,"results":"135","hashOfConfig":"71"},{"size":11889,"mtime":1636278955034,"results":"136","hashOfConfig":"71"},{"size":8958,"mtime":1636278955037,"results":"137","hashOfConfig":"71"},{"size":13552,"mtime":1636717540294,"results":"138","hashOfConfig":"71"},{"size":1530,"mtime":1635235292553,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"gpv0kl",{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"142"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"142"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"142"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"142"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"142"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"142"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"142"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"142"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"142"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"142"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"142"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"142"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"142"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"142"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"142"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"142"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"142"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"142"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"142"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"142"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"142"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"142"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"142"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"142"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"142"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"142"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"142"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"142"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"142"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"142"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"142"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"142"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"142"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"142"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"142"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"142"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"142"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"142"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"142"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"142"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"142"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"142"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"142"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"142"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"142"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"319"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"142"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"142"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"142"},"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\index.js",[],["329","330"],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reportWebVitals.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\App.js",["331","332","333","334","335","336"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Home from './components/Home';\r\nimport Heder from './components/Heder';\r\nimport SimpleMap from './components/search/MyLocation'\r\nimport { connect } from \"react-redux\";\r\nimport MyLocation from './components/search/MyLocation';\r\nimport PrivateNew from './components/PrivateArea/privatenew';\r\nimport TableTasks from './components/PrivateArea/TableTasks';\r\nimport ChartPage from './components/ChartPage/ChartPage';\r\nimport Advertisements from './components/Advertisements/Advertisements';\r\n\r\nconst app = (props) => {\r\n    return (<>\r\n        {/* <Heder Home={Home}/> */}\r\n\r\n        <Heder />\r\n        <Home/>\r\n        {/* <Advertisements /> */}\r\n        {/* <TableTasks /> */}\r\n\r\n        {/* <ChartPage /> */}\r\n\r\n\r\n\r\n        {/* <New/> */}\r\n        {/* <SimpleMap/> */}\r\n        {/* <MyLocation /> */}\r\n        {/* console.log(\"jjj\"); */}\r\n        {/* tamar */}\r\n    </>)\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { CurrentUser: state.usersPart.CurrentUser };\r\n}\r\nexport default connect(mapStateToProps, {})(app);\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import ImageUploading from 'react-images-uploading';\r\n\r\n// export default function App() {\r\n//   const [images, setImages] = React.useState([]);\r\n//   const maxNumber = 69;\r\n\r\n//   const onChange = (imageList, addUpdateIndex) => {\r\n//     // data for submit\r\n//     console.log(imageList, addUpdateIndex);\r\n//     setImages(imageList);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <ImageUploading\r\n//         multiple\r\n//         value={images}\r\n//         onChange={onChange}\r\n//         maxNumber={maxNumber}\r\n//         dataURLKey=\"data_url\"\r\n//       >\r\n//         {({\r\n//           imageList,\r\n//           onImageUpload,\r\n//           onImageRemoveAll,\r\n//           onImageUpdate,\r\n//           onImageRemove,\r\n//           isDragging,\r\n//           dragProps,\r\n//         }) => (\r\n//           // write your building UI\r\n//           <div className=\"upload__image-wrapper\">\r\n//             <button\r\n//               style={isDragging ? { color: 'red' } : undefined}\r\n//               onClick={onImageUpload}\r\n//               {...dragProps}\r\n//             >\r\n//               Click or Drop here\r\n//             </button>\r\n//             &nbsp;\r\n//             <button onClick={onImageRemoveAll}>Remove all images</button>\r\n//             {imageList.map((image, index) => (\r\n//               <div key={index} className=\"image-item\">\r\n//                 <img src={image['data_url']} alt=\"\" width=\"100\" />\r\n//                 <div className=\"image-item__btn-wrapper\">\r\n//                   <button onClick={() => onImageUpdate(index)}>Update</button>\r\n//                   <button onClick={() => onImageRemove(index)}>Remove</button>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         )}\r\n//       </ImageUploading>\r\n//     </div>\r\n//   );\r\n// }","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reduces\\index.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\privatenew.js",["337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354"],"import * as React from 'react';\r\nimport './privateNew.scss';\r\nimport FingerprintIcon from '@mui/icons-material/Fingerprint';\r\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\r\nimport { Link, Route, useRouteMatch, useLocation } from 'react-router-dom'\r\nimport UpdatePersonalDetails from './UpdatePersonalDetails';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport BusinessInformationUpdate from './BusinessInformationUpdate';\r\nimport AddingBusiness from './AddingBusiness';\r\nimport ScrollableTabsButtonAuto from './SearchHistory';\r\nimport Tasks from './Tasks';\r\nimport { useState, useEffect } from 'react';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\n\r\nconst PrivateNew = (props) => {\r\n\r\n    const { url, path } = useRouteMatch();\r\n    const { pathname } = useLocation();\r\n    const [colorIndex, setColorIndex] = useState(0);\r\n\r\n    const styleIcon = {\r\n        \"width\": \"96%\",\r\n        \"height\": \"66%\",\r\n        \"margin-top\": \"15%\",\r\n        \"margin-left\": \"3%\"\r\n    }\r\n    React.useEffect(() => {\r\n\r\n        console.log(pathname);\r\n\r\n    })\r\n    return (<>\r\n        {pathname != `/PrivateArea/Tasks/addUser` && pathname != `/PrivateArea/Tasks/addCategory` &&\r\n\r\n            < div >\r\n                <Grid container spacing={2} style={{\r\n                    \"width\": \"calc(100% + 16px)\",\r\n                    \"margin\": \"-8px\",\r\n                    \"height\": \"54.4em\"\r\n                }}>\r\n\r\n                    <Grid item xs={12} sm={4} style={{ \"height\": \"100%\" }}>\r\n                        <div className=\"divAll\">\r\n\r\n                            <div className=\"path\">\r\n\r\n                                <Link to={url + \"/personalDetiles\"}>\r\n\r\n                                    <div className=\"circle\" onClick={() => setColorIndex(1)} className={colorIndex == 1 ? \"blue circle\" : \"circle\"}>\r\n                                        <ManageAccountsIcon style={styleIcon} className={colorIndex == 1 ? \"white\" : \"\"} /></div>\r\n                                </Link>\r\n\r\n                                <Link to={url + \"/BusinessInformationUpdate\"}>\r\n\r\n                                    <div onClick={() => setColorIndex(2)} className={colorIndex == 2 ? \"blue circle\" : \"circle\"}>\r\n                                        <WorkIcon style={styleIcon} className={colorIndex == 2 ? \"white\" : \"\"} /></div>\r\n                                </Link>\r\n\r\n                                <Link to={url + \"/AddingBusiness\"}>\r\n\r\n                                    <div className=\"circle\" onClick={() => setColorIndex(3)} className={colorIndex == 3 ? \"blue circle\" : \"circle\"}>\r\n                                        <WorkIcon style={styleIcon} className={colorIndex == 3 ? \"white\" : \"\"} /></div>\r\n                                </Link>\r\n\r\n                                <Link to={url + \"/ScrollableTabsButtonAuto\"}>\r\n\r\n                                    <div className=\"circle\" onClick={() => setColorIndex(4)} className={colorIndex == 4 ? \"blue circle\" : \"circle\"}>\r\n                                        <SearchIcon style={styleIcon} className={colorIndex == 4 ? \"white\" : \"\"} /></div>\r\n                                </Link>\r\n\r\n                                <Link to={url + \"/Tasks\"} onClick={() => { setTimeout(() => window.location.reload(), 10) }}>\r\n\r\n                                    <div className=\"circle\" onClick={() => setColorIndex(5)} className={colorIndex == 5 ? \"blue circle\" : \"circle\"}>\r\n                                        <AssignmentIcon style={styleIcon} className={colorIndex == 5 ? \"white\" : \"\"} /></div>\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </Grid>\r\n\r\n                        <Grid item xs={12} sm={1} md={8} style={{ \"margin-top\": \"312px\", \"margin-left\": \"-151px\" }}>\r\n\r\n                            <Route path={path + \"/personalDetiles\"} >\r\n\r\n                                <UpdatePersonalDetails />\r\n                            </Route>\r\n\r\n                            <Route path={path + \"/BusinessInformationUpdate\"} >\r\n                                <div style={{ \"margin-top\": \"-23%\" }}>\r\n                                    <BusinessInformationUpdate />\r\n                                </div>\r\n                            </Route>\r\n\r\n                            <Route path={path + \"/AddingBusiness\"} >\r\n\r\n                                <AddingBusiness />\r\n                            </Route>\r\n\r\n                            <Route path={path + \"/ScrollableTabsButtonAuto\"} >\r\n                                <ScrollableTabsButtonAuto />\r\n                            </Route>\r\n\r\n\r\n                            <Route path={path + \"/Tasks\"} >\r\n                                <Tasks />\r\n                            </Route>\r\n\r\n                        </Grid>\r\n                   \r\n                </Grid>\r\n            </div>}</>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default PrivateNew;","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\MyLocation.js",["355","356"],"\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\n\r\nconst AnyReactComponent = ({ text }) => <div style={{\"background-color\":\"red\",\"width\": \"14px\", \"border-radius\": \"13px\",\"height\": \"14px\"}}> </div>;\r\n    \r\n\r\n\r\nconst MyLocation = (props) => {\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n      \r\n        <div style={{\"height\":\" 20%\",\"width\": \"32%\",\"margin-top\":\"-23%\",\"margin-left\": \"5% \"}}>\r\n          \r\n            \r\n           \r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: 'AIzaSyC42dZGLkeXWn1ofLJhRrWcVBxFY1-tf2Q' }}\r\n                defaultCenter={props.center}\r\n                defaultZoom={props.zoom}\r\n            >\r\n                <AnyReactComponent\r\n                    lat={props.center.lat}\r\n                    lng={props.center.lng}\r\n                    text={props.txt}\r\n                    \r\n                />\r\n            </GoogleMapReact>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default MyLocation;\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Home.js",["357","358","359","360","361","362"],"import React, { useEffect, useState } from 'react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link, Route, Switch, Redirect } from 'react-router-dom';\r\nimport UsersSearch from './search/UseresSearch';\r\nimport BusinessSearch from './search/BusinessSearch';\r\nimport Search from './search/Search';\r\nimport { connect } from \"react-redux\";\r\nimport SingIn from './LogIn/singIn';\r\nimport SignUp from './LogIn/SingUp';\r\nimport PrivateArea from './PrivateArea/PrivateArea';\r\nimport './Home.scss';\r\nimport Button from '@material-ui/core/Button';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport home2 from './img/home3.png';\r\nimport Manager from '../components/Manager/Manager';\r\nimport { GetCurrentUser as GetCurrentUser2, CheckManager } from '../util/index';\r\nimport Page404 from './404/Page404';\r\nimport UpdataBusiness from './Tasks/UpdataBusiness';\r\nimport UpdataUser from './Tasks/UpdataUser';\r\nimport ForgotPassword from './LogIn/ForgotPassword';\r\nimport Heder from './Heder';\r\nimport ExpandingDetails from './LogIn/ExpandingDetails';\r\nimport PrivateNew from './PrivateArea/privatenew';\r\nimport ChartPage from './ChartPage/ChartPage'\r\nimport AddCtegory from '../components/Tasks/AddCtegory'\r\nimport AddUser from '../components/Tasks/AddUser';\r\n\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(purple[500]),\r\n        backgroundColor: purple[500],\r\n        '&:hover': {\r\n            backgroundColor: purple[700],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nconst Home = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n    const [ifGoTo404, setifGoToifGoTo404] = useState(false);\r\n\r\n    useEffect(async () => {\r\n\r\n        localStorage.setItem(\"managerMail\", \"m1a2n3a4g5e6r@gmail.com\");\r\n        localStorage.setItem(\"managerId\", \"M11223344\");\r\n\r\n        GetCurrentUser2().catch(error => { setifGoToLogin(true) });\r\n\r\n        let if404 = await CheckManager(localStorage.getItem(\"currentUserMail\"), localStorage.getItem(\"currentUserPassword\"));\r\n        if (!if404 === true)\r\n            setifGoToifGoTo404(true);\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Heder />\r\n            <Switch>\r\n\r\n                <Route exact path={'/'}>\r\n                    <div className=\"back-home\">\r\n                        <img src={home2} style={{ width: \"100%\", marginTop: \"19%\" }}></img>\r\n                        <div className=\"href2\">\r\n                            <Link to=\"/SignUp\"  >\r\n                                <ColorButton variant=\"contained\" color=\"primary\" style={{ \"border-radius\": \"29px 29px 29px 29px\", \"background-color\": \"#fb7375\" }} className={classes.margin + \" search\"}>\r\n                                    SignUp\r\n                                </ColorButton>\r\n\r\n                            </Link>\r\n                            <Link to=\"/SignIn\"  >\r\n                                <ColorButton variant=\"contained\" color=\"primary\" style={{ \"border-radius\": \"29px 29px 29px 29px\", \"background-color\": \"#1f284f\" }} className={classes.margin + \" search\"}>\r\n                                    SingIn\r\n                                </ColorButton>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </Route>\r\n\r\n                <Route path={'/search/business/TasksUpdataBusiness/:idBusiness'}>\r\n\r\n                    <UpdataBusiness />\r\n                </Route>\r\n                <Route path={'/search/users/TasksUpdataUser/:idUser'}>\r\n                    <UpdataUser />\r\n                </Route>\r\n                <Route path={'/Search'}>\r\n                    {!ifGoToLogin ? <Search /> : <Redirect to={'/SignIn'} />}\r\n                </Route>\r\n                <Route path={'/Manager'}>\r\n                    {!ifGoTo404 ? <Manager /> : <Redirect to={'/Page404'} />}\r\n                </Route>\r\n                <Route path={'/SignUp'}>\r\n                    <SignUp/>\r\n                </Route>\r\n\r\n                <Route path={'/ForgotPassword'}>\r\n                    <ForgotPassword />\r\n                </Route>\r\n                {/* <Route path={'/PrivateArea'}>\r\n                    {!ifGoToLogin ? <PrivateArea /> : <Redirect to={'/Page404'} />}\r\n                </Route> */}\r\n                 <Route path={'/PrivateArea/Tasks/addUser'}>\r\n                    <AddUser></AddUser>\r\n                </Route>\r\n\r\n                <Route path={'/PrivateArea/Tasks/addCategory'}>\r\n                    <AddCtegory></AddCtegory>\r\n                </Route>\r\n                <Route path={'/PrivateArea'}>\r\n                    {!ifGoToLogin ? <PrivateNew /> : <Redirect to={'/Page404'} />}\r\n                </Route>\r\n\r\n\r\n                <Route path={'/Page404'}>\r\n                    <Page404 />\r\n                </Route>\r\n                <Route path={'/SignIn'}>\r\n                    <SingIn />\r\n                </Route>\r\n                <Route path={'/ChartPage'}>\r\n                    <ChartPage />\r\n                </Route>\r\n                <Route>\r\n                    <Page404 />\r\n\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { CurrentUser: state.usersPart.CurrentUser };\r\n}\r\nexport default connect(mapStateToProps, {})(Home); \r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Advertisements\\Advertisements.js",["363","364"],"import Slider from 'react-slick';\r\nimport img1 from './1617804764a18a.png'\r\nimport img2 from './161af3093b9c97.png'\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport './Advertisements.scss'\r\nconst Advertisements = (props) => {\r\n    var settings = {\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        autoplay:true,\r\n        \r\n    };\r\n    return (<>\r\n        <div className=\"Advertisements\">\r\n            <Slider {...settings}>\r\n                <img src={img1} />\r\n                <img src={img2} />\r\n\r\n            </Slider>\r\n        </div>\r\n    </>);\r\n}\r\n\r\nexport default Advertisements;","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Heder.js",["365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380"],"import * as React from 'react';\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport List from '@mui/material/List';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport { useRouteMatch, useLocation, useParams } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { SignOut } from '../actions';\r\nimport ManageSearchIcon from '@mui/icons-material/ManageSearch';\r\nimport GroupsIcon from '@mui/icons-material/Groups';\r\nimport ApartmentIcon from '@mui/icons-material/Apartment';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\nimport GroupAddIcon from '@mui/icons-material/GroupAdd';\r\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\r\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\r\nimport { CheckManagerFunc } from '../util';\r\nimport Logo from './Logo/Logo';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport SettingsApplicationsIcon from '@mui/icons-material/SettingsApplications';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\r\n  ({ theme, open }) => ({\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginRight: -drawerWidth,\r\n    ...(open && {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginRight: 0,\r\n    }),\r\n  }),\r\n);\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  transition: theme.transitions.create(['margin', 'width'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: drawerWidth,\r\n  }),\r\n}));\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n  justifyContent: 'flex-start',\r\n}));\r\n\r\nfunction PersistentDrawerRight(props) {\r\n\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const { idUser } = useParams();\r\n  const { pathname } = useLocation();\r\n  const [color, setcolor] = React.useState(\"#0b0b2b\");\r\n\r\n\r\n  const [ifManager, setifManager] = React.useState(false);\r\n\r\n  const FuncCheck = async () => {\r\n    let ifMana=await CheckManagerFunc();\r\n    setifManager(ifMana);\r\n\r\n  }\r\n  React.useEffect(() => {\r\n    console.log(props);\r\n    console.log(pathname);\r\n    if (pathname == \"/SignIn\" || pathname == \"/SignUp\" || pathname == \"/search/business\" || pathname == \"/search/users\") {\r\n      setcolor(\"#ff716e\");\r\n    }\r\n\r\n    else {\r\n      setcolor(\"#0b0b2b\");\r\n    }\r\n    FuncCheck();\r\n\r\n  })\r\n  return (<>{\r\n    pathname !== `/search/users/TasksUpdataUser/${localStorage.getItem(\"idUserSearch\")}` && pathname !== `/search/business/TasksUpdataBusiness/${localStorage.getItem(\"idBusinesSearch\")}` &&\r\n    pathname!=`/PrivateArea/Tasks/addCategory`&&pathname!=`/PrivateArea/Tasks/addUser`&&\r\n    <Box sx={{ display: 'flex' }}>\r\n\r\n      <CssBaseline />\r\n\r\n      <AppBar position=\"fixed\" open={open}>\r\n\r\n        <Toolbar style={{ \"background-color\": color, \"height\": \"6.5em\" }}>\r\n\r\n          <Typography variant=\"h6\" noWrap sx={{ flexGrow: 1 }} component=\"div\">\r\n           <Logo/>\r\n          </Typography>\r\n\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"end\"\r\n            onClick={handleDrawerOpen}\r\n\r\n            sx={{ ...(open && { display: 'none' }) }}\r\n          >\r\n            <MenuIcon style={{ \"font-size\": \"2.5rem\", \"color\": \"white\" }} />\r\n\r\n          </IconButton>\r\n\r\n        </Toolbar>\r\n\r\n      </AppBar>\r\n      <Drawer\r\n\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          '& .MuiDrawer-paper': {\r\n            width: drawerWidth,\r\n          },\r\n        }}\r\n        variant=\"persistent\"\r\n        anchor=\"right\"\r\n        open={open}\r\n\r\n      >\r\n        <DrawerHeader style={{ \"background-color\": color, \"height\": \"6.5em\" }}>\r\n\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon style={{ \"font-size\": \"2.5rem\", \"color\": \"white\" }} />}\r\n          </IconButton>\r\n\r\n        </DrawerHeader>\r\n\r\n        <Divider />\r\n\r\n        <List style={{ \"line-height\": \"4.5\" }}>\r\n\r\n\r\n          {[{ text: 'Sign In', to: \"/SignIn\" },\r\n          { text: 'Sign Up', to: '/SignUp' },\r\n          { text: 'Search Users', to: '/search/users' },\r\n          { text: 'Search Business', to: '/search/business' },\r\n          { text: 'Sign Out', to: \"/SignIn\", action: () => props.SignOut },\r\n          { text: 'Privte Erea', to: \"/PrivateArea/personalDetiles\" },\r\n          { text: 'Manager', to: \"/Manager\" },\r\n          { text: 'ChartPage', to: \"/ChartPage\" }].map((item, index) => (\r\n\r\n            (index >= 6 && ifManager || index < 6) &&\r\n            <Link to={item.to} onClick={item.action && item.action()}>\r\n\r\n              <ListItem button key={item.text} onClick={() => { setTimeout(() => window.location.reload(), 10) }} >\r\n\r\n                <ListItemIcon >\r\n\r\n                  {index === 0 ? <LoginIcon /> : index === 1 ? <GroupAddIcon />\r\n                    : index === 2 ? <PersonSearchIcon /> : index === 3 ? <ApartmentIcon />\r\n                      : index === 4 ? <LogoutIcon /> : index === 5 ? <SettingsApplicationsIcon /> :index === 6 ? <ManageAccountsIcon />:<BarChartIcon/>}\r\n\r\n\r\n                </ListItemIcon>\r\n\r\n                <ListItemText primary={item.text} />\r\n\r\n              </ListItem>\r\n\r\n            </Link>\r\n          ))}\r\n\r\n        </List>\r\n\r\n        {/* <Divider /> */}\r\n\r\n        {/* <List>\r\n\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List> */}\r\n\r\n      </Drawer>\r\n    </Box>\r\n  }</>\r\n  );\r\n}\r\nconst mapStateToProps = () => {\r\n  return {};\r\n}\r\nexport default connect(mapStateToProps, { SignOut })(PersistentDrawerRight); ","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\ChartPage\\ChartPage.js",["381","382"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { getColor } from './utils/colors';\r\nimport { randomNum } from './utils/demos';\r\n\r\nimport { Row, Col, Card, CardHeader, CardBody } from 'reactstrap';\r\n\r\nimport { Line, Pie, Doughnut, Bar, Radar, Polar } from 'react-chartjs-2';\r\n\r\nimport Page from './components/Page';\r\n\r\n\r\nimport { GetCountAllUserByMonth, GetCountAllBusinessByMonth, GetCountSearchBusinessByMonth, GetCountSearchUsersByMonth } from '../../util/index';\r\n\r\nimport './ChartPage.scss';\r\nconst MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\nconst genLineData = (arrUsers, arrBusiness, moreData = {}, moreData2 = {}) => {\r\n    return {\r\n        labels: MONTHS,\r\n        datasets: [\r\n            {\r\n                label: 'Users',\r\n                backgroundColor: getColor('primary'),\r\n                borderColor: getColor('primary'),\r\n                borderWidth: 1,\r\n                data: [\r\n                    arrUsers[0],\r\n                    arrUsers[1],\r\n                    arrUsers[2],\r\n                    arrUsers[3],\r\n                    arrUsers[4],\r\n                    arrUsers[5],\r\n                    arrUsers[6],\r\n                    arrUsers[7],\r\n                    arrUsers[8],\r\n                    arrUsers[9],\r\n                    arrUsers[10],\r\n                    arrUsers[11],\r\n\r\n                ],\r\n                ...moreData,\r\n            },\r\n            {\r\n                label: 'Business',\r\n                backgroundColor: getColor('secondary'),\r\n                borderColor: getColor('secondary'),\r\n                borderWidth: 1,\r\n                data: [\r\n                    arrBusiness[0],\r\n                    arrBusiness[1],\r\n                    arrBusiness[2],\r\n                    arrBusiness[3],\r\n                    arrBusiness[4],\r\n                    arrBusiness[5],\r\n                    arrBusiness[6],\r\n                    arrBusiness[7],\r\n                    arrBusiness[8],\r\n                    arrBusiness[9],\r\n                    arrBusiness[10],\r\n                    arrBusiness[11],\r\n                ],\r\n                ...moreData2,\r\n            },\r\n        ],\r\n    };\r\n};\r\n\r\nconst genPieData = (arr) => {\r\n    return {\r\n        datasets: [\r\n            {\r\n                data: [\r\n                    arr[0],\r\n                    arr[1],\r\n                    arr[2],\r\n                    arr[3],\r\n                    arr[4],\r\n                    arr[5],\r\n                    arr[6],\r\n                    arr[7],\r\n                    arr[8],\r\n                    arr[9],\r\n                    arr[10],\r\n                    arr[11],\r\n                ],\r\n                backgroundColor: [\r\n                    getColor('primary'),\r\n                    getColor('secondary'),\r\n                    getColor('success'),\r\n                    getColor('info'),\r\n                    getColor('danger'),\r\n                    getColor('primary'),\r\n                    getColor('secondary'),\r\n                    getColor('success'),\r\n                    getColor('info'),\r\n                    getColor('danger'),\r\n                    getColor('primary'),\r\n                    getColor('secondary'),\r\n\r\n                ],\r\n                label: 'Dataset 1',\r\n            },\r\n        ],\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n    };\r\n};\r\n\r\nconst ChartPage = () => {\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [arrAllUsersByMonth, setArrAllUsersByMonth] = useState(null);\r\n    const [arrAllBusinessByMonth, setArrAllBusinessByMonth] = useState(null);\r\n    const [arrAllSearchBusinessByMonth, setArrAllSearchBusinessByMonth] = useState(null);\r\n    const [arrAllSearchUsersByMonth, setArrAllSearchUsersByMonth] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        GetCountAllUserByMonth().then((succ) => {\r\n            setArrAllUsersByMonth(succ);\r\n        }).catch(err => {\r\n            console.log(err);\r\n\r\n        });\r\n\r\n        GetCountAllBusinessByMonth().then((succ) => {\r\n            setArrAllBusinessByMonth(succ);\r\n        }).catch(err => {\r\n            console.log(err);\r\n\r\n        });\r\n        GetCountSearchBusinessByMonth().then((succ) => {\r\n            setArrAllSearchBusinessByMonth(succ);\r\n        }).catch(err => {\r\n            console.log(err);\r\n\r\n        });\r\n        GetCountSearchUsersByMonth().then((succ) => {\r\n            setArrAllSearchUsersByMonth(succ);\r\n        }).catch(err => {\r\n            console.log(err);\r\n\r\n        });\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Page title=\"Charts\" style={{ \"margin-top\": \"1rem\" }} breadcrumbs={[{ name: 'Charts', active: true }]}>\r\n            <Row>\r\n\r\n                <Col xl={4} lg={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>מספר המשתמשים החדשים בכל חודש</CardHeader>\r\n                        <CardBody>\r\n                            {arrAllUsersByMonth && <Pie data={genPieData(arrAllUsersByMonth)} />}\r\n                        </CardBody>\r\n\r\n                    </Card>\r\n                </Col>\r\n                <Col xl={4} lg={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>מספר הנכנסים החדשים בכל חודש למערכת</CardHeader>\r\n                        <CardBody>\r\n                            {arrAllUsersByMonth && arrAllBusinessByMonth && <Bar data={genLineData(arrAllUsersByMonth, arrAllBusinessByMonth)} />}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col xl={4} lg={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>מספר העסקים החדשים בכל חודש</CardHeader>\r\n                        <CardBody>\r\n                            {arrAllBusinessByMonth && <Pie data={genPieData(arrAllBusinessByMonth)} />}\r\n                        </CardBody>\r\n\r\n                    </Card>\r\n                </Col>\r\n\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n              \r\n                <Col xl={4} lg={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>מספר העסקים שחופשו בכל חודש</CardHeader>\r\n                        <CardBody>\r\n                            {arrAllSearchBusinessByMonth && <Pie data={genPieData(arrAllSearchBusinessByMonth)} />}\r\n                        </CardBody>\r\n\r\n                    </Card>\r\n                </Col>\r\n                <Col xl={4} lg={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>מספר החיפושים בכל חודש</CardHeader>\r\n                        <CardBody>\r\n                            {arrAllSearchBusinessByMonth && arrAllSearchUsersByMonth && <Bar\r\n                                data={genLineData(arrAllSearchUsersByMonth, arrAllSearchBusinessByMonth)}\r\n                            />}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col xl={4} lg={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>מספר המשתמשים שחופשו בכל חודש</CardHeader>\r\n                        <CardBody>\r\n                            {arrAllSearchUsersByMonth && <Pie data={genPieData(arrAllSearchUsersByMonth)} />}\r\n                        </CardBody>\r\n\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6} lg={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>דיאגרמת מספר הנכנסים בכל חודש למערכת</CardHeader>\r\n                        <CardBody>\r\n                            {arrAllUsersByMonth && arrAllBusinessByMonth && <Line data={genLineData(arrAllUsersByMonth, { type: 'line', fill: false })} />}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col xl={6} lg={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>דיאגרמת מספר החיפושים בכל חודש</CardHeader>\r\n                        <CardBody>\r\n                            {arrAllSearchBusinessByMonth && arrAllSearchUsersByMonth && <Bar data={genLineData(arrAllSearchUsersByMonth, arrAllSearchBusinessByMonth, { type: 'line', fill: false })} />}\r\n\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6} lg={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>Polar</CardHeader>\r\n                        <CardBody>\r\n                            {arrAllUsersByMonth && <Polar data={genPieData(arrAllUsersByMonth)} />}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xl={6} lg={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>Radar</CardHeader>\r\n                        <CardBody>\r\n                            {arrAllUsersByMonth && arrAllBusinessByMonth && <Radar data={genLineData(arrAllUsersByMonth, arrAllBusinessByMonth)} />}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default ChartPage;\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\TableTasks.js",["383"],"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nfunction createData(subject, description, date, status) {\r\n  return {\r\n    subject,\r\n    description,\r\n    date,\r\n    status\r\n  };\r\n}\r\n\r\nconst rows = [];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Dessert (100g serving)',\r\n  },\r\n  {\r\n    id: 'calories',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Calories',\r\n  },\r\n  {\r\n    id: 'fat',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Fat (g)',\r\n  },\r\n  {\r\n    id: 'carbs',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Carbs (g)',\r\n  },\r\n  {\r\n    id: 'protein',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Protein (g)',\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n    props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all desserts',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n        }),\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function TableTasks() {\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Paper sx={{ width: '100%', mb: 2 }}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 rows.slice().sort(getComparator(order, orderBy)) */}\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            'aria-labelledby': labelId,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: (dense ? 33 : 53) * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </Box>\r\n  );\r\n}","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reduces\\users.js",["384"],"import * as actionTypes from '../ActionTypes'\r\nconst initialUsers = {\r\n    AllUsers: [],\r\n    UserSearch: null,\r\n    SelectedUser: null,\r\n    ColorFirstName: \"\",\r\n    ColorLastName: \"\",\r\n    CurrentUser: null,\r\n    SingUp: false,\r\n    IfExist: false,\r\n    ErrorInAdd: false,\r\n    IdUserManagerUpdate: null\r\n}\r\nexport const usersReducer = (state = initialUsers, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FILL_ALL_USERS:\r\n            return {\r\n                ...state,\r\n                AllUsers: action.payload\r\n            };\r\n        case actionTypes.REFRESH_RESULT:\r\n            return {\r\n                ...state,\r\n                UserSearch: action.payload\r\n            }\r\n        case actionTypes.DELETE_RESULT_USER:\r\n            return {\r\n                ...state,\r\n                UserSearch: action.payload\r\n            }\r\n        case actionTypes.SELECTED_USER:\r\n            return {\r\n                ...state,\r\n                SelectedUser: action.payload\r\n            }\r\n        case actionTypes.NO_SELECTED_USER:\r\n            return {\r\n                ...state,\r\n                SelectedUser: action.payload\r\n            }\r\n        case actionTypes.CHANGE_COLOR_FIRST_NAME:\r\n            return {\r\n                ...state,\r\n                ColorFirstName: action.payload\r\n            }\r\n        case actionTypes.CHANGE_COLOR_LAST_NAME:\r\n            return {\r\n                ...state,\r\n                ColorLastName: action.payload\r\n            }\r\n        case actionTypes.SING_IN:\r\n            localStorage.setItem(\"currentUser\", null);\r\n            localStorage.setItem(\"currentUserPassword\", action.payload.password);\r\n            localStorage.setItem(\"currentUserMail\", action.payload.email);\r\n            localStorage.setItem(\"currentUserId\", action.payload._id);\r\n\r\n            return {\r\n                ...state,\r\n                CurrentUser: action.payload\r\n            }\r\n\r\n\r\n        case actionTypes.SING_OUT:\r\n            localStorage.setItem(\"currentUserPassword\", null);\r\n            localStorage.setItem(\"currentUserMail\", null);\r\n            localStorage.setItem(\"currentUserId\", null);\r\n            return {\r\n                ...state,\r\n                CurrentUser: null\r\n            }\r\n\r\n        case actionTypes.IF_EXIST:\r\n            return {\r\n                ...state,\r\n                IfExist: action.payload\r\n            }\r\n\r\n        case actionTypes.IF_ERROR_IN_ADD:\r\n            return {\r\n                ...state,\r\n                ErrorInAdd: action.payload\r\n            }\r\n        case actionTypes.CHANGE_ID_USER_MANAGER_UPDATE:\r\n            return {\r\n                ...state,\r\n                IdUserManagerUpdate: action.payload\r\n            }\r\n\r\n\r\n    }\r\n    return state;\r\n}\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reduces\\business.js",["385","386","387","388"],"import * as actionTypes from '../ActionTypes';\r\nimport GeolocationService from '../services/SortService';\r\nimport Geocode from \"react-geocode\";\r\nimport { FromAddress } from '../util';\r\n\r\n\r\nconst initialBusiness = {\r\n    AllBusiness: [],\r\n    BusinessSearch: [],\r\n    SelectedBusiness: null,\r\n    ColorName: \"\",\r\n    updateBuisness: null\r\n}\r\nexport const businessReducer =  (state = initialBusiness, action) => {\r\n     switch (action.type) {\r\n        case actionTypes.FILL_ALL_BUSINESS:\r\n\r\n            // const places = [];\r\n            // let place = {};\r\n            // let sorted = [];\r\n            // let loc = {};\r\n\r\n            // await navigator.geolocation.getCurrentPosition(\r\n\r\n            //     async  arr => {\r\n\r\n            //         place = arr;\r\n\r\n            //         for (let index = 0; index < action.payload.length; index++) {\r\n            //             console.log(action.payload[index]);\r\n\r\n            //             await FromAddress(action.payload[index].adress).then(Address => places.push(Address))\r\n            //                 .catch(error => console.log(\"לא נמצא כתובת \" + action.payload[index].adress));\r\n            //         }\r\n\r\n            //         let arrSort = await GeolocationService.beginSort(\r\n            //             loc ? loc.results[0].geometry.location.lat : place.coords.latitude,\r\n            //             loc ? loc.results[0].geometry.location.lng : place.coords.longitude,\r\n            //             places\r\n            //         );\r\n\r\n            //         sorted = arrSort.map((location) => action.payload[location.index]);\r\n            //     }\r\n            // )\r\n\r\n\r\n\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                AllBusiness: action.payload\r\n            };\r\n\r\n            \r\n        case actionTypes.REFRESH_RESULT_BUSINESS:\r\n            return {\r\n                ...state,\r\n                BusinessSearch: action.payload\r\n            }\r\n        case actionTypes.DELETE_RESULT_BUSINESS:\r\n            return {\r\n                ...state,\r\n                BusinessSearch: action.payload\r\n            }\r\n        case actionTypes.SELECTED_BUSINESS:\r\n            return {\r\n                ...state,\r\n                SelectedBusiness: action.payload\r\n            }\r\n        // case actionTypes.NO_SELECTED_USER:\r\n        //     return {\r\n        //         ...state,\r\n        //         SelectedUser: action.payload\r\n        //     }\r\n        case actionTypes.CHANGE_COLOR_NAME:\r\n            return {\r\n                ...state,\r\n                ColorName: action.payload\r\n            }\r\n        case actionTypes.UPDATE_BUISNESS:\r\n            return {\r\n                ...state,\r\n                updateBuisness: action.payload\r\n            }\r\n\r\n    }\r\n    return state;\r\n}\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\BusinessSearch.js",["389","390","391","392","393","394","395","396"],"import 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../classes/business';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport {\r\n    GetAllBusiness, SaveResultBusiness, SearchBusiness, DeleteResultBusiness,\r\n    ChangeColorName, GetCurrentUser, SaveAllBusiness\r\n} from '../../actions/index';\r\n\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport './BusinessSearch.scss'\r\nimport { getAllCategories, SortllBusiness, GetAllBusinessFunc } from '../../util/index';\r\n\r\nconst BusinessSearch = (props) => {\r\n\r\n\r\n    let name = useRef();\r\n    let phoneNamber = useRef();\r\n    let email = useRef();\r\n    let adress = useRef();\r\n    let listCategory = useRef();\r\n    const [categoriesArr, setCategoriesArr] = useState([]);\r\n\r\n\r\n\r\n    const [countBusiness, setCountBusiness] = useState();\r\n    const [ifSorted, setifSorted] = useState(false);\r\n\r\n    // props.AllUsers פעם ראשונה שמבקר באתר נשלף כל המשתמשים למערך\r\n    if (props.AllBusiness && props.AllBusiness.length == 0) {\r\n        props.GetAllBusiness();\r\n    }\r\n\r\n\r\n\r\n\r\n    // פונקצית חיפוש Users\r\n    const searchBusiness = () => {\r\n\r\n        let Business = new business();\r\n        Business.name = name.current.value;\r\n        Business.phoneNamber = phoneNamber.current.value;\r\n        Business.email = email.current.value;\r\n        Business.adress = adress.current.value;\r\n        Business.listCategory = listCategory.current.getSelectedItems();\r\n        if (Business.name || Business.phoneNamber || Business.email || Business.adress || Business.listCategory.length != 0) {\r\n            props.ChangeColorName(Business.name);\r\n            props.SearchBusiness(Business, props.AllBusiness);\r\n        }\r\n        else\r\n            props.SaveResultBusiness([]);\r\n    }\r\n\r\n    //styles\r\n    const styleDivInput_1 = { \"width\": \"40%\" }\r\n    const styleDivInput_2 = { \"width\": \"40%\", \"margin-top\": \"32px\" }\r\n\r\n    const borderR_right = { \"border-radius\": \"8.285714rem\", \"line-height\": \"1.5em\", \"margin-left\": \"2%\", \"border-color\": \"#726363\", \"border-width\": \"2px\" }\r\n    const borderR_left = { \"border-radius\": \"8.285714rem\", \"line-height\": \"1.5em\", \"border-color\": \"#726363\", \"border-width\": \"2px\" }\r\n\r\n    const styleDivInput_2For_Select = { \"margin-left\": \" 2%\", \"width\": \"40%\", \"margin-top\": \"32px\" }\r\n    const styleDivInput_2For_Phone = { \"margin-left\": \"-1.1%\", \"width\": \"40%\", \"margin-top\": \"32px\" }\r\n\r\n    //styles\r\n\r\n    useEffect(() => {\r\n        // props.setCircularProgresStateFunc(true);\r\n        getAllCategories().then(scss => {\r\n            let arrName = scss.data.map((data) => data.name);\r\n            setCategoriesArr(arrName);\r\n        });\r\n\r\n\r\n        if (!ifSorted && props.AllBusiness && props.AllBusiness.length != 0) {\r\n\r\n            setifSorted(true);\r\n            SortllBusiness(props.AllBusiness, props.SaveAllBusiness,props.setCircularProgresStateFunc);\r\n            // props.setCircularProgresStateFunc(false);\r\n\r\n        }\r\n\r\n    }, [props.AllBusiness]);\r\n\r\n\r\n\r\n    return (<>\r\n        {\r\n            <form className=\"ui form\">\r\n\r\n                <div className=\"ui form\">\r\n\r\n                    <div className=\"two fields\">\r\n                        <div class=\"ui icon input\" style={styleDivInput_1}>\r\n                            <input type=\"text\" placeholder=\"Name\" ref={name} onKeyUp={searchBusiness}\r\n                                style={borderR_left} />\r\n                            <i class=\"user icon\"></i>\r\n                        </div>\r\n                        <div class=\"ui icon input\" style={styleDivInput_1}>\r\n                            <input type=\"text\" placeholder=\"Address\" ref={adress} onKeyUp={searchBusiness}\r\n                                style={borderR_right} />\r\n                            <i class=\"map marker alternate icon\"></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"ui icon input\" style={{ \"width\": \"81.8%\", \"margin-left\": \"-7.5px\", \"margin-top\": \"19px\" }}>\r\n                        <input type=\"text\" placeholder=\"Email\" ref={email} onKeyUp={searchBusiness}\r\n                            style={borderR_left} />\r\n                        <i class=\"at icon\"></i>\r\n                    </div>\r\n\r\n                    <div class=\"ui icon input\" style={styleDivInput_2For_Phone} >\r\n                        <input type=\"number\" placeholder=\"Phone Number\" ref={phoneNamber} onKeyUp={searchBusiness}\r\n                            style={borderR_left} />\r\n                        <i class=\"phone icon\"></i>\r\n                    </div>\r\n\r\n                    <div class=\"ui icon input\" style={styleDivInput_2For_Select}>\r\n\r\n                        <Multiselect\r\n                            options={categoriesArr ? categoriesArr : []}\r\n                            isObject={false}\r\n                            ref={listCategory} type=\"text\"\r\n                            onSelect={searchBusiness}\r\n                            onRemove={searchBusiness}\r\n                            style={borderR_right}\r\n\r\n\r\n                        />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form>}\r\n\r\n\r\n    </>);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { CurrentUser: state.usersPart.CurrentUser, AllBusiness: state.businessPart.AllBusiness, BusinessSearch: state.businessPart.BusinessSearch };\r\n}\r\nexport default connect(mapStateToProps, {\r\n    SortllBusiness, GetCurrentUser, GetAllBusiness, SaveResultBusiness\r\n    , SearchBusiness, DeleteResultBusiness, ChangeColorName, SaveAllBusiness\r\n})(BusinessSearch);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\PrivateArea.js",["397","398","399","400","401","402"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport UpdatePersonalDetails from './UpdatePersonalDetails';\r\nimport BusinessInformationUpdate from './BusinessInformationUpdate';\r\nimport AddingBusiness from './AddingBusiness';\r\nimport SearchHistory from './SearchHistory';\r\nimport ScrollableTabsButtonAuto from './SearchHistory';\r\nimport { connect } from \"react-redux\";\r\nimport { ChangeUpdateBuisness, ChangeColorFirstName, ChangeColorLastName } from '../../actions/index'\r\nimport { GetCurrentUser } from '../../util';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Tasks from './Tasks';\r\n\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n    root: {\r\n        color: '#eaeaf0',\r\n        display: 'flex',\r\n        height: 22,\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        color: '#784af4',\r\n    },\r\n    circle: {\r\n        width: 8,\r\n        height: 8,\r\n        borderRadius: '50%',\r\n        backgroundColor: 'currentColor',\r\n    },\r\n    completed: {\r\n        color: '#784af4',\r\n        zIndex: 1,\r\n        fontSize: 18,\r\n    },\r\n});\r\n\r\nfunction QontoStepIcon(props) {\r\n    const classes = useQontoStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n            })}\r\n        >\r\n            {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n    active: PropTypes.bool,\r\n    completed: PropTypes.bool,\r\n};\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 22,\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    line: {\r\n        height: 3,\r\n        border: 0,\r\n        backgroundColor: '#eaeaf0',\r\n        borderRadius: 1,\r\n    },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: '#ccc',\r\n        zIndex: 1,\r\n        color: '#fff',\r\n        width: 50,\r\n        height: 50,\r\n        display: 'flex',\r\n        borderRadius: '50%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n    },\r\n    completed: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons = {\r\n        1: <SettingsIcon />,\r\n        2: <GroupAddIcon />,\r\n        3: <VideoLabelIcon />,\r\n        4: <VideoLabelIcon />,\r\n        5: <SettingsIcon />\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n                [classes.completed]: completed,\r\n            })}\r\n        >\r\n            {icons[String(props.icon)]}\r\n        </div>\r\n    );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n\r\n    active: PropTypes.bool,\r\n\r\n    completed: PropTypes.bool,\r\n\r\n    icon: PropTypes.node,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction getSteps() {\r\n    return ['Update Personal Details', 'Business Information Update', 'Adding Business', 'Search History', 'Task'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n    switch (step) {\r\n        case 0:\r\n            return <UpdatePersonalDetails />;\r\n        case 1:\r\n            return <BusinessInformationUpdate />;\r\n        case 2:\r\n            return <AddingBusiness />;\r\n        case 3:\r\n            return <ScrollableTabsButtonAuto />;\r\n        case 4:\r\n            return <Tasks />;\r\n        default:\r\n            return <UpdatePersonalDetails />;\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction PrivateArea(props) {\r\n\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(4);\r\n    const steps = getSteps();\r\n\r\n\r\n    // const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n\r\n    const handleNext = (index) => {\r\n        setActiveStep(index);\r\n    };\r\n\r\n    useEffect(() => {\r\n        props.ChangeColorFirstName(\"\");\r\n        props.ChangeColorLastName(\"\");\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root} style={{\"margin-top\": \"9%\"}}>\r\n            <div></div>\r\n            <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector style={{\"top\": \"29px\",\r\n                        \"width\": \"0%\",\r\n                        \"margin-left\": \"-8%\"}}/>}>\r\n                            \r\n                {steps.map((label, index) => (\r\n                    <Step key={index} onClick={() => handleNext(index)} >\r\n                        <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { updateBuisness: state.businessPart.updateBuisness };\r\n}\r\nexport default connect(mapStateToProps, { ChangeUpdateBuisness, ChangeColorFirstName, ChangeColorLastName })(PrivateArea);\r\n\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\UseresSearch.js",["403","404","405","406","407","408","409","410","411"],"import 'react-bootstrap';\r\nimport { GetAllUsers, SaveResultUsers, SearchUsers, DeleteResultUser, ChangeColorFirstName, ChangeColorLastName } from '../../actions/index';\r\nimport user from '../classes/user';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport ResultSearchUser from './ResultSearchUser';\r\nimport { SendMail } from '../../util/index';\r\n\r\nconst UsersSearch = (props) => {\r\n\r\n    const send = (mail) => {\r\n        let Email = {\r\n            toUser: mail,\r\n            subject: \"הצטרפות לאתר מי מייל\",\r\n            text: `<h1>${\"הצטרפות לאתר מי מייל\"}</h1>`\r\n        }\r\n        SendMail(Email);\r\n    }\r\n    function validateEmail(email) {\r\n        const re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        return re.test(email);\r\n    }\r\n\r\n    let firstName = useRef();\r\n    let lastName = useRef();\r\n    let phoneNamber = useRef();\r\n    let email = useRef();\r\n    let adress = useRef();\r\n\r\n    // props.AllUsers פעם ראשונה שמבקר באתר נשלף כל המשתמשים למערך\r\n    if (props.AllUsers.length == 0)\r\n        props.GetAllUsers();\r\n\r\n\r\n    // פונקצית חיפוש Users\r\n    const searchUsers = () => {\r\n\r\n        let User = new user();\r\n        User.firstName = firstName.current.value;\r\n        User.lastName = lastName.current.value;\r\n        User.phoneNamber = phoneNamber.current.value;\r\n        User.email = email.current.value;\r\n        User.adress = adress.current.value;\r\n\r\n        if (User.firstName || User.lastName || User.phoneNamber || User.email || User.adress) {\r\n            props.ChangeColorFirstName(User.firstName);\r\n            props.ChangeColorLastName(User.lastName);\r\n            if (User.email && validateEmail(User.email) && !props.AllUsers.find((item) => item.email == User.email))\r\n                send(User.email)\r\n            props.SearchUsers(User, props.AllUsers);\r\n        }\r\n        else\r\n            props.SaveResultUsers([]);\r\n\r\n    }\r\n\r\n    const styleDivInput = { \"width\": \"40%\" }\r\n   \r\n    const borderR_right = { \"border-radius\": \"8.285714rem\" ,\"line-height\": \"1.5em\",\"margin-left\": \"2%\",\"border-color\": \"#726363\",\"border-width\":\"2px\"}\r\n    const borderR_left = { \"border-radius\": \"8.285714rem\" ,\"line-height\": \"1.5em\",\"border-color\": \"#726363\",\"border-width\":\"2px\"}\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n\r\n    return (<>\r\n        {\r\n        <form className=\"ui form\">\r\n            <div className=\"ui form\">\r\n                <div className=\"two fields\">\r\n                  \r\n                    <div class=\"ui icon input\" style={styleDivInput}>\r\n\r\n                        <input type=\"text\" placeholder=\"First Name\" ref={firstName} onKeyUp={searchUsers}\r\n                            style={borderR_left} />\r\n                        <i class=\"user icon\"></i>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"ui icon input\" style={styleDivInput}>\r\n\r\n                        <input type=\"text\" placeholder=\"Last Name\" ref={lastName} onKeyUp={searchUsers}\r\n                            style={borderR_right} />\r\n                        <i class=\"user icon\"></i>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                \r\n          \r\n\r\n                <div class=\"ui icon input\" style={{ \"width\": \"81.8%\" ,\"margin-left\": \"-7.5px\",\"margin-top\": \"19px\"}}>\r\n\r\n                    <input type=\"text\" placeholder=\"Email\" ref={email} onKeyUp={searchUsers}\r\n                        style={borderR_left} />\r\n                    <i class=\"at icon\"></i>\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"two fields\" style={{\"margin-top\": \"32px\"}}>\r\n       \r\n                    <div class=\"ui icon input\" style={styleDivInput}>\r\n\r\n                        <input type=\"number\" placeholder=\"Phone Number\" ref={phoneNamber} onKeyUp={searchUsers}\r\n                            style={borderR_left} />\r\n                        <i class=\"phone icon\"></i>\r\n\r\n                    </div>              \r\n\r\n                    <div class=\"ui icon input\" style={styleDivInput}>\r\n\r\n                        <input type=\"text\" placeholder=\"Address\" ref={adress} onKeyUp={searchUsers}\r\n                            style={borderR_right} />\r\n                        <i class=\"map marker alternate icon\"></i>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </form>\r\n        }\r\n    </>);\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { CurrentUser: state.usersPart.CurrentUser, AllUsers: state.usersPart.AllUsers, UserSearch: state.usersPart.UserSearch };\r\n}\r\nexport default connect(mapStateToProps, { GetAllUsers, SaveResultUsers, SearchUsers, DeleteResultUser, ChangeColorFirstName, ChangeColorLastName })(UsersSearch);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\404\\Page404.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\Search.js",["412","413","414","415","416","417","418"],"import { connect } from \"react-redux\";\r\nimport { GetCurrentUser, SignOut } from '../../actions/index';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport '../search/Search.scss'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Route } from 'react-router-dom';\r\nimport UsersSearch from './UseresSearch';\r\nimport BusinessSearch from './BusinessSearch';\r\nimport ResultSearchUser from './ResultSearchUser';\r\nimport ResultSearchBusiness from './ResultSearchBusiness';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Advertisements from \"../Advertisements/Advertisements\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        // backgroundImage:'url(./img/back.png)'\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#ff716e',\r\n        width: \"65px\",\r\n        height: \"65px\",\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#ff716e'\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\nconst Search = (props) => {\r\n\r\n    const [value, setValue] = useState('two');\r\n    const [CircularProgresState, setCircularProgresState] = useState(true);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    let users = useRef();\r\n    let business = useRef();\r\n\r\n\r\n    const history = useHistory();\r\n    const changeHistory = (path) => {\r\n        history.push(path);\r\n    }\r\n\r\n    const styleTab1 = { \"font-weight\": \"bold\", \"font-size\": \"16px\", \"margin-right\": \"6px\", \"color\": \"rgb(11, 11, 43)\" }\r\n    const styleTab2 = { \"font-weight\": \"bold\", \"font-size\": \"16px\", \"color\": \"rgb(11, 11, 43)\" }\r\n    const styleTabs = { \"width\": \"100em\", \"margin-left\": \"-31%\" }\r\n    const styleBox = { \"margin-top\": \"175px\", \"margin-left\": \"760px\" }\r\n\r\n    const styleGrid = { \"max-width\": \"32.333333%\", \"overflow\": \"scroll\", \"margin-top\": \"6%\", \"width\": \"100%\", \"box-shadow\": \"2px 2px 2px 2px grey\" }\r\n\r\n    const divSearch = { \"width\": \"71%\", \"margin-left\": \"45%\", \"margin-top\": \"2%\" }\r\n\r\n    const setCircularProgresStateFunc=(val)=>{\r\n        setTimeout(() => {\r\n            setCircularProgresState(val);\r\n        }, 5000);\r\n    }\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Grid container component=\"main\" className={classes.root}>\r\n                <Grid item xs={12} sm={4} md={7} component={Paper} elevation={6} square style={styleGrid}>\r\n\r\n                    <Route path=\"/search/users\">\r\n\r\n                        <ResultSearchUser />\r\n\r\n                    </Route>\r\n\r\n                    <Route path=\"/search/business\">\r\n\r\n                        {CircularProgresState ? <Box sx={{ display: 'flex' }} style={{ \"margin-top\": \"60%\", \"margin-left\": \"45%\" }}>\r\n                           <span>ממין תוצאות לפי מיקומך</span>\r\n                            <CircularProgress />\r\n                        </Box> : <ResultSearchBusiness />}\r\n\r\n                    </Route>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={1} md={5} style={{ \"max-width\": \"62.6667%\" }}>\r\n\r\n                    <Box style={styleBox}>\r\n\r\n                        <Tabs\r\n                            value={value}\r\n                            onChange={handleChange}\r\n\r\n                            aria-label=\"secondary tabs example\"\r\n                            style={styleTabs}\r\n                            TabIndicatorProps={{\r\n                                style: {\r\n                                    backgroundColor: \"rgb(255, 113, 110)\"\r\n                                }\r\n                            }}\r\n                        >\r\n                            <Tab value=\"one\" style={styleTab1} label=\"חיפוש עסקים\" onClick={() => changeHistory('/search/business')} />\r\n\r\n                            <Tab value=\"two\" style={styleTab2} label=\"חיפוש אנשים\" onClick={() => changeHistory('/search/users')} />\r\n\r\n                        </Tabs>\r\n\r\n                    </Box>\r\n                    <div style={divSearch}>\r\n                        <Route path=\"/search/users\">\r\n                            <>  <UsersSearch /></>\r\n                        </Route>\r\n\r\n                        <Route path=\"/search/business\">\r\n                            <>    <BusinessSearch setCircularProgresStateFunc={setCircularProgresStateFunc} /></>\r\n                        </Route>\r\n                    </div>\r\n                    {/* <Advertisements/> */}\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { CurrentUser: state.usersPart.CurrentUser };\r\n}\r\nexport default connect(mapStateToProps, { GetCurrentUser })(Search);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\Manager.js",["419","420","421"],"import React, { useEffect, useState } from 'react';\r\nimport TableTasks from './TableTasks';\r\nimport icon from '../img/icon.gif'\r\nconst Manager = (props) => {\r\n\r\n    return (<>\r\n    <TableTasks/>\r\n       </>);\r\n}\r\n\r\nexport default Manager;\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Logo\\Logo.js",["422"],"import logo from './img/logo.png';\r\nconst Logo = (props) => {\r\n    return (<>\r\n        <a href=\"/\">\r\n            <img src={logo} style={{ \"width\": \"10rem\", \"margin-left\": \"2rem\" }} />\r\n        </a>\r\n    </>);\r\n}\r\n\r\nexport default Logo;\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\SingUp.js",["423"],"import React, { useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport './SingUp.scss';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport BasicDetails from './BasicDetails';\r\nimport { Route } from 'react-router-dom';\r\nimport ExpandingDetails from './ExpandingDetails';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n\r\n  },\r\n  image: {\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#ff716e',\r\n    width: \"65px\",\r\n    height: \"65px\",\r\n\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: '#ff716e'\r\n  },\r\n\r\n}));\r\n\r\n\r\nfunction SignUp(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n  useEffect(() => {\r\n  }, [])\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <Grid item xs={12} sm={10} md={7} component={Paper} elevation={6} square >\r\n\r\n        <div className=\"backrund\"></div>\r\n\r\n        <div className={classes.paper}>\r\n\r\n          <Route exact path={'/SignUp'}>\r\n\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon style={{ \"font-size\": \"2.5rem\" }} />\r\n            </Avatar>\r\n\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign Up\r\n          </Typography>\r\n          \r\n          </Route>\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <Route exact path={'/SignUp'}>\r\n            <BasicDetails />\r\n          </Route>\r\n\r\n          <Route path={'/SignUp/ExpandingDetails'}>\r\n            <ExpandingDetails />\r\n          </Route>\r\n\r\n        </div>\r\n\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={1} md={5} className={classes.image + \" opcityandimg\"} />\r\n\r\n    </Grid>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {};\r\n}\r\nexport default connect(mapStateToProps, {})(SignUp);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\AddCtegory.js",["424","425","426","427"],"import React, { useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AddTask, GetAllTypeTsks } from '../../util/index';\r\nimport task from '../classes/task';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { useParams } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nconst AddCtegory = (props) => {\r\n\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const category = register('category', { required: \"This is required.\", minLength: { value: 5, message: \"Min 5\" } })\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    let Task = new task();\r\n\r\n    const AddTaskFunc = async (data) => {\r\n        Task.date = new Date();\r\n\r\n        Task.codeUser = localStorage.getItem(\"currentUserId\");\r\n\r\n        let all = await GetAllTypeTsks();\r\n        Task.type = all.data.find((type) => type.code == 2)._id;\r\n\r\n        Task.otherbuisness = null;\r\n        Task.status = false;\r\n        Task.desription = data.category;\r\n        Task.otherUser = null;\r\n\r\n        AddTask(Task).then((succ) => {\r\n\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"נשלח בהצלחה\");\r\n            handleClick();\r\n\r\n\r\n        }).catch((error) => {\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n\r\n        });\r\n        console.log(Task);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, [])\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n\r\n\r\n    // alerts\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (<>\r\n\r\n\r\n        {/* alerts */}\r\n\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n        </Snackbar>\r\n\r\n        {/* alerts */}\r\n\r\n\r\n        <div className=\"divAddUser\">\r\n            <p>{props.content}</p>\r\n            <form noValidate onSubmit={handleSubmit(AddTaskFunc)}>\r\n                <TextField\r\n                    label=\"Dense\"\r\n                    id=\"outlined-margin-dense\"\r\n                    className={classes.textField}\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"category\"\r\n                    {...category}\r\n                />\r\n                <ErrorMessage errors={errors} name=\"category\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                    הגש בקשה\r\n      </Button>\r\n            </form>\r\n        </div></>);\r\n}\r\n\r\nexport default AddCtegory;","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\UpdataUser.js",["428","429","430"],"import React, { useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AddTask, GetAllTypeTsks } from '../../util/index';\r\nimport task from '../classes/task';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { useParams } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nconst UpdataUser = (props) => {\r\n\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const desription = register('desription', { required: \"This is required.\", minLength: { value: 5, message: \"Min 5\" } })\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const { idUser } = useParams();\r\n\r\n    let Task = new task();\r\n\r\n    const AddTaskFunc = async (data) => {\r\n        Task.date = new Date();\r\n\r\n        Task.codeUser = localStorage.getItem(\"currentUserId\");\r\n\r\n\r\n        let all = await GetAllTypeTsks();\r\n        Task.type = all.data.find((type) => type.code == 1)._id;\r\n\r\n        Task.otherbuisness = null;\r\n        Task.status = false;\r\n        Task.desription = data.desription;\r\n        Task.otherUser = idUser;\r\n\r\n        AddTask(Task).then((succ) => {\r\n\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"נשלח בהצלחה\");\r\n            handleClick();\r\n\r\n\r\n        }).catch((error) => {\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n\r\n        });\r\n        console.log(Task);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n\r\n\r\n    // alerts\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (<>\r\n\r\n\r\n        {/* alerts */}\r\n\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n        </Snackbar>\r\n\r\n        {/* alerts */}\r\n\r\n\r\n        <div style={{ \"margin-top\": \"37%\" }}>\r\n            <form noValidate onSubmit={handleSubmit(AddTaskFunc)}>\r\n                <TextField\r\n                    label=\"Dense\"\r\n                    id=\"outlined-margin-dense\"\r\n                    className={classes.textField}\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"desription\"\r\n                    {...desription}\r\n                />\r\n                <ErrorMessage errors={errors} name=\"desription\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                    הגש בקשה\r\n      </Button>\r\n            </form>\r\n        </div></>);\r\n}\r\n\r\nexport default UpdataUser;","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\UpdataBusiness.js",["431","432","433"],"import React, { useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AddTask, GetAllTypeTsks } from '../../util/index';\r\nimport task from '../classes/task';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { useParams } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nconst UpdataBusiness = (props) => {\r\n\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const desription = register('desription', { required: \"This is required.\", minLength: { value: 5, message: \"Min 5\" } })\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const { idBusiness } = useParams();\r\n\r\n    let Task = new task();\r\n\r\n    const AddTaskFunc = async (data) => {\r\n        Task.date = new Date();\r\n\r\n        Task.codeUser = localStorage.getItem(\"currentUserId\");\r\n\r\n\r\n        let all = await GetAllTypeTsks();\r\n        Task.type = all.data.find((type) => type.code == 4)._id;\r\n\r\n        Task.otherbuisness = idBusiness;\r\n        Task.status = false;\r\n        Task.desription = data.desription;\r\n        Task.otherUser = null;\r\n\r\n        AddTask(Task).then((succ) => {\r\n\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"נשלח בהצלחה\");\r\n            handleClick();\r\n\r\n\r\n        }).catch((error) => {\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n\r\n        });\r\n        console.log(Task);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n\r\n\r\n    // alerts\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (<>\r\n\r\n\r\n        {/* alerts */}\r\n\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n        </Snackbar>\r\n\r\n        {/* alerts */}\r\n\r\n\r\n        <div style={{ \"margin-top\": \"37%\" }}>\r\n            <form noValidate onSubmit={handleSubmit(AddTaskFunc)}>\r\n                <TextField\r\n                    label=\"Dense\"\r\n                    id=\"outlined-margin-dense\"\r\n                    className={classes.textField}\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"desription\"\r\n                    {...desription}\r\n                />\r\n                <ErrorMessage errors={errors} name=\"desription\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                    הגש בקשה\r\n      </Button>\r\n            </form>\r\n        </div></>);\r\n}\r\n\r\nexport default UpdataBusiness;","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\AddUser.js",["434","435","436","437"],"import React, { useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AddTask, GetAllTypeTsks } from '../../util/index';\r\nimport task from '../classes/task';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { useParams } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport './classes.scss'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nconst AddUser = (props) => {\r\n\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const mail = register('mail', { required: \"This is required.\" })\r\n\r\n    const classes = useStyles();\r\n\r\n    let Task = new task();\r\n\r\n    const AddTaskFunc = async (data) => {\r\n        Task.date = new Date();\r\n\r\n        Task.codeUser = localStorage.getItem(\"currentUserId\");\r\n\r\n        let all = await GetAllTypeTsks();\r\n        Task.type = all.data.find((type) => type.code ==3)._id;\r\n\r\n        Task.otherbuisness = null;\r\n        Task.status = false;\r\n        Task.desription = \"הוסף את המשתמש עם המייל:\"+data.mail;\r\n        Task.otherUser = null;\r\n        Task.mail=data.mail;\r\n\r\n        AddTask(Task).then((succ) => {\r\n\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"נשלח בהצלחה\");\r\n            handleClick();\r\n\r\n\r\n        }).catch((error) => {\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n\r\n        });\r\n        console.log(Task);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, [])\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n\r\n\r\n    // alerts\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (<>\r\n\r\n\r\n        {/* alerts */}\r\n\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n        </Snackbar>\r\n\r\n        {/* alerts */}\r\n\r\n\r\n        <div className=\"divAddUser\">\r\n            <p>{props.content}</p>\r\n            <form noValidate onSubmit={handleSubmit(AddTaskFunc)}>\r\n                <TextField\r\n                    label=\"Dense\"\r\n                    id=\"outlined-margin-dense\"\r\n                    className={classes.textField}\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"mail\"\r\n                    {...mail}\r\n                />\r\n                <ErrorMessage errors={errors} name=\"mail\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n                \r\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                    הגש בקשה\r\n      </Button>\r\n            </form>\r\n        </div></>);\r\n}\r\n\r\nexport default AddUser;","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\index.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\ChartPage\\components\\Page.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\ChartPage\\utils\\demos.js",["438"],"import random from 'faker/lib/random';\r\n\r\nexport const randomNum = (min = 0, max = 1000) => {\r\n    //   return random().number({ min, max });\r\n    return 10;\r\n};\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\ChartPage\\utils\\colors.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\ForgotPassword.js",["439","440","441","442","443","444","445","446"],"\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { GetCurrentUser, SignOut } from '../../actions/index';\r\nimport './SignIn.scss';\r\nimport React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { GetCurrentUserByPaaswordAndMail, CheckManager, SendPasswordIfExist } from '../../util/index';\r\nimport { SignIn as SignInFunc } from '../../actions/index';\r\nimport Input from '@mui/material/Input';\r\nimport './ForgotPassword.scss';\r\n\r\nconst ariaLabel = { 'aria-label': 'description' };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        // backgroundImage:'url(./img/back.png)'\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#ff716e',\r\n        width: \"65px\",\r\n        height: \"65px\",\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n}));\r\n\r\nconst marginToGrid={\r\n    \"margin-top\": \"33px\"\r\n  }\r\nconst styleBlue={\r\n  \"width\": \"106em\",\r\n  \"background-color\": \"#0b0b2b \",\r\n  \"margin-top\": \"49.8%\",\r\n  \"margin-left\":\"-6%\", \r\n  \"height\": \"2em\"\r\n}\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nconst ForgotPassword = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let mail;\r\n\r\n    const [ifManager, setifManager] = useState(false);\r\n    const [ifNoGoToLogin, setifNoGoToLogin] = useState(false);\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    const GetCurrentUser = async () => {\r\n\r\n\r\n\r\n        SendPasswordIfExist(mail).then(async succ => {\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"הסיסמא נשלחה בהצלחה\");\r\n            handleClick();\r\n\r\n        }).catch(error => {\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    if (ifNoGoToLogin)\r\n        return ifManager ? <Redirect to={'/Manager'} /> : <Redirect to={{ pathname: \"/Search/users\" }} />;\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* alerts */}\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n            </Snackbar>\r\n            {/* alerts */}\r\n            <Grid container component=\"main\" className={classes.root} >\r\n                <CssBaseline />\r\n\r\n                <Grid item xs={12} sm={8} md={5} component={Paper}style={marginToGrid} elevation={6} square>\r\n\r\n                <div className=\"backrundForgot\"></div>\r\n\r\n\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon style={{ \"font-size\": \"2.5rem\" }}/>\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Enter your email\r\n                        </Typography>\r\n                        <form className={classes.form} noValidate>\r\n                            <Grid item xs={12} sm={8} style={{ \"padding\": \"22px\",\"max-width\": \"113.666667%\"}}>\r\n                                <Input placeholder=\"Email Address\"\r\n                                    inputProps={ariaLabel}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    onKeyUp={(e) => mail = e.target.value}    \r\n                                />\r\n                            </Grid>\r\n\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                className={classes.submit}\r\n                                style={{\"border-radius\": \"0px 0px 0px 0px\",\"backgroundColor\":\"#ff716e\"}}\r\n                                onClick={async () => {\r\n                                    await GetCurrentUser();\r\n                                }}>\r\n                               \r\n                                Send\r\n                            </Button>\r\n\r\n                            <Grid container>\r\n\r\n                                <Grid item>\r\n\r\n                                    <Link to=\"/SignIn\">\r\n                                        Already have an account? Sign in\r\n                                    </Link>\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                            <div style={styleBlue}> </div>\r\n\r\n                        </form>\r\n\r\n                    </div>\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2} md={7} className={classes.image + \" opcityandimg\"} />\r\n                \r\n            </Grid>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { CurrentUser: state.usersPart.CurrentUser, SingUp: state.usersPart.SingUp };\r\n}\r\nexport default connect(mapStateToProps, { GetCurrentUser, SignOut, SignInFunc })(ForgotPassword);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\ExpandingDetails.js",["447","448","449","450","451","452","453","454","455","456"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { connect } from \"react-redux\";\r\nimport { IfExist, ErrorInAdd, SignIn } from '../../actions/index';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport './SingUp.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { AddUser, SendMail, UpdateUser } from '../../util/index'\r\nimport Box from '@mui/material/Box';\r\nimport Input from '@mui/material/Input';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport alex from './img/alex.png';\r\n// import ImageUploading from 'react-images-uploading';\r\nimport person from './img/person.png';\r\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\r\nconst ariaLabel = { 'aria-label': 'description' };\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: purple[500],\r\n    '&:hover': {\r\n      backgroundColor: purple[700],\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#e860ff'\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: '#ff716e'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst styleblue = {\r\n  \"width\": \"74em\",\r\n  \"background-color\": \"rgb(11, 11, 43)\",\r\n  \"margin-top\": \"12.3%\",\r\n  \"margin-left\": \"-4%\",\r\n  \"height\": \"2em\"\r\n}\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\n\r\nfunction ExpandingDetails(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [check, setCheck] = useState(false);\r\n\r\n\r\n  const { register, formState: { errors }, handleSubmit } = useForm();\r\n  const adress = register('adress');\r\n\r\n  const onSubmit = data => {\r\n\r\n    let currentUserId = localStorage.getItem(\"currentUserId\");\r\n    data.img = selectedImage;\r\n    data.ifMessege = check;\r\n    console.log(data);\r\n\r\n    let fd = new FormData();\r\n    fd.append('img', imsState);\r\n    fd.append('ifMessege', data.ifMessege);\r\n    fd.append('adress', data.adress);\r\n\r\n    UpdateUser(fd, currentUserId).then((succ) => {\r\n\r\n      settypeAlert(\"success\");\r\n      setmasseg(\"Update Success\");\r\n      handleClick();\r\n\r\n    }).catch((error) => {\r\n\r\n      settypeAlert(\"error\");\r\n      setmasseg(error.response.data)\r\n\r\n      handleClick();\r\n    })\r\n\r\n\r\n  }\r\n\r\n  const onchangeImg = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      setimsState(e.target.files[0]);\r\n      console.log(e.target.files[0]);\r\n      setimsStateToShow(e.target.value);\r\n      e.preventDefault();\r\n      const reader = new FileReader();\r\n      const file = e.target.files[0];\r\n      reader.onloadend = () => {\r\n        setimsStateToShow(reader.result);\r\n      }\r\n      reader.readAsDataURL(file);\r\n    }\r\n\r\n  }\r\n\r\n  onchange = (e) => {\r\n    console.log(e);\r\n    setCheck(e.target.checked);\r\n\r\n  }\r\n\r\n  // alerts\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [typeAlert, settypeAlert] = React.useState(\"\");\r\n  const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n\r\n  const [selectedImage, setselectedImage] = useState();\r\n\r\n  const styleButton = {\r\n    \"background-color\": \"rgb(11, 11, 43)\",\r\n    \"border-radius\": \"0px\",\r\n    \"width\": \"30%\",\r\n    \"margin-left\": \"36%\",\r\n    \"margin-top\": \"3.8%\",\r\n    \"color\": \"white\",\r\n  }\r\n  const styleItem = {\r\n    \"padding\": \"22px\",\r\n    \"margin-top\": \"-15%\",\r\n    \"margin-left\": \"35%\"\r\n  }\r\n  const styleLable = {\r\n    \"width\": \"88%\",\r\n    \"height\": \"30%\",\r\n    \"margin-top\": \"62%\"\r\n  }\r\n  const styleInputImg = {\r\n    \"border-radius\": \"50%\",\r\n    \"height\": \"3em\",\r\n    \"width\": \"21%\",\r\n    \"position\": \"relative\"\r\n  }\r\n  const styleImg = {\r\n    \"width\": \"16em\",\r\n    \"border-radius\": \"50%\",\r\n    \"width\": '100%',\r\n    \"height\": \"17em\",\r\n    \"margin-top\": \"-105%\",\r\n    \"z-index\": \"10\"\r\n  }\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n\r\n  // alerts\r\n\r\n\r\n  const [imsState, setimsState] = useState();\r\n  const [imsStateToShow, setimsStateToShow] = useState();\r\n\r\n\r\n\r\n  //history\r\n  const history = useHistory();\r\n  const changeHistory = (path) => {\r\n    history.push(path);\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    return (props.IfExist(false), props.ErrorInAdd(false))\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n\r\n      {/* alerts */}\r\n\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n      </Snackbar>\r\n\r\n      {/* alerts */}\r\n\r\n      <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)} style={{ \"margin-top\": \"140px\" }} >\r\n\r\n\r\n\r\n        <Grid container spacing={2} >\r\n\r\n          <Grid item xs={12} sm={4} style={styleItem}>\r\n\r\n            <label htmlFor=\"photo-upload\" className=\"custom-file-upload fas\" style={styleLable}>\r\n              <input type=\"file\" className=\"form-control\"\r\n                accept=\"image/png, image/jpeg\"\r\n                name=\"image\" onChange={(e) => onchangeImg(e)}\r\n                style={styleInputImg}\r\n              />\r\n              < PhotoCameraIcon style={{ \"font-size\": \" 2rem\", \"margin-top\": \"-35px\", \"position\": \"absolute\", \"left\": \"347px\" }}></PhotoCameraIcon>\r\n              <img for=\"photo-upload\" style={styleImg} src={imsStateToShow ? imsStateToShow : person} />\r\n\r\n            </label>\r\n\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4} style={{ \"padding\": \"22px\", \"margin-left\": \"33%\" }}>\r\n\r\n            <Input placeholder=\"Address\"\r\n              inputProps={ariaLabel}\r\n              autoComplete=\"fname\"\r\n              name=\"adress\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"adress\"\r\n              autoFocus\r\n              {...adress}\r\n            />\r\n\r\n            <ErrorMessage errors={errors} name=\"address\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n          </Grid>\r\n\r\n\r\n          <Grid item xs={12} style={{ \"margin-left\": \"33%\" }}>\r\n\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" onChange={(e) => onchange(e)} />}\r\n              label=\"קבלת הודעות למייל כאשר מישו חיפש אותי\"\r\n            />\r\n\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n        <ColorButton\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={styleButton}\r\n          className={classes.margin + \" \" + classes.submit}\r\n          type=\"submit\"\r\n          fullWidth\r\n\r\n        >\r\n\r\n          Save\r\n\r\n        </ColorButton>\r\n\r\n        <Grid container justifyContent=\"flex-end\">\r\n\r\n          <Grid item>\r\n\r\n            <Link to=\"/SignIn\">\r\n\r\n              Already have an account? Sign in\r\n\r\n              </Link>\r\n\r\n          </Grid>\r\n\r\n        </Grid>\r\n        <div style={styleblue}> </div>\r\n\r\n      </form>\r\n\r\n    </>\r\n\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  return { ifExist: state.usersPart.IfExist, errorInAdd: state.usersPart.ErrorInAdd };\r\n}\r\nexport default connect(mapStateToProps, { IfExist, ErrorInAdd, SignIn })(ExpandingDetails);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\singIn.js",["457","458","459","460"],"import { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { GetCurrentUser, SignOut } from '../../actions/index';\r\nimport './SignIn.scss';\r\nimport React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { GetCurrentUserByPaaswordAndMail, CheckManager } from '../../util/index';\r\nimport { SignIn as SignInFunc } from '../../actions/index';\r\nimport Input from '@mui/material/Input';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nconst ariaLabel = { 'aria-label': 'description' };\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: purple[500],\r\n    '&:hover': {\r\n      backgroundColor: purple[700],\r\n    },\r\n  },\r\n}))(Button);\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    // backgroundImage:'url(./img/back.png)'\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#ff716e',\r\n    width: \"65px\",\r\n    height: \"65px\",\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: '#ff716e'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst marginToGrid = {\r\n  \"margin-top\": \"33px\",\r\n  \"margin-left\": \"120px\"\r\n}\r\nconst marginOfInput = {\r\n  \"margin-top\": \"auto\",\r\n  \"margin-right\": \"281px\",\r\n  \"margin-bottom\": \"0px\",\r\n  \"margin-left\": \"0px\"\r\n}\r\nconst styleBlue = {\r\n  \"width\": \"106em\",\r\n  \"background-color\": \"#0b0b2b \",\r\n  \"margin-top\": \"11%\",\r\n  \"margin-left\": \"-4%\",\r\n  \"height\": \"2em\"\r\n}\r\nconst styleButton = {\r\n  \"background-color\": \"#fb7375\",\r\n  \"border-radius\": \"0px 0px 0px 0px\",\r\n  \"width\": \"20%\",\r\n  \"margin-left\": \"75%\",\r\n  \"margin-top\": \" 19.2%\",\r\n  'color': 'white'\r\n}\r\nconst styleFoeget = {\r\n  \"margin-top\": \"-26px\",\r\n  \"margin-right\": \"-2px\",\r\n  \"margin-bottom\": \"-13px\",\r\n  \"margin-left\": \"20px\",\r\n}\r\nconst colorLoder = {\r\n  \"background-color\": \"#fb7375\",\r\n  \"color\": \"#fb7375\"\r\n}\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nconst SingIn = (props) => {\r\n\r\n  const classes = useStyles();\r\n  let password;\r\n  let mail;\r\n\r\n  const [ifManager, setifManager] = useState(false);\r\n  const [ifNoGoToLogin, setifNoGoToLogin] = useState(false);\r\n\r\n\r\n\r\n  const [CircularProgresState, setCircularProgresState] = useState(false);\r\n\r\n  // alerts\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  // alerts\r\n\r\n  useEffect(() => {\r\n\r\n  }, [])\r\n\r\n  const GetCurrentUser = async () => {\r\n\r\n    setCircularProgresState(true);\r\n\r\n    GetCurrentUserByPaaswordAndMail(password, mail).then(async succ => {\r\n\r\n      await props.SignInFunc(succ.data);\r\n\r\n      let if404 = await CheckManager(succ.data.email, succ.data.password);\r\n      \r\n      setTimeout(() => {\r\n        if (if404) {\r\n          setifManager(true);\r\n        }\r\n        setifNoGoToLogin(true);\r\n        setCircularProgresState(false);\r\n        window.location.reload();\r\n      }, 5000);\r\n\r\n\r\n    }).catch(error => {\r\n      setCircularProgresState(false);\r\n      handleClick();\r\n\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  if (!CircularProgresState && ifNoGoToLogin)\r\n    return ifManager ? <Redirect to={'/Manager'} /> : <Redirect to={{ pathname: \"/Search/users\" }} />;\r\n\r\n  return (\r\n    // CircularProgresState ? <CircularProgress style={{ \"width\": \"40px\", \"height\": \"40px\", \"margin-top\": \"23%\", \"margin-left\": \" 48%\" }} /> :\r\n\r\n    CircularProgresState ? <Stack sx={{ width: '100%', color: 'grey.500' }} style={{ \"margin-top\": \"23%\" }} spacing={2}>\r\n      <LinearProgress style={colorLoder} />\r\n      <LinearProgress style={colorLoder} />\r\n      <LinearProgress style={colorLoder} />\r\n    </Stack> :\r\n\r\n      <>\r\n\r\n        {/* alerts */}\r\n\r\n        <Snackbar\r\n          open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">Sing In System</Alert>\r\n        </Snackbar>\r\n\r\n        {/* alerts */}\r\n        <Grid container component=\"main\" className={classes.root}>\r\n\r\n          <CssBaseline />\r\n\r\n          <Grid item xs={12} sm={4} md={7} component={Paper} elevation={6} square >\r\n\r\n            <div className=\"backrund\"></div>\r\n\r\n            <div className={classes.paper}>\r\n\r\n              <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon style={{ \"font-size\": \"2.5rem\" }} />\r\n              </Avatar>\r\n\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n            </Typography>\r\n\r\n              <form className={classes.form} noValidate>\r\n\r\n                <Grid container spacing={2} style={marginToGrid}>\r\n\r\n                  <Grid item xs={12} sm={8} style={{ \"padding\": \"22px\" }}>\r\n\r\n                    <Input placeholder=\"Email Address\"\r\n                      inputProps={ariaLabel}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      onKeyUp={(e) => mail = e.target.value}\r\n                    />\r\n\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={8} style={{ \"padding\": \"22px\" }}>\r\n\r\n                    <Input placeholder=\"Password\"\r\n                      inputProps={ariaLabel}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      onKeyUp={(e) => password = e.target.value}\r\n\r\n                    />\r\n\r\n                  </Grid>\r\n                  <Grid container spacing={1} style={styleFoeget}>\r\n\r\n                    <Grid item xs={10} sm={3} >\r\n\r\n                      <Link variant=\"body2\" to=\"ForgotPassword\" style={{ \"margin-right\": \"34%\" }}>\r\n                        Forgot password?\r\n                  </Link>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={10} sm={7} style={{ \"margin-left\": \" 16%\" }}>\r\n                      <Link to=\"SignUp\" style={marginOfInput}>\r\n                        Don't have an account? Sign Up\r\n                </Link>\r\n\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <ColorButton\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={styleButton}\r\n                  className={classes.margin + \" \" + classes.submit}\r\n                  fullWidth\r\n                  onClick={async () => {\r\n                    await GetCurrentUser();\r\n                    // setTimeout(() => window.location.reload(),4500); \r\n                  }}>\r\n                  Sign In\r\n\r\n                  </ColorButton>\r\n\r\n\r\n\r\n\r\n\r\n                <div style={styleBlue}> </div>\r\n\r\n              </form>\r\n\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={1} md={5} className={classes.image + \" opcityandimg\"} />\r\n\r\n        </Grid>\r\n      </>\r\n\r\n\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  return { CurrentUser: state.usersPart.CurrentUser, SingUp: state.usersPart.SingUp };\r\n}\r\nexport default connect(mapStateToProps, { GetCurrentUser, SignOut, SignInFunc })(SingIn);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\ActionTypes.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\services\\SortService.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\actions\\index.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\ResultSearchUser.js",["461","462"],"import User from \"./User\";\r\nimport { connect } from \"react-redux\";\r\nimport { List } from 'semantic-ui-react'\r\nimport { useEffect } from 'react';\r\nimport { GetCurrentUser } from '../../actions/index';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nimport './ReasulSearchUser.scss';\r\n\r\nconst ResultSearchUser = (props) => {\r\n\r\n    //styles\r\n    const styleListItem = { \"height\": \"35%\", \"border-bottom-style\": \"groove\", \"max-width\": \"max-width: 100%\" }\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    return (<>\r\n        {\r\n            <Box sx={{ width: '100%', height: 250, bgcolor: 'background.paper' }}>\r\n\r\n                {props.UserSearch && props.UserSearch.map((item, index) => {\r\n                    return (\r\n\r\n                        <ListItem key={index} component=\"div\" disablePadding style={styleListItem}>\r\n                            <ListItemButton style={{ \"height\": \"100%\" }}>\r\n                                <User ifAdd=\"true\" key={item._id} user={item} />\r\n                            </ListItemButton>\r\n                        </ListItem>\r\n                    );\r\n                })}\r\n                \r\n            </Box>}\r\n    </>);\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { CurrentUser: state.usersPart.CurrentUser, UserSearch: state.usersPart.UserSearch };\r\n}\r\nexport default connect(mapStateToProps, { GetCurrentUser })(ResultSearchUser); ","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\SendMail.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\Tasks.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\UtilCategory.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\Location.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\Manager.js",["463","464"],"import axios from 'axios';\r\nexport const CheckManager = (email, password) => {\r\n\r\n        (localStorage.getItem(\"managerMail\"))\r\n        let mailManager = localStorage.getItem(\"managerMail\").split(\"@\");\r\n        let mailArr = mailManager[0].split(\"\");\r\n        let mail = mailArr.filter((elem, index) => index % 2 == 0).join(\"\");\r\n        let newMail = mail + \"@\" + mailManager[1];\r\n\r\n        let idManager = localStorage.getItem(\"managerId\").split(\"\").filter((elem, index) => index % 2 == 0).join(\"\");\r\n        return email === newMail && password === idManager;\r\n\r\n}\r\n\r\nexport const CheckManagerFunc = () => {\r\n\r\n        return CheckManager(localStorage.getItem(\"currentUserMail\"), localStorage.getItem(\"currentUserPassword\"))\r\n}\r\n\r\nexport const GetCountAllUserByMonth = async () => {\r\n        let arrByMonth = await axios.get(`http://localhost:4000/manager/getCountAllUserByMonth`);\r\n        let arr=[12].fill(0);\r\n        arrByMonth.data.forEach(element => {\r\n                arr[element._id.month]=element.count;\r\n        });\r\n        return arr;\r\n}\r\nexport const GetCountAllBusinessByMonth = async () => {\r\n        let arrByMonth = await axios.get(`http://localhost:4000/manager/getCountAllBusinessByMonth`);\r\n        let arr=[12].fill(0);\r\n        arrByMonth.data.forEach(element => {\r\n                arr[element._id.month]=element.count;\r\n        });\r\n        return arr;\r\n}\r\nexport const GetCountSearchUsersByMonth = async () => {\r\n        let arrByMonth = await axios.get(`http://localhost:4000/manager/getCountSearchUsersByMonth`);\r\n        let arr=[12].fill(0);\r\n        arrByMonth.data.forEach(element => {\r\n                arr[element._id.month]=element.count;\r\n        });\r\n        return arr;\r\n}\r\nexport const GetCountSearchBusinessByMonth = async () => {\r\n        let arrByMonth = await axios.get(`http://localhost:4000/manager/getCountSearchBusinessByMonth`);\r\n        let arr=[12].fill(0);\r\n        arrByMonth.data.forEach(element => {\r\n                arr[element._id.month]=element.count;\r\n        });\r\n        return arr;\r\n}","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\ChartPage\\components\\Typography.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Tasks.js",["465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../../components/classes/business'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { Redirect, useRouteMatch, Link, Route, Switch } from 'react-router-dom';\r\nimport { GetCurrentUser, GetTaskByUserId } from '../../util/index';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport { ChangeUpdateBuisness } from '../../actions/index';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useParams } from 'react-router-dom'\r\nimport AddCtegory from '../Tasks/AddCtegory'\r\nimport AddUser from '../Tasks/AddUser';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './Task.scss';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport NavigationIcon from '@mui/icons-material/Navigation';\r\n\r\nimport { Button as Button2, Grid as Grid2, Popup as Popup2 } from 'semantic-ui-react';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n}));\r\n\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nfunction Tasks(props) {\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [tasksArr, settasksArr] = useState([]);\r\n\r\n    const { url, path } = useRouteMatch();\r\n    // עיצוב\r\n    const classes = useStyles();\r\n\r\n    // טופס\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const name = register('name', { minLength: { value: 2, message: \"Min 2\" } })\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n\r\n    // const onchangeImg = (e) => {\r\n    //     if (e.target.files && e.target.files.length > 0) {\r\n    //       setimsState(e.target.files[0]);\r\n    //       console.log(e.target.files[0]);\r\n    //       setimsStateToShow(e.target.value);\r\n    //       e.preventDefault();\r\n    //       const reader = new FileReader();\r\n    //       const file = e.target.files[0];\r\n    //       reader.onloadend = () => {\r\n    //         setimsStateToShow(reader.result);\r\n    //       }\r\n    //       reader.readAsDataURL(file);\r\n    //     }\r\n\r\n    //   }\r\n    function myFunction(currentUrl) {\r\n        window.open(url + \"/\" + currentUrl, \"add\", \"width=1600,height=300\");\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetCurrentUser().then(succ => {\r\n            setCurrentUser(succ.data);\r\n            GetTaskByUserId(succ.data._id).then((item) => {\r\n                settasksArr(item.data);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n            </Snackbar>\r\n            {/* <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <h3>הפניות שלך</h3>\r\n                   \r\n                </Grid>\r\n            </Grid> */}\r\n\r\n            <div >\r\n              \r\n                <Switch>\r\n                    <Route path={`${path}/addUser`}>\r\n                        <AddUser content=\"באפשרותך לשלוח למנהל מייל של משתמש חדש למערכת\"/>\r\n                    </Route>\r\n                    <Route path={`${path}/addCategory`}>\r\n                        <AddCtegory content=\"באפשרותך לשלוח למנהל שם של קטגוריה חדשה למערכת\" />\r\n                    </Route>\r\n                    <Route>\r\n\r\n                        <div className=\"divTable\">\r\n                            <table class=\"ui celled structured table tableDiv\" >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th rowspan=\"2\">נושא</th>\r\n                                        <th rowspan=\"2\">תאור</th>\r\n                                        <th rowspan=\"2\">תאריך</th>\r\n                                        <th colspan=\"3\">טופל</th>\r\n                                    </tr>\r\n\r\n                                </thead>\r\n                                <tbody>\r\n                                    {tasksArr && tasksArr.map((task) => <>\r\n\r\n                                        <tr>\r\n                                            <td>{task.type.name}</td>\r\n                                            <td class=\"right aligned\">{task.desription}</td>\r\n                                            <td>{task.date}</td>\r\n\r\n                                            <td class=\"center aligned\">\r\n                                                {task.status && <i style={{ \"right\": \"0em\", \"position\": \"relative\" }} class=\"large green checkmark icon\"></i>}\r\n                                            </td>\r\n\r\n                                        </tr>\r\n\r\n\r\n                                    </>)}\r\n\r\n                                </tbody>\r\n                            </table>\r\n\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        <Popup2 wide trigger={<Fab color=\"primary\" aria-label=\"add\" className=\"button2Class\">\r\n                            <AddIcon />\r\n                        </Fab>} on='click'>\r\n                            <Grid2 divided columns='equal'>\r\n                                <Grid2.Column>\r\n                                    <Popup2\r\n                                        trigger={<Button2 style={{ \"background-color\": \"rgb(11, 11, 43)\" }} onClick={() => myFunction(\"addCategory\")} color='blue' content='הוספת קטגוריה' fluid />}\r\n                                        content='שלח בקשה למנהל להוספת קטגוריה חדשה במערכת'\r\n                                        position='top center'\r\n                                        size='tiny'\r\n                                        inverted\r\n                                    />\r\n                                </Grid2.Column>\r\n                                <Grid2.Column>\r\n                                    <Popup2\r\n                                        trigger={<Button2 style={{ \"background-color\": \"rgb(255, 113, 110)\" }} onClick={() => myFunction(\"addUser\")} color='red' content='הוספת משתמש' fluid />}\r\n                                        content='שלח בקשה למנהל להוספת משתמש חדש למערכת'\r\n                                        position='top center'\r\n                                        size='tiny'\r\n                                        inverted\r\n                                    />\r\n                                </Grid2.Column>\r\n                            </Grid2>\r\n                        </Popup2>\r\n\r\n\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {};\r\n}\r\nexport default connect(mapStateToProps, {})(Tasks);\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\ChartPage\\utils\\propTypes.js",["488"],"import PropTypes from 'prop-types';\r\n\r\nexport default {\r\n  ...PropTypes,\r\n  ID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\r\n};\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\classes\\business.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\actions\\business.js",["489","490","491","492","493"],"import axios from 'axios';\r\nimport * as actionTypes from '../ActionTypes';\r\nimport GeolocationService from '../services/SortService';\r\nimport Geocode from \"react-geocode\";\r\nimport { FromAddress } from '../util';\r\n\r\nexport const GetAllBusiness = () => {\r\n\r\n    return (dispatch) => {\r\n        axios.get(\"http://localhost:4000/business\").then(succ => {\r\n            console.log(succ.data);\r\n            dispatch(SaveAllBusiness(succ.data));\r\n        }).catch(ee => {\r\n            console.log(ee.massege);\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const SearchBusiness = (business, allBusiness) => {\r\n    return (dispatch) => {\r\n        let name = business.name || \"\";\r\n        let phoneNamber = business.phoneNamber || [];\r\n        let email = business.email || \"\";\r\n        let adress = business.adress || \"\";\r\n        let listCategory = [];\r\n        if (business.listCategory)\r\n            business.listCategory.forEach((e) => listCategory.push(e));\r\n        let businesses = allBusiness.filter((b) => {\r\n            return b.name.includes(name) && (b.listCategory.filter(c => business.listCategory.indexOf(c) != -1).length > 0 || listCategory.length == 0)\r\n                && b.email.includes(email) && b.adress.includes(adress) && b.phoneNamber.filter((e) => e.includes(phoneNamber)).length > 0\r\n        });\r\n        dispatch(SaveResultBusiness(businesses));\r\n    }\r\n\r\n}\r\n// export const AddBusiness = (business) => {\r\n//     return (dispatch) => {\r\n//         axios.post(\"http://localhost:4000/business/\",business).then((succ) => {\r\n//             console.log(succ.data);\r\n//         }).catch(ee => {\r\n//             console.log(ee.massege);\r\n\r\n//         });\r\n//     }\r\n// }\r\nexport const SaveAllBusiness = (business) => {\r\n    return {\r\n        type: actionTypes.FILL_ALL_BUSINESS,\r\n        payload: business\r\n    }\r\n}\r\nexport const SaveResultBusiness = (business) => {\r\n    return {\r\n        type: actionTypes.REFRESH_RESULT_BUSINESS,\r\n        payload: business\r\n    }\r\n}\r\n\r\nexport const SelectedBusiness = (business) => {\r\n    return {\r\n        type: actionTypes.SELECTED_BUSINESS,\r\n        payload: business\r\n    }\r\n}\r\nexport const NoSelectedBusiness = () => {\r\n    return {\r\n        type: actionTypes.SELECTED_BUSINESS,\r\n        payload: null\r\n    }\r\n}\r\nexport const DeleteResultBusiness = () => {\r\n    return {\r\n        type: actionTypes.DELETE_RESULT_BUSINESS,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const ChangeColorName = (name) => {\r\n    return {\r\n        type: actionTypes.CHANGE_COLOR_NAME,\r\n        payload: name\r\n    }\r\n}\r\nexport const ChangeUpdateBuisness = (update) => {\r\n    return {\r\n        type: actionTypes.UPDATE_BUISNESS,\r\n        payload: update\r\n    }\r\n}\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\actions\\users.js",["494","495","496","497"],"import axios from 'axios';\r\nimport * as actionTypes from '../ActionTypes'\r\n\r\nexport const GetAllUsers = () => {\r\n    return (dispatch) => {\r\n        axios.get(\"http://localhost:4000/users\").then(succ => {\r\n            console.log(succ.data);\r\n            dispatch(SaveAllUsers(succ.data));\r\n        }).catch(ee => {\r\n            console.log(ee.massege);\r\n        });\r\n    }\r\n}\r\nexport const GetCurrentUser = (user) => {\r\n    return async (dispatch) => {\r\n        // { params: { password: user.password,mail:user.mail } }\r\n        // let succ = await axios.get(`http://localhost:4000/users/getByPassword/${user.password}&${user.mail}`);\r\n        axios.get(`http://localhost:4000/users/getByPassword/${user.password}&${user.mail}`).then((data, error) => {\r\n            if (data.status == 400)\r\n                console.log(\"kkkkkkkkkkk\");\r\n\r\n            if (data.status == 200)\r\n                dispatch(SignIn(data.data));\r\n        })\r\n\r\n\r\n\r\n    }\r\n}\r\nexport const AddUser = (user) => {\r\n    return (dispatch) => {\r\n        axios.post(\"http://localhost:4000/users\", user).then((succ) => {\r\n            console.log(succ.data);\r\n            if (succ.data != null) {\r\n                dispatch(SignIn(succ.data));\r\n                dispatch(IfExist(false));\r\n                dispatch(ErrorInAdd(false));\r\n            }\r\n\r\n        }).catch(ee => {\r\n            console.log(ee.massege);\r\n            if (ee.response.status == 404) {\r\n                dispatch(IfExist(true));\r\n                dispatch(ErrorInAdd(false));\r\n            }\r\n\r\n            if (ee.response.status == 400) {\r\n                dispatch(ErrorInAdd(true));\r\n                dispatch(IfExist(false));\r\n            }\r\n\r\n        });\r\n    }\r\n}\r\nexport const SearchUsers = (user, allUsers) => {\r\n    return (dispatch) => {\r\n        let firstName = user.firstName || \"\";\r\n        let lastName = user.lastName || \"\";\r\n        let phoneNamber = user.phoneNamber || \"\";\r\n        let email = user.email || \"\";\r\n        let adress = user.adress || \"\";\r\n        let users = allUsers.filter((u) => {\r\n            return u.firstName.includes(firstName) && u.lastName.includes(lastName)\r\n                && u.email.includes(email) && u.adress.includes(adress) && u.phoneNamber.filter((e) => e.includes(phoneNamber)).length > 0\r\n        });\r\n        dispatch(SaveResultUsers(users));\r\n    }\r\n\r\n}\r\n\r\nexport const SaveAllUsers = (users) => {\r\n    return {\r\n        type: actionTypes.FILL_ALL_USERS,\r\n        payload: users\r\n    }\r\n}\r\nexport const SaveResultUsers = (users) => {\r\n    return {\r\n        type: actionTypes.REFRESH_RESULT,\r\n        payload: users\r\n    }\r\n}\r\n\r\nexport const SelectedUser = (user) => {\r\n    return {\r\n        type: actionTypes.SELECTED_USER,\r\n        payload: user\r\n    }\r\n}\r\nexport const NoSelectedUser = () => {\r\n    return {\r\n        type: actionTypes.SELECTED_USER,\r\n        payload: null\r\n    }\r\n}\r\nexport const DeleteResultUser = () => {\r\n    return {\r\n        type: actionTypes.DELETE_RESULT_USER,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const ChangeColorFirstName = (name) => {\r\n    return {\r\n        type: actionTypes.CHANGE_COLOR_FIRST_NAME,\r\n        payload: name\r\n    }\r\n}\r\nexport const ChangeColorLastName = (name) => {\r\n    return {\r\n        type: actionTypes.CHANGE_COLOR_LAST_NAME,\r\n        payload: name\r\n    }\r\n}\r\nexport const SignIn = (user) => {\r\n    return {\r\n        type: actionTypes.SING_IN,\r\n        payload: user\r\n    }\r\n}\r\nexport const SignOut = () => {\r\n    return {\r\n        type: actionTypes.SING_OUT,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const IfExist = (ifExist) => {\r\n    return {\r\n        type: actionTypes.IF_EXIST,\r\n        payload: ifExist\r\n    }\r\n}\r\nexport const ErrorInAdd = (ifErrorInAdd) => {\r\n    return {\r\n        type: actionTypes.IF_ERROR_IN_ADD,\r\n        payload: ifErrorInAdd\r\n    }\r\n}\r\nexport const ChangeIdUserManagerUpdate = (id) => {\r\n    return {\r\n        type: actionTypes.CHANGE_ID_USER_MANAGER_UPDATE,\r\n        payload: id\r\n    }\r\n}","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\User.js",["498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524"],"import { connect } from \"react-redux\";\r\nimport './User.scss';\r\nimport { SelectedUser, ChangeColorFirstName, ChangeColorLastName } from '../../actions/index';\r\nimport { useRef, useEffect } from \"react\";\r\nimport ico from './img/person.png';\r\nimport React, { useState } from 'react';\r\nimport { AddHistory, GetImage } from '../../util/index';\r\nimport { Button, Image, Modal, List } from 'semantic-ui-react';\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\r\nimport { SendMail, GetCurrentUser } from '../../util';\r\n\r\n\r\nconst User = (props) => {\r\n\r\n    const { url, path } = useRouteMatch();\r\n\r\n    let indexName = props.user.firstName.indexOf(props.ColorFirstName);\r\n    let start = props.user.firstName.substring(0, indexName);\r\n    let end = props.user.firstName.substring(indexName + props.ColorFirstName.length, props.user.firstName.length);\r\n    let indexLastName = props.user.lastName.indexOf(props.ColorLastName);\r\n    let Laststart = props.user.lastName.substring(0, indexLastName);\r\n    let Lastend = props.user.lastName.substring(indexLastName + props.ColorLastName.length, props.user.lastName.length);\r\n\r\n    const checkName = (name) => {\r\n        return name[0] >= 'A' && name[0] <= 'Z' || name[0] >= 'a' && name[0] <= 'z';\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n\r\n    function myFunction() {\r\n        var myWindow = window.open(url + \"/TasksUpdataUser/\" + props.user._id, \"UpdataUser\", \"width=400,height=300\");\r\n        localStorage.setItem(\"idUserSearch\",props.user._id);\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    //styles\r\n\r\n    const styleDivContent = { \"margin-top\": \"0\", \"border-top-right-radius\": 0, \"border-top-left-radius\": 0 }\r\n    const styleDivW = { \"position\": \"relative\", \"top\": \"74%\" }\r\n    const styleAction = { \"height\": \"3em\", \"margin-top\": \"-7%\" }\r\n    const styleIconUser = { \"margin-left\": \"-2em\", \"color\": \"white\" }\r\n    const styleImg = {\r\n        \"display\": \"block\", \"max-width\": \"100%\", \"height\": \"7em\", \"width\": \"100%\", \"position\": \"relative\", \"top\": \"3em\", \"left\": \"-3em\"\r\n    }\r\n    const styleIconExport = { \"margin-left\": \"3em\", \"color\": \"white\" }\r\n \r\n    //styles\r\n\r\n    const SendMailFunc = (user) => {\r\n\r\n        GetCurrentUser().then(succ => {\r\n\r\n            let mail = {\r\n                toUser: user.email,\r\n                subject: `${succ.data.firstName + \" \" + succ.data.lastName} חיפש אותך `,\r\n                text: `<div>לשליחת מייל ${succ.data.email}</div> `\r\n            }\r\n\r\n            SendMail(mail);\r\n        })\r\n\r\n\r\n\r\n    }\r\n    return (\r\n\r\n\r\n\r\n\r\n        <List.Item key={props.user._id}>\r\n\r\n            <List.Content floated='right'>\r\n\r\n                <Modal\r\n\r\n                    onClose={() => setOpen(false)}\r\n                    onOpen={() => setOpen(true)}\r\n                    open={open}\r\n                    style={{ \"border-radius\": \"0\" }}\r\n\r\n                    trigger={<div ><div className=\"place_user\" onClick={() => {\r\n\r\n                        props.SelectedUser(props.user);\r\n\r\n                        if (props.ifAdd == \"true\")\r\n                            AddHistory(localStorage.getItem(\"currentUserId\"), props.user._id);\r\n\r\n                        if (props.user.ifMessege) {\r\n                            console.log(props.user.ifMessege);\r\n                            SendMailFunc(props.user);\r\n                        }\r\n\r\n                    }}>\r\n                    \r\n                        <img alt=\"Avatar\" className=\"img_ico\" src={props.user.img && props.user.img !== \"undefined\"? props.user.img : ico}></img>\r\n\r\n                        <p className=\"display\" style={{ \"margin-left\": \"1.5em\" }}>{checkName(props.user.lastName) ? Laststart : Lastend}</p>\r\n                        {!checkName(props.user.lastName) && (Lastend[0] == ' ' || props.ColorLastName[props.ColorLastName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n                        {checkName(props.user.firstName) && (Laststart[Laststart.length - 1] == ' ' || props.ColorLastName[props.ColorLastName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                        <p className=\"color_name display\">{props.ColorLastName}</p>\r\n                        {!checkName(props.user.lastName) && (Laststart[Laststart.length - 1] == ' ' || props.ColorLastName[props.ColorLastName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n                        {checkName(props.user.lastName) && (Lastend[0] == ' ' || props.ColorLastName[props.ColorLastName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                        <p className=\"display\">{checkName(props.user.lastName) ? Lastend : Laststart}</p>\r\n                        <p className=\"display\">&nbsp;</p>\r\n                        <p className=\"display\">{checkName(props.user.firstName) ? start : end}</p>\r\n\r\n                        {checkName(props.user.lastName) && (start[start.length - 1]) == ' ' ? <p className=\"display\">&nbsp;</p> : null}\r\n                        {!checkName(props.user.lastName) && (end[0] == ' ' || props.ColorFirstName[props.ColorFirstName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                        <p className=\"color_name display\">{props.ColorFirstName}</p>\r\n                        {checkName(props.user.lastName) && (end[0] == ' ' || props.ColorFirstName[props.ColorFirstName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n                        {!checkName(props.user.lastName) && (start[start.length - 1]) == ' ' ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                        <p className=\"display\">{checkName(props.user.firstName) ? end : start}</p>\r\n\r\n                    </div>\r\n\r\n                    </div>}\r\n                >\r\n\r\n                    <div className=\"div_content\" style={styleDivContent}>\r\n\r\n                        <div className=\"div_w\" style={styleDivW}></div>\r\n\r\n                    </div>\r\n\r\n                    <Modal.Actions style={styleAction}>\r\n\r\n                        <div style={{ \"margin-top\": \"-34.3%\" }}>\r\n\r\n                            <div className=\"div-ico\" style={{ \"margin-right\": \"-8%\" }} data-tooltip=\"הוסף לאנשי קשר\">\r\n\r\n                                <i class=\"user plus icon i\" style={styleIconUser}></i>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"img_user\">\r\n\r\n                                <Image size='medium' style={styleImg} src={props.user.img && props.user.img !== \"undefined\"? props.user.img : ico} wrapped className=\"place_img\" />\r\n\r\n                            </div>\r\n\r\n                            <div className=\"div-ico\" data-tooltip=\"דווח על תקלה\">\r\n\r\n                                <i class=\"exclamation triangle icon\" style={styleIconExport} onClick={myFunction}></i>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Modal.Actions>\r\n\r\n                    <h2 className=\"place_detailes\" style={{ \"margin-top\": \"18%\" }}>\r\n\r\n                        <div className=\"div_all\">\r\n                            <i class=\"phone icon\"></i>\r\n                            <div className=\"place_div\">\r\n                                <p> {props.user.phoneNamber}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"div_all\">\r\n                            <div className=\"place_div\">\r\n                                <i class=\"envelope icon\"></i>\r\n                                <p><a href=\"mailto:abc@example.com?subject = Feedback&body = Message\">{props.user.email}</a></p>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"div_all\">\r\n                            <i class=\"map marker alternate icon\"></i>\r\n                            <div className=\"place_div\"> <p> {props.user.adress ? props.user.adress : \"הכתובת לא עודכנה\"}</p> </div>\r\n                        </div>\r\n                    </h2>\r\n                </Modal>\r\n            </List.Content>\r\n        </List.Item >\r\n\r\n\r\n    );\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { ColorFirstName: state.usersPart.ColorFirstName, ColorLastName: state.usersPart.ColorLastName };\r\n}\r\nexport default connect(mapStateToProps, { SelectedUser, ChangeColorFirstName, ChangeColorLastName })(User);\r\n\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\UtilBuisness.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\UtilUser.js",["525"],"import axios from 'axios';\r\nimport Geocode from \"react-geocode\";\r\n\r\nexport const GetCurrentUser = async () => {\r\n    return axios.get(`http://localhost:4000/users/${localStorage.getItem(\"currentUserId\")}`);\r\n}\r\nexport const GetCurrentUserById = async (id) => {\r\n    return axios.get(`http://localhost:4000/users/${id}`);\r\n}\r\nexport const AddHistory = async (currentId, userId) => {\r\n\r\n    axios.put(`http://localhost:4000/users/addToHistory/${currentId}&${userId}`);\r\n\r\n}\r\nexport const AddHistoryBusiness = async (currentId, businessId) => {\r\n\r\n    axios.put(`http://localhost:4000/users/addToHistoryBusiness/${currentId}&${businessId}`);\r\n\r\n}\r\nexport const AddUser = async (user) => {\r\n    user.firstName=user.firstName.trim();\r\n    user.lastName=user.lastName.trim();\r\n    return axios.post(\"http://localhost:4000/users\", user)\r\n}\r\n\r\nexport const DeleteHistoryUsers = async (index) => {\r\n    return axios.put(`http://localhost:4000/users/deleteHistoryUser/${localStorage.getItem(\"currentUserId\")}&${index}`);\r\n}\r\n// export const UpdateUser = async (id, user) => {\r\n//     return axios.put(`http://localhost:4000/users/${id}`, user);\r\n// }\r\n\r\nexport const GetCurrentUserByPaaswordAndMail = async (password, mail) => {\r\n    return axios.get(`http://localhost:4000/users/getByPassword/${password}&${mail}`);\r\n}\r\n\r\nexport const GetImage = async (img) => {\r\n    return axios.get(`http://localhost:4000/${img}`);\r\n}\r\n\r\n\r\nexport const SendPasswordIfExist = async (email) => {\r\n    return axios.get(`http://localhost:4000/users/sendPasswordIfExist/${email}`);\r\n}\r\n\r\n\r\nexport const UpdateUser = async (fd,id) => {\r\n    // fd.firstName=fd.firstName.trim();\r\n    // fd.lastName=fd.lastName.trim();\r\n    return axios({\r\n        method: 'put',\r\n        url: `http://localhost:4000/users/${id}`,\r\n        data: fd,\r\n      })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const ChangeAdrres = async (address,setLen,setLet) => {\r\n//     let location;\r\n//     Geocode.fromAddress(address).then(\r\n//         (response) => {\r\n//             const { lat, lng } = response.results[0].geometry.location;\r\n//             console.log(lat, lng);\r\n//             // location = {\r\n//             //     \"latitude\":lat,\r\n//             //     \"longitude\": lng\r\n//             // }\r\n//             setLet(lat);\r\n//             setLen(lng)\r\n//             return location\r\n//         },\r\n//         (error) => {\r\n//             console.error(error);\r\n//         }\r\n//     );\r\n// }\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\ChartPage\\utils\\bemnames.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\classes\\task.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\classes\\user.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\BusinessInformationUpdate.js",["526"],"import ListBuisness from \"./UpdateBuisness/ListBuisness\";\r\nimport { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { ChangeUpdateBuisness } from '../../actions/index';\r\n\r\n\r\nconst BusinessInformationUpdate = (props) => {\r\n\r\n\r\n    return (<>\r\n        <ListBuisness/>\r\n    </>);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { updateBuisness: state.businessPart.updateBuisness };\r\n}\r\nexport default connect(mapStateToProps, { ChangeUpdateBuisness })(BusinessInformationUpdate);\r\n\r\n\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\ResultSearchBusiness.js",["527","528","529","530","531","532","533","534","535","536","537","538"],"import Business from \"./Business\";\r\nimport { connect } from \"react-redux\";\r\nimport { List } from 'semantic-ui-react'\r\nimport { GetCurrentUser } from '../../actions/index';\r\nimport { geolocated } from \"react-geolocated\";\r\nimport Geocode from \"react-geocode\";\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport { FromAddress } from '../../util';\r\nimport GeolocationService from '../../services/SortService';\r\nimport Box from '@mui/material/Box';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Stack from '@mui/material/Stack';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst colorLoder = {\r\n    \"background-color\": \"#fb7375\",\r\n    \"color\": \"#fb7375\"\r\n}\r\nconst ResultSearchBusiness = (props) => {\r\n\r\n    // const [CircularProgresState, setCircularProgresState] = useState(false);\r\n\r\n    //styles\r\n    const styleListItem = { \"height\": \"35%\", \"border-bottom-style\": \"groove\", \"max-width\": \"max-width: 100%\" }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [props.BusinessSearch]);\r\n\r\n    return (\r\n <>\r\n\r\n                {\r\n                    <Box sx={{ width: '100%', height: 250, bgcolor: 'background.paper' }}>\r\n\r\n                        {props.BusinessSearch && props.BusinessSearch.map((item, index) => {\r\n                            return (\r\n\r\n                                <ListItem key={index} component=\"div\" disablePadding style={styleListItem}>\r\n                                    <ListItemButton style={{ \"height\": \"100%\" }}>\r\n                                        <Business ifAdd=\"true\" key={item._id} business={item} />\r\n                                    </ListItemButton>\r\n                                </ListItem>\r\n\r\n                            );\r\n                        })}\r\n\r\n                    </Box>}\r\n\r\n            </>);\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { CurrentUser: state.usersPart.CurrentUser, BusinessSearch: state.businessPart.BusinessSearch };\r\n}\r\nexport default connect(mapStateToProps, { GetCurrentUser })(ResultSearchBusiness); ","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\SearchHistory.js",["539","540","541","542"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport axios from 'axios';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport Users from './Histories/Users';\r\nimport Buisness from './Histories/Buisness';\r\nimport { GetCurrentUser } from '../../util/index';\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\n\r\nconst SearchHistory = (props) => {\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    // const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        GetCurrentUser().then(data => {\r\n            setCurrentUser(data.data);\r\n        }).catch(() => {\r\n\r\n        });\r\n\r\n    }, []);\r\n\r\n\r\n    return (<>\r\n        {currentUser ?\r\n            <>\r\n                <div className={classes.root} style={{\r\n                    \"margin-top\": \"-21%\",\r\n                    \"margin-left\": \"-7%\"\r\n                }}>\r\n                    <AppBar position=\"static\" color=\"default\" width=\"22%\">\r\n\r\n                        <Tabs\r\n                            value={value}\r\n                            onChange={handleChange}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            variant=\"scrollable\"\r\n                            scrollButtons=\"auto\"\r\n                            aria-label=\"scrollable auto tabs example\"\r\n                        >\r\n\r\n                            <Tab label=\"Users\"  {...a11yProps(0)} />\r\n                            <Tab label=\"Business\" {...a11yProps(1)} />\r\n\r\n                        </Tabs>\r\n\r\n                    </AppBar>\r\n\r\n                    <TabPanel value={value} index={0}><Users /></TabPanel>\r\n                    <TabPanel value={value} index={1}><Buisness /></TabPanel>\r\n                    \r\n                </div>\r\n            </>\r\n            : null}\r\n    </>);\r\n}\r\nexport default SearchHistory;\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\TableTasks.js",["543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport { GetAllTask, GetAllTypeTsks, GetTaskById, SendMail } from '../../util/index';\r\nimport { Link, Route, Switch, useRouteMatch, useParams } from 'react-router-dom';\r\nimport UpdatePersonalDetails from '../PrivateArea/UpdatePersonalDetails';\r\nimport { withRouter } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { connect } from \"react-redux\";\r\nimport { ChangeIdUserManagerUpdate } from '../../actions/index';\r\nimport { setTimeout } from 'timers';\r\nimport UpdateBuisnes from '../PrivateArea/UpdateBuisness/UpdateBuisnes';\r\nimport UpdateBuisnesOfManager from './UpdateBuisnesOfManager';\r\nimport AddCategory from './AddCategory';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { UpdateStatusTask } from '../../util/index';\r\nimport { Grid, Button } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport ModelCompo from './ModelCompo';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset',\r\n        },\r\n    },\r\n});\r\n\r\nfunction Row(props) {\r\n    const { row, action } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n\r\n    const [check, setCheck] = useState(false);\r\n\r\n    onchange = (e, id) => {\r\n        console.log(e);\r\n        setCheck(e.target.checked);\r\n        if (e.target.checked == true) {\r\n            UpdateStatusTask(id, true);\r\n        }\r\n        else {\r\n            UpdateStatusTask(id, false);\r\n        }\r\n\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow className={classes.root}>\r\n\r\n                <TableCell align=\"right\">{action}</TableCell>\r\n                <TableCell align=\"right\">{row.type.name}</TableCell>\r\n                <TableCell align=\"right\">{row.desription}</TableCell>\r\n                <TableCell align=\"right\">{row.codeUser.firstName}&nbsp;{row.codeUser.lastName}</TableCell>\r\n                <TableCell align=\"right\">{row.date}</TableCell>\r\n                <TableCell align=\"right\"> <FormControlLabel control={<Checkbox onChange={(e) => onchange(e, row._id)} />} label=\"\" /></TableCell>\r\n\r\n            </TableRow>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction TableTasks(props) {\r\n\r\n    const { idTask } = useParams();\r\n    const [ifTasks, setifTasks] = useState(true);\r\n\r\n    const [nameButton, setNameButton] = useState(\"שלח בקשה להצטרפות\");\r\n\r\n    const send = (idTask, mail) => {\r\n\r\n        let Email = {\r\n            toUser: mail,\r\n            subject: \"מזמינים אותך להצטרף אלינו\",\r\n            text: `<div ><a href=\"http://localhost:3000/\"><img src=\"cid:img\" width=\"56%\"></img></a></div>`\r\n            // ,attachments\r\n            ,\r\n            attachments: [{\r\n                filename: 'image.png',\r\n                path: 'http://localhost:4000/uploads/page.jpg',\r\n                cid:\"img\"\r\n            }]\r\n        }\r\n        SendMail(Email).then(() => {\r\n\r\n            setNameButton(\"נשלח\");\r\n\r\n        }).catch(() => {\r\n\r\n        });\r\n    }\r\n\r\n   const styleB={\r\n    \"position\": \"absolute\",\r\n    \"top\": \"118px\",\r\n    \"left\": \"21px\"\r\n   }\r\n    const [rows, setRows] = useState([]);\r\n    const [typeTask, setTypeTask] = useState([]);\r\n\r\n    const { url, path } = useRouteMatch();\r\n\r\n    useEffect(() => {\r\n\r\n        GetAllTypeTsks().then(succ => {\r\n\r\n            let typeArr = [];\r\n            succ.data.forEach(element => {\r\n\r\n\r\n                if (element.code == 1)\r\n                    typeArr[0] = { id: element._id, action: (id, idTask) => <ModelCompo button={<Button>עדכן משתמש</Button>} compo={<UpdatePersonalDetails id={id} idTask={idTask} iconH=\"2.5em\" iconMarginLeft=\"-15%\" iconMarginBottom=\"0%\" iconW=\"21%\" imgW=\"95%\" imgH=\"11em\" imgMarginLeft=\"-15%\" />} /> };\r\n                else if (element.code == 2)\r\n                    typeArr[1] = { id: element._id, action: (id, idTask) => <ModelCompo button={<Button>הוסף קטגוריה</Button>} compo={<AddCategory  idTask={idTask}  />} /> }\r\n                else if (element.code == 3)\r\n                    typeArr[2] = { id: element._id, action: (mail, idTask) =>  <Button onClick={() => { send(idTask, mail) }} >{nameButton}</Button> }\r\n                else if (element.code == 4)\r\n                    typeArr[3] = { id: element._id, action: (id, idTask) => <ModelCompo button={<Button>עדכן עסק</Button>} compo={<UpdateBuisnesOfManager id={id} idTask={idTask} iconH=\"2.5em\" iconMarginLeft=\"-15%\" iconMarginBottom=\"0%\" iconW=\"21%\" imgW=\"95%\" imgH=\"11em\" imgMarginLeft=\"-15%\" />} /> }\r\n\r\n            });\r\n\r\n            setTypeTask(typeArr);\r\n\r\n        }).catch(error => console.log(error));\r\n\r\n        GetAllTask().then(succ => {\r\n            setRows(succ.data);\r\n        }).catch(erorr => {\r\n            console.log(erorr);\r\n        });\r\n\r\n        GetTaskById(idTask).then(succ => {\r\n            if (succ.data.status == true)\r\n                setifTasks(false);\r\n        }).catch(() => {\r\n\r\n        });\r\n    }, []);\r\n    return (<>\r\n    <Button variant=\"outlined\" startIcon={<DeleteIcon />}style={styleB} onClick={()=>{window.location.reload()}}>\r\n        Delete\r\n      </Button>\r\n    {rows && <>\r\n\r\n        <Grid container spacing={1} style={{ \"margin-top\": \"7%\" }}>\r\n      \r\n\r\n            <TableContainer component={Paper} >\r\n                <Table aria-label=\"collapsible table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n\r\n                            <TableCell align=\"right\">ביצוע</TableCell>\r\n                            <TableCell align=\"right\">משימה</TableCell>\r\n                            <TableCell align=\"right\">תאור</TableCell>\r\n                            <TableCell align=\"right\">משתמש</TableCell>\r\n                            <TableCell align=\"right\">תאריך</TableCell>\r\n                            <TableCell align=\"right\">סטטוס</TableCell>\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n\r\n                        {typeTask && rows.map((row, index) => (\r\n                            <Row key={index} row={row} action={typeTask.find(elem => elem.id === row.type._id)\r\n                                .action(row.otherUser ? row.otherUser._id : row.otherbuisness ? row.otherbuisness._id : row.mail ? row.mail : null\r\n                                    , row._id)} />\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n        </Grid>\r\n    </>\r\n    }</>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {};\r\n}\r\nexport default connect(mapStateToProps, { ChangeIdUserManagerUpdate })(TableTasks);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\AddingBusiness.js",["573","574","575","576","577","578","579","580","581","582","583"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../classes/business'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport '../LogIn/SingUp.scss';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport axios from 'axios';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { AddBusiness, getAllCategories, SendMail, GetAllBuisnessOfUser } from '../../util/index';\r\nimport Input from '@mui/material/Input';\r\nimport person from '../search/img/person.png';\r\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\r\nimport { IconButton, Icon } from '@material-ui/core';\r\nconst ariaLabel = { 'aria-label': 'description' };\r\n\r\n//לא לשכוח\r\n//   img\r\n//   advertising\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nfunction AddingBusiness(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n    //validation\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const name = register('name', { required: \"This is required.\", minLength: { value: 2, message: \"Min 2\" }, maxLength: { value: 11, message: \"Max 11\" } })\r\n    const adress = register('adress', { required: \"This is required.\" })\r\n    const email = register('email', { required: \"This is required.\", pattern: { value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, message: \"Email No Valid\" } })\r\n    const phone = register('phone', { required: \"This is required.\", pattern: { value: /0[0-9]{9}/, message: \"Phone No Valid\" } })\r\n    const category = register('category', { minLength: { value: 1, message: \"hhhhh\" } })\r\n\r\n    const passwordemail = register('passwordemail', { required: \"This is required.\" })\r\n    // const passwordphone = register('passwordemail', { required: \"This is required.\" })\r\n    let emailToPassword = \"\";\r\n\r\n\r\n    //validation\r\n\r\n\r\n    // function add buissnes\r\n\r\n    const AddBusinessFunc = async (business) => {\r\n\r\n        AddBusiness(business).then((succ) => {\r\n            console.log(succ.data);\r\n\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"Adding Success\");\r\n            handleClick();\r\n\r\n        }).catch(ee => {\r\n\r\n            console.log(ee.massege);\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(ee.response.data)\r\n\r\n            handleClick();\r\n\r\n        });\r\n    }\r\n\r\n    // function add buissnes\r\n\r\n    //img\r\n\r\n    const [imsState, setimsState] = useState();\r\n    const [imsStateToShow, setimsStateToShow] = useState();\r\n    const [listBuisness, setlistBuisness] = React.useState([]);\r\n    const styleItem = {\r\n        \"padding\": \"0px\",\r\n        \"top\": \"42px\",\r\n        \"margin-left\": \"40%\",\r\n        \"position\": \"relative\"\r\n\r\n    }\r\n    const styleLable = {\r\n        \"width\": \"88.6%\",\r\n        \"height\": \"30%\",\r\n        \"margin-top\": \"-26%\"\r\n    }\r\n    const styleInputImg = {\r\n        \"border-radius\": \"50%\",\r\n        \"height\": \"3em\",\r\n        \"width\": \"14%\",\r\n        \"margin-left\": \"3%\",\r\n        \"margin-bottom\": \"18%\",\r\n        \"position\": \"relative\"\r\n    }\r\n    const styleImg = {\r\n        \"width\": \"60%\",\r\n        \"border-radius\": \"50%\",\r\n        \"height\": \"13em\",\r\n        \"margin-top\": \"-105%\",\r\n        \"z-index\": \"10\"\r\n\r\n    }\r\n\r\n    const onchangeImg = (e) => {\r\n\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            setimsState(e.target.files[0]);\r\n            console.log(e.target.files[0]);\r\n            setimsStateToShow(e.target.value);\r\n            e.preventDefault();\r\n            const reader = new FileReader();\r\n            const file = e.target.files[0];\r\n            reader.onloadend = () => {\r\n                setimsStateToShow(reader.result);\r\n            }\r\n            reader.readAsDataURL(file);\r\n        }\r\n\r\n    }\r\n\r\n    //img\r\n\r\n    const GetCurrentBuisnessFunc = () => {\r\n\r\n         GetAllBuisnessOfUser().then(data => {\r\n            console.log(data.data);\r\n            setlistBuisness(data.data);\r\n            // return data.data;\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n\r\n        });\r\n\r\n    }\r\n    //function submit\r\n\r\n    const onSubmit =  data => {\r\n\r\n        if (listCategory.current.getSelectedItems().length == 0)\r\n            setIfSelect(true);\r\n        else {\r\n            let Business = new FormData();\r\n          \r\n            if (listBuisness.length < 7) {\r\n                let arr = [];\r\n                arr.push(data.phone);\r\n                Business.append(\"phoneNamber\", arr);\r\n                Business.append(\"userId\", localStorage.getItem(\"currentUserId\"));\r\n                Business.append(\"listCategory\", listCategory.current.getSelectedItems());\r\n                Business.append(\"name\", data.name);\r\n                Business.append(\"email\", data.email);\r\n                Business.append(\"adress\", data.adress);\r\n                Business.append(\"img\", imsState);\r\n                Business.append(\"dateLogin\", new Date());\r\n\r\n\r\n                AddBusinessFunc(Business);\r\n            }\r\n            else\r\n            {\r\n                settypeAlert(\"error\");\r\n            setmasseg(\"לא ניתן להוסיף יותר מ- 7 עסקים\")\r\n\r\n            handleClick();\r\n            }\r\n           \r\n        }\r\n    }\r\n\r\n    //function submit\r\n\r\n    //ctegory\r\n    let listCategory = useRef([]);\r\n    const [categoriesArr, setCategoriesArr] = useState([]);\r\n    const [ifSelect, setIfSelect] = useState(false);\r\n\r\n    const [check, setCheck] = useState(false);\r\n\r\n    onchange = (e) => {\r\n        console.log(e);\r\n        setCheck(e.target.checked);\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetCurrentBuisnessFunc();\r\n        getAllCategories().then(scss => {\r\n            let arrName = scss.data.map((data) => data.name);\r\n            setCategoriesArr(arrName);\r\n        });\r\n\r\n    }, [])\r\n\r\n\r\n    // validation password to mail\r\n\r\n    const sendPasswordFunc = () => {\r\n\r\n        let number = Math.floor(Math.random() * 90000) + 10000;\r\n\r\n        let num1 = Math.floor(Math.random() * 900) + 100;\r\n        let num2 = Math.floor(Math.random() * 90) + 10;\r\n\r\n        localStorage.setItem(\"number\", num1 + \"\" + number + \"\" + num2);\r\n\r\n        let mail = {\r\n            toUser: emailToPassword,\r\n            subject: \"קוד אימות\",\r\n            text: `<h1>${number}</h1>`\r\n            // ,attachments\r\n        }\r\n        SendMail(mail);\r\n    }\r\n\r\n    // validation password to mail\r\n\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n\r\n\r\n\r\n    return (<>\r\n        {/* alerts */}\r\n\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n        </Snackbar>\r\n\r\n        {/* alerts */}\r\n\r\n        {/* form */}\r\n\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid container spacing={2}>\r\n\r\n\r\n                <Grid item xs={12} sm={4} style={styleItem}>\r\n\r\n                    <label htmlFor=\"photo-upload\" className=\"custom-file-upload fas\" style={styleLable}>\r\n                        <input type=\"file\" className=\"form-control\"\r\n                            accept=\"image/png, image/jpeg\"\r\n                            name=\"image\" onChange={(e) => onchangeImg(e)}\r\n                            style={styleInputImg}\r\n\r\n                        />\r\n\r\n                        < PhotoCameraIcon style={{ \"font-size\": \" 2rem\", \"margin-top\": \"-90px\", \"position\": \"absolute\", \"left\": \"17px\" }}></PhotoCameraIcon>\r\n\r\n                        <img for=\"photo-upload\" style={styleImg} src={imsStateToShow ? imsStateToShow : person} />\r\n\r\n                    </label>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n                <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                    <Input\r\n                        autoComplete=\"fname\"\r\n                        name=\"name\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"name\"\r\n                        {...name}\r\n                        placeholder=\"Name\"\r\n                    />\r\n                    <ErrorMessage errors={errors} name=\"name\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                    <Input\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"adress\"\r\n                        label=\"Address\"\r\n                        name=\"adress\"\r\n                        autoComplete=\"lname\"\r\n                        {...adress}\r\n                        placeholder=\"Address\"\r\n                    />\r\n                    <ErrorMessage errors={errors} name=\"adress\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                    <Input\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        {...email}\r\n                        onKeyUp={(e) => emailToPassword = e.target.value}\r\n                        placeholder=\"Email\"\r\n                    />\r\n                    <ErrorMessage errors={errors} name=\"email\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n                    {props.ifExist ? <p className=\"redColor\">This Email Alrady Exist</p> : null}\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={2} style={{ \"padding\": \"22px\" }}>\r\n\r\n                    <Button onClick={sendPasswordFunc} variant=\"outlined\" size=\"small\" color=\"primary\" className={classes.margin}>\r\n                        Send\r\n                    </Button>\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} style={{ \"padding\": \"22px\" }}>\r\n\r\n                    <Input placeholder=\"Password Email\"\r\n                        inputProps={ariaLabel}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"passwordemail\"\r\n                        name=\"passwordemail\"\r\n                        autoComplete=\"passwordemail\"\r\n                        // onKeyUp={(e) => emailToPassword = e.target.value}\r\n                        {...passwordemail}\r\n                    />\r\n\r\n                    <ErrorMessage errors={errors} name=\"passwordemail\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                    <Multiselect\r\n                        onSelect={(e) => setIfSelect(false)}\r\n                        label=\"Category\"\r\n                        name=\"category\"\r\n                        options={categoriesArr ? categoriesArr : []}\r\n                        isObject={false}\r\n                        ref={listCategory} type=\"text\"\r\n                    />\r\n                    {ifSelect && <p className=\"redColor\">This is required.</p>}\r\n\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                    <Input\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"phone\"\r\n                        label=\"Phone Namber\"\r\n                        name=\"phone\"\r\n                        autoComplete=\"phone\"\r\n                        {...phone}\r\n                        placeholder=\"Phone\"\r\n                    />\r\n                    <ErrorMessage errors={errors} name=\"phone\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n            {props.errorInAdd ? <p className=\"redColor\">Error System</p> : null}\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                style={{ backgroundImage: \"linear-gradient(132deg, black 0%, #ff716e 0%, #0b0b2b 80%)\" }}\r\n            > Sign Up</Button>\r\n\r\n        </form>\r\n        {/* form */}\r\n    </>\r\n\r\n\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {};\r\n}\r\nexport default connect(mapStateToProps, {})(AddingBusiness);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\BasicDetails.js",["584","585","586","587","588","589","590","591"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { connect } from \"react-redux\";\r\nimport { IfExist, ErrorInAdd, SignIn } from '../../actions/index';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport './SingUp.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { AddUser, SendMail } from '../../util/index'\r\nimport Box from '@mui/material/Box';\r\nimport Input from '@mui/material/Input';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport{useHistory}from 'react-router-dom';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nconst ariaLabel = { 'aria-label': 'description' };\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n      color: theme.palette.getContrastText(purple[500]),\r\n      backgroundColor: purple[500],\r\n      '&:hover': {\r\n          backgroundColor: purple[700],\r\n      },\r\n  },\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#e860ff'\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: '#ff716e'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst styleblue={\r\n  \"width\": \"74em\",\r\n  \"background-color\": \"#0b0b2b \",\r\n  \"margin-top\": \"6.7%\",\r\n  \"margin-left\":\"-4%\", \r\n  \"height\": \"2em\"\r\n}\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\n\r\nfunction BasicDetails(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [check, setCheck] = useState(false);\r\n\r\n\r\n  const { register, formState: { errors }, handleSubmit } = useForm();\r\n  const firstName = register('firstName', { required: \"This is required.\", minLength: { value: 2, message: \"Min 2\" }, maxLength: { value: 11, message: \"Max 11\" } })\r\n  const lastName = register('lastName', { required: \"This is required.\", minLength: { value: 2, message: \"Min 2\" }, maxLength: { value: 10, message: \"Max 10\" } })\r\n  const email = register('email', { required: \"This is required.\", pattern: { value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, message: \"Email No Valid\" } })\r\n  const phone = register('phone', { required: \"This is required.\", pattern: { value: /0[0-9]{9}/, message: \"Phone No Valid\" } })\r\n  const password = register('password', { required: \"This is required.\", minLength: { value: 5, message: \"Min 5\" }, maxLength: { value: 5, message: \"Max 5\" }, pattern: { value: /[0-9a-zA-Z]{5}/, message: \"Make sure it's at least 5 characters OR characters including a number , a lowercase letter and a upperrcase letter\" } })\r\n  const passwordemail = register('passwordemail', { required: \"This is required.\" })\r\n  // const passwordphone = register('passwordemail', { required: \"This is required.\" })\r\n  let emailToPassword = \"\";\r\n\r\n  const onSubmit = data => {\r\n    let number = localStorage.getItem(\"number\");\r\n    console.log(data);\r\n    data.dateLogin = new Date();\r\n    data.phoneNamber = [];\r\n    data.phoneNamber.push(data.phone);\r\n    data.ifMessege = false;\r\n    data.adress = \"\";\r\n    data.img = selectedImage;\r\n\r\n    if (data.passwordemail == number.substring(3, 8)) {\r\n\r\n      AddUser(data).then((succ) => {\r\n        console.log(succ.data);\r\n\r\n        props.SignIn(succ.data);\r\n        props.IfExist(false);\r\n        props.ErrorInAdd(false);\r\n        settypeAlert(\"success\");\r\n        setmasseg(\"Adding Success\");\r\n        handleClick();\r\n\r\n      }).catch(ee => {\r\n        console.log(ee.massege);\r\n        if (ee.response.status == 500) {\r\n          props.IfExist(true);\r\n          props.ErrorInAdd(false);\r\n        }\r\n\r\n        else {\r\n          props.ErrorInAdd(true);\r\n          props.IfExist(false);\r\n        }\r\n        settypeAlert(\"error\");\r\n        setmasseg(ee.response.data)\r\n\r\n        handleClick();\r\n      });\r\n\r\n    }\r\n    else {\r\n      settypeAlert(\"error\");\r\n      setmasseg(\"קוד האימות שגוי\");\r\n\r\n      handleClick();\r\n    }\r\n\r\n    //util פונקציה מה \r\n\r\n  }\r\n\r\n  onchange = (e) => {\r\n    console.log(e);\r\n    setCheck(e.target.checked);\r\n\r\n  }\r\n\r\n  // alerts\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [typeAlert, settypeAlert] = React.useState(\"\");\r\n  const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n\r\n  const [selectedImage, setselectedImage] = useState();\r\n\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n\r\n  // alerts\r\n\r\n  const onFileChange = (e) => {\r\n    let files = e.target.files;\r\n    let fileReader = new FileReader();\r\n    fileReader.readAsDataURL(files[0]);\r\n\r\n    fileReader.onload = (event) => {\r\n      setselectedImage(event.target.result)\r\n\r\n    }\r\n  }\r\n\r\n\r\n  const sendPasswordFunc = () => {\r\n\r\n    let number = Math.floor(Math.random() * 90000) + 10000;\r\n\r\n    let num1 = Math.floor(Math.random() * 900) + 100;\r\n    let num2 = Math.floor(Math.random() * 90) + 10;\r\n\r\n    localStorage.setItem(\"number\", num1 + \"\" + number + \"\" + num2);\r\n\r\n    let mail = {\r\n      toUser: emailToPassword,\r\n      subject: \"קוד אימות\",\r\n      text: `<h1>${number}</h1>`\r\n      // ,attachments\r\n    }\r\n    SendMail(mail);\r\n  }\r\n\r\n\r\n  //history\r\n  const history = useHistory();\r\n  const changeHistory = (path) => {\r\n      history.push(path);\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    return (props.IfExist(false), props.ErrorInAdd(false))\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {/* alerts */}\r\n\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n      </Snackbar>\r\n\r\n      {/* alerts */}\r\n\r\n      <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)} style={{ \"margin-top\": \"31px\" }} >\r\n\r\n\r\n        {/* <input type=\"file\" className=\"form-control\" name=\"image\" onChange={onFileChange} /> */}\r\n        <Grid container spacing={2} >\r\n          <Grid item xs={12} sm={4} style={{ \"padding\": \"22px\" }}>\r\n            <Input placeholder=\"First Name\"\r\n              inputProps={ariaLabel}\r\n              autoComplete=\"fname\"\r\n              name=\"firstName\"\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"firstName\"\r\n              autoFocus\r\n              {...firstName}\r\n            />\r\n\r\n            <ErrorMessage errors={errors} name=\"firstName\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4} style={{ \"padding\": \"22px\" }}>\r\n            \r\n            <Input placeholder=\"Last Name\"\r\n              inputProps={ariaLabel}\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              autoComplete=\"lname\"\r\n              {...lastName}\r\n            />\r\n\r\n            <ErrorMessage errors={errors} name=\"lastName\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4} style={{ \"padding\": \"22px\" }}>\r\n            <Input placeholder=\"Password\"\r\n              inputProps={ariaLabel}\r\n              autoComplete=\"password\"\r\n              name=\"password\"\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"password\"\r\n              {...password}\r\n            />\r\n\r\n            <ErrorMessage errors={errors} name=\"password\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n            <Input placeholder=\"Email Address\"\r\n              inputProps={ariaLabel}\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              onKeyUp={(e) => emailToPassword = e.target.value}\r\n              {...email}\r\n            />\r\n  \r\n            <ErrorMessage errors={errors} name=\"email\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n      \r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2} style={{ \"padding\": \"22px\" }}>\r\n\r\n          <Button onClick={sendPasswordFunc} size=\"small\"   className={classes.margin} variant=\"contained\" endIcon={<SendIcon />}>\r\n            Send\r\n          </Button>\r\n\r\n\r\n            {/* <Button >\r\n              Send\r\n          </Button> */}\r\n\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4} style={{ \"padding\": \"22px\" }}>\r\n\r\n            <Input placeholder=\"Password Email\"\r\n              inputProps={ariaLabel}\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"passwordemail\"\r\n              name=\"passwordemail\"\r\n              autoComplete=\"passwordemail\"\r\n             // onKeyUp={(e) => emailToPassword = e.target.value}\r\n              {...passwordemail}\r\n            />\r\n\r\n            <ErrorMessage errors={errors} name=\"passwordemail\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n         \r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n\r\n            <Input placeholder=\"Phone\"\r\n              inputProps={ariaLabel}\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              autoComplete=\"phone\"\r\n              {...phone}\r\n            />\r\n\r\n            <ErrorMessage errors={errors} name=\"phone\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2} style={{ \"padding\": \"22px\" }}>\r\n            <Button onClick={sendPasswordFunc} variant=\"contained\" size=\"small\"  className={classes.margin} endIcon={<SendIcon />}>\r\n              Send\r\n          </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4} style={{ \"padding\": \"22px\" }}>\r\n            <Input placeholder=\"Password Phone\"\r\n              inputProps={ariaLabel}\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"passwordphone\"\r\n              name=\"passwordphone\"\r\n              autoComplete=\"passwordphone\"\r\n              onKeyUp={(e) => emailToPassword = e.target.value}\r\n            // {...passwordphone}\r\n            />\r\n \r\n            <ErrorMessage errors={errors} name=\"passwordemail\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" onChange={(e) => onchange(e)} />}\r\n              label=\"agree the conditions of use\"\r\n            />\r\n\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n\r\n        <ColorButton\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ \"background-color\": \"#fb7375\",\"border-radius\": \"0px 0px 0px 0px\",\"width\": \"20%\",\r\n          \"margin-left\": \"78%\",\r\n          \"margin-top\":\" 3%\", 'color':'white'}}\r\n          className={classes.margin + \" \"+classes.submit}\r\n          fullWidth\r\n          type=\"submit\"\r\n          onClick={()=>setTimeout(() => {\r\n            changeHistory(\"/SignUp/ExpandingDetails\")\r\n          }, 2000)}\r\n          disabled={!check}\r\n        >\r\n        Continue\r\n\r\n        </ColorButton>\r\n\r\n        <ColorButton\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ \"background-color\": \"#0b0b2b\",\"border-radius\": \"0px 0px 0px 0px\",\"width\": \"20%\",\r\n          \"margin-left\": \"57%\",\r\n          \"margin-top\":\" -8.5%\",\r\n           'color':'white'}}\r\n          className={classes.margin + \" \"+classes.submit}\r\n          type=\"submit\"\r\n          fullWidth\r\n          disabled={!check}\r\n        >\r\n             Sign Up\r\n         \r\n        </ColorButton>\r\n\r\n        <Grid container justifyContent=\"flex-end\">\r\n\r\n          <Grid item>\r\n\r\n            <Link to=\"/SignIn\">\r\n\r\n              Already have an account? Sign in\r\n\r\n              </Link>\r\n\r\n          </Grid>\r\n\r\n        </Grid>\r\n            <div style={styleblue}> </div>\r\n\r\n      </form>\r\n         \r\n    </>\r\n\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  return { ifExist: state.usersPart.IfExist, errorInAdd: state.usersPart.ErrorInAdd };\r\n}\r\nexport default connect(mapStateToProps, { IfExist, ErrorInAdd, SignIn })(BasicDetails);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdatePersonalDetails.js",["592","593","594","595","596","597","598","599","600","601","602","603","604","605"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport { AddUser } from '../../actions/index';\r\nimport user from '../classes/user';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport '../LogIn/SingUp.scss';\r\nimport { IfExist, ErrorInAdd } from '../../actions/index';\r\nimport axios from 'axios';\r\nimport { Redirect, useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { GetCurrentUser } from '../../util/index';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { UpdateUser, GetCurrentUserById, UpdateStatusTask } from '../../util/index';\r\nimport Input from '@mui/material/Input';\r\nimport person from '../search/img/person.png';\r\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundImage: \"linear-gradient(132deg, black 0%, #ff716e 0%, #0b0b2b 80%)\"\r\n    },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nfunction UpdatePersonalDetails(props) {\r\n\r\n    // עיצוב\r\n    const classes = useStyles();\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n\r\n\r\n    //img\r\n\r\n    const [imsState, setimsState] = useState();\r\n    const [imsStateToShow, setimsStateToShow] = useState();\r\n\r\n    const styleItem = {\r\n        \"padding\": \"0px\",\r\n        \"top\": \"42px\",\r\n        \"margin-left\": \"40%\",\r\n        \"position\": \"relative\"\r\n\r\n    }\r\n    const styleLable = {\r\n        \"width\": \"93%\",\r\n        \"height\": \"30%\",\r\n        \"margin-top\": \"-26%\"\r\n    }\r\n    const styleInputImg = {\r\n        \"border-radius\": \"50%\",\r\n        \"height\": props.iconH ? props.iconH : \"3em\",\r\n        \"width\": props.iconW ? props.iconW : \"14%\",\r\n        \"margin-left\": props.iconMarginLeft ? props.iconMarginLeft : \"3%\",\r\n        \"margin-bottom\": props.iconMarginBottom ? props.iconMarginBottom : \"18%\",\r\n        \"position\": \"relative\"\r\n    }\r\n    const styleImg = {\r\n        \"width\": props.imgW ? props.imgW : \"59%\",\r\n        \"border-radius\": \"50%\",\r\n        \"height\": props.imgH ? props.imgH : \"13em\",\r\n        \"margin-top\": \"-105%\",\r\n        \"z-index\": \"10\",\r\n        \"margin-left\": props.imgMarginLeft\r\n\r\n    }\r\n\r\n    const onchangeImg = (e) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            setimsState(e.target.files[0]);\r\n            console.log(e.target.files[0]);\r\n            setimsStateToShow(e.target.value);\r\n            e.preventDefault();\r\n            const reader = new FileReader();\r\n            const file = e.target.files[0];\r\n            reader.onloadend = () => {\r\n                setimsStateToShow(reader.result);\r\n            }\r\n            reader.readAsDataURL(file);\r\n        }\r\n\r\n    }\r\n\r\n    //img\r\n\r\n    // const { id, idTask } = useParams();\r\n\r\n    const id = props.id;\r\n    const idTask = props.idTask;\r\n\r\n    // משתנה לעדכון \r\n    let updateUser = new user();\r\n    updateUser.firstName = null;\r\n    updateUser.lastName = null;\r\n    updateUser.password = null;\r\n    updateUser.phoneNamber = null;\r\n    updateUser.adress = null;\r\n\r\n\r\n    // טופס\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const firstName = register('firstName', { minLength: { value: 2, message: \"Min 2\" }, maxLength: { value: 11, message: \"Max 11\" } })\r\n    const lastName = register('lastName', { minLength: { value: 2, message: \"Min 2\" }, maxLength: { value: 10, message: \"Max 10\" } })\r\n    const email = register('email', { pattern: { value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, message: \"Email No Valid\" } })\r\n    const phone = register('phone', { pattern: { value: /0[0-9]{9}/, message: \"Phone No Valid\" } })\r\n    const password = register('password', { minLength: { value: 5, message: \"Min 5\" }, maxLength: { value: 5, message: \"Max 5\" }, pattern: { value: /[0-9a-zA-Z]{5}/, message: \"Make sure it's at least 5 characters OR characters including a number , a lowercase letter and a upperrcase letter\" } })\r\n    const address = register('address');\r\n\r\n\r\n    // פונקצית העדכון\r\n    const onSubmit = async data => {\r\n\r\n        data.ifMessege = data.ifMessege === \"\" ? currentUser.ifMessege : data.ifMessege;\r\n\r\n        let fd = new FormData();\r\n        fd.append('img', imsState);\r\n        fd.append('ifMessege', data.ifMessege);\r\n        fd.append('adress', data.adress);\r\n        fd.append('lastName', data.lastName);\r\n        fd.append('firstName', data.firstName);\r\n        fd.append('phoneNamber', data.phoneNamber);\r\n        fd.append('password', data.password);\r\n        fd.append('_id', id ? id : localStorage.getItem(\"currentUserId\"));\r\n\r\n\r\n\r\n        if (updateUser.firstName === \"\" || updateUser.lastName === \"\" || updateUser.adress === \"\" || updateUser.phoneNamber === \"\" || updateUser.password === \"\") {\r\n            settypeAlert(\"error\");\r\n            setmasseg(\"ALL INPUT IS REQUIRED\");\r\n            handleClick();\r\n        }\r\n        else {\r\n            UpdateUser(fd, id ? id : localStorage.getItem(\"currentUserId\")).then(succ => {\r\n                // if (idTask && id)\r\n                //     UpdateStatusTask(idTask, true);\r\n                settypeAlert(\"success\");\r\n                setmasseg(\"Updating Success\");\r\n                handleClick();\r\n\r\n            }).catch(error => {\r\n\r\n                settypeAlert(\"error\");\r\n                setmasseg(error.response.data)\r\n                handleClick();\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const onKeyUp = (e, type) => {\r\n\r\n        updateUser[type] = e.target.value;\r\n        // e.target.value = updateUser[type];\r\n        // if (updateUser[type] == '')\r\n        //     updateUser[type] = null;\r\n    }\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n    useEffect(() => {\r\n\r\n        if (id) {\r\n            GetCurrentUserById(id).then(data => {\r\n                setCurrentUser(data.data);\r\n\r\n            }).catch(() => {\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n\r\n        else\r\n            // שליפת המשתמש הנוכחי\r\n            GetCurrentUser().then(data => {\r\n                setCurrentUser(data.data);\r\n\r\n            }).catch(() => {\r\n\r\n            });\r\n\r\n        return (props.IfExist(false), props.ErrorInAdd(false));\r\n\r\n    }, [props.idUserUpdate])\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* alerts */}\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n            </Snackbar>\r\n            {/* alerts */}\r\n\r\n            {currentUser && <form className={classes.form} noValidate onSubmit={handleSubmit(() => onSubmit(updateUser))}>\r\n\r\n                <Grid container spacing={2}>\r\n\r\n                    <Grid item xs={12} sm={4} style={styleItem}>\r\n\r\n                        <label htmlFor=\"photo-upload\" className=\"custom-file-upload fas\" style={styleLable}>\r\n                            <input type=\"file\" className=\"form-control\"\r\n                                accept=\"image/png, image/jpeg\"\r\n                                name=\"image\" onChange={(e) => onchangeImg(e)}\r\n                                style={styleInputImg}\r\n                            />\r\n< PhotoCameraIcon style={{\"font-size\":\" 2rem\", \"margin-top\": \"-92px\", \"position\": \"absolute\",\"left\": \"18px\" }}></PhotoCameraIcon> \r\n                            <img for=\"photo-upload\" style={styleImg} src={imsStateToShow ? imsStateToShow : currentUser.img ? currentUser.img : person} />\r\n\r\n                        </label>\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n                    <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                        <Input\r\n                            autoComplete=\"fname\"\r\n                            name=\"firstName\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"firstName\"\r\n                            label=\"First Name\"\r\n                            defaultValue={currentUser.firstName}\r\n                            onKeyUp={(e) => onKeyUp(e, \"firstName\")}\r\n                            {...firstName}\r\n                        // onLoad={() => updateUser.firstName = currentUser.firstName}\r\n                        />\r\n                        <p></p>\r\n                        <ErrorMessage errors={errors} name=\"firstName\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                        <Input\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"lastName\"\r\n                            label=\"Last Name\"\r\n                            name=\"lastName\"\r\n                            autoComplete=\"lname\"\r\n                            defaultValue={currentUser.lastName}\r\n                            onKeyUp={(e) => onKeyUp(e, \"lastName\")}\r\n                            {...lastName}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"lastName\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ \"padding\": \"22px\" }}>\r\n                        <Input\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            defaultValue={currentUser.email}\r\n                            onKeyUp={(e) => onKeyUp(e, \"email\")}\r\n                            {...email}\r\n                            disabled=\"true\"\r\n                        />\r\n\r\n                        <ErrorMessage errors={errors} name=\"email\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n                        {props.ifExist ? <p className=\"redColor\">This Email Alrady Exist</p> : null}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                        <Input\r\n                            autoComplete=\"password\"\r\n                            name=\"password\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            defaultValue={currentUser.password}\r\n                            onKeyUp={(e) => onKeyUp(e, \"password\")}\r\n                            {...password}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"password\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                        <Input\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"phone\"\r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            autoComplete=\"phone\"\r\n                            defaultValue={currentUser.phoneNamber}\r\n                            onKeyUp={(e) => onKeyUp(e, \"phoneNamber\")}\r\n                            {...phone}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"phone\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                        <Input\r\n                            autoComplete=\"fname\"\r\n                            name=\"address\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"address\"\r\n                            label=\"Address\"\r\n                            defaultValue={currentUser.adress}\r\n                            onKeyUp={(e) => onKeyUp(e, \"adress\")}\r\n                            {...address}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox defaultChecked={currentUser.ifMessege}\r\n                                color=\"primary\" onClick={(e) => {\r\n                                    updateUser.ifMessege = e.target.checked\r\n                                }} />}\r\n                            label=\"I want to be notified if they searched for me\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                {props.errorInAdd ? <p className=\"redColor\">Error System</p> : null}\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                    Update\r\n          </Button>\r\n\r\n            </form>}\r\n        </>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    // ;\r\n    return {\r\n        ifExist: state.usersPart.IfExist, errorInAdd: state.usersPart.ErrorInAdd,\r\n        idUserUpdate: state.usersPart.IdUserManagerUpdate\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { AddUser, IfExist, ErrorInAdd })(UpdatePersonalDetails);\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\ModelCompo.js",["606","607","608","609"],"import { useState } from 'react';\r\nimport { Button, Image, Modal, List } from 'semantic-ui-react';\r\n\r\nconst ModelCompo = (props) => {\r\n\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const styleAction = { \"height\": \"3em\", \"margin-top\": \"-7%\" }\r\n\r\n    return (<>\r\n\r\n        <Modal\r\n\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={<div>\r\n                {props.button}\r\n            </div>}\r\n        >\r\n\r\n            <div style={{ \"margin-top\": \"155px\" }}>\r\n                {props.compo}\r\n            </div>\r\n\r\n        </Modal>\r\n\r\n\r\n\r\n\r\n\r\n    </>);\r\n}\r\n\r\nexport default ModelCompo;","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\Business.js",["610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628"],"import { connect } from \"react-redux\";\r\nimport './Business.scss';\r\nimport { SelectedBusiness, ChangeColorName } from '../../actions/index';\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\r\nimport { Button, Image, Modal, List } from 'semantic-ui-react';\r\nimport ico from './img/person.png';\r\nimport { AddHistoryBusiness } from '../../util/index';\r\nimport { FromAddress } from '../../util/index'\r\nimport MyLocation from \"./MyLocation\";\r\nimport UpdataBusiness from '../Tasks/UpdataBusiness'\r\nimport RoomIcon from '@mui/icons-material/Room';\r\n\r\nconst Business = (props) => {\r\n\r\n\r\n    const { url, path } = useRouteMatch();\r\n\r\n\r\n    const [Cenetr, SetCenetr] = useState(null);\r\n    const [Txt, SetTxt] = useState(null);\r\n    const [Zoom, SetZoom] = useState(15);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    //styles\r\n\r\n    const styleDivContent = { \"margin-top\": \"0\", \"border-top-right-radius\": 0, \"border-top-left-radius\": 0 }\r\n    const styleDivW = { \"position\": \"relative\", \"top\": \"74%\" }\r\n    const styleAction = { \"height\": \"3em\", \"margin-top\": \"-7%\" }\r\n    const styleIconUser = { \"margin-left\": \"-2em\", \"color\": \"white\" }\r\n    const styleImg = {\r\n        \"display\": \"block\", \"max-width\": \"100%\", \"height\": \"7em\", \"width\": \"100%\", \"position\": \"relative\", \"top\": \"3em\", \"left\": \"-3em\"\r\n    }\r\n    \r\n    const styleIconExport = { \"margin-left\": \"3em\", \"color\": \"white\" }\r\n   \r\n    //styles\r\n\r\n    let indexName = props.business.name.indexOf(props.ColorName);\r\n    let start = props.business.name.substring(0, indexName);\r\n    let end = props.business.name.substring(indexName + props.ColorName.length, props.business.name.length);\r\n    const checkName = (name) => {\r\n        return name[0] >= 'A' && name[0] <= 'Z' || name[0] >= 'a' && name[0] <= 'z';\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        FromAddress(props.business.adress).then(response => {\r\n\r\n            const { lat, lng } = response.results[0].geometry.location;\r\n            console.log(lat + \" \" + lng);\r\n            console.log(response.results[0]);\r\n\r\n            SetCenetr({ lat: lat, lng: lng });\r\n            // SetTxt(RoomIcon);\r\n            SetTxt(response.results[0].address_components[0].long_name);\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    function myFunction() {\r\n        var myWindow = window.open(url + \"/TasksUpdataBusiness/\" + props.business._id, \"updataBusiness\", \"width=400,height=300\");\r\n        localStorage.setItem(\"idBusinesSearch\",props.business._id);\r\n    }\r\n\r\n    return (\r\n        <List.Item key={props.business._id}>\r\n\r\n            <List.Content floated='right'>\r\n\r\n                <Modal\r\n\r\n                    onClose={() => setOpen(false)}\r\n                    onOpen={() => setOpen(true)}\r\n                    open={open}\r\n                    trigger={<div>\r\n\r\n                        <div className=\"place_business\" onClick={() => {\r\n                            props.SelectedBusiness(props.business)\r\n                            if (props.ifAdd == \"true\")\r\n                                AddHistoryBusiness(localStorage.getItem(\"currentUserId\"), props.business._id);\r\n                        }}>\r\n\r\n                            <img className=\"img_ico\" src={props.business.img && props.business.img !== \"undefined\"? props.business.img : ico}></img>\r\n\r\n                            <p className=\"display\" style={{ \"margin-left\": \"1.5em\" }}>&nbsp;</p>\r\n                            <p className=\"display\">{checkName(props.business.name) ? start : end}</p>\r\n                            {!checkName(props.business.name) && (end[0] == ' ' || props.ColorName[props.ColorName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                            <p className=\"color_name display\">{props.ColorName}</p>\r\n                            {checkName(props.business.name) && (end[0] == ' ' || props.ColorName[props.ColorName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                            <p className=\"display\">{checkName(props.business.name) ? end : start}</p>\r\n                      \r\n                        </div>\r\n\r\n                    </div>}\r\n                >\r\n                    <div className=\"div_content\" style={styleDivContent}>\r\n\r\n                        <div className=\"div_w\" style={styleDivW}></div>\r\n\r\n                    </div>\r\n\r\n                    <Modal.Actions style={styleAction}>\r\n\r\n                        <div style={{ \"margin-top\": \"-34.3%\" }}>\r\n\r\n                            <div className=\"div-ico\" style={{ \"margin-right\": \"-8%\" }} data-tooltip=\"הוסף לאנשי קשר\">\r\n\r\n                                <i class=\"user plus icon i\" style={styleIconUser}></i>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"img_business\">\r\n\r\n                                <Image size='medium' style={styleImg} src={props.business.img && props.business.img !== \"undefined\"? props.business.img : ico} wrapped className=\"place_img\" />\r\n\r\n                            </div>\r\n\r\n                            <div className=\"div-ico\" data-tooltip=\"דווח על תקלה\">\r\n\r\n                                <i class=\"exclamation triangle icon\" style={styleIconExport} onClick={myFunction}></i>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </Modal.Actions>\r\n\r\n                    <h2 className=\"place_detailes\" style={{ \"margin-top\": \"18%\" }}>\r\n\r\n                        <div className=\"div_all\">\r\n                            <i class=\"phone icon\"></i>\r\n                            <div className=\"place_div\">\r\n                                <p> {props.business.phoneNamber}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"div_all\">\r\n                            <div className=\"place_div\">\r\n                                <i class=\"envelope icon\"></i>\r\n                                <p><a href=\"mailto:abc@example.com?subject = Feedback&body = Message\">{props.business.email}</a></p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"div_all\">\r\n                            <i class=\"map marker alternate icon\"></i>\r\n                            <div className=\"place_div\"> <p> {props.business.adress}</p></div>\r\n\r\n                        </div>\r\n\r\n                    </h2>\r\n\r\n                    {Cenetr && Zoom && Txt && <MyLocation center={Cenetr} zoom={Zoom} txt={Txt} icon={RoomIcon}/>}\r\n             \r\n                </Modal>\r\n            </List.Content>\r\n        </List.Item>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { ColorName: state.businessPart.ColorName };\r\n}\r\nexport default connect(mapStateToProps, { SelectedBusiness, ChangeColorName })(Business);\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\AddCategory.js",["629","630","631","632","633","634","635","636","637","638","639"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../../components/classes/business'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getAllCategories, AddCategory as AddCategoryFunc, UpdateStatusTask } from '../../util/index';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport { ChangeUpdateBuisness } from '../../actions/index';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useParams } from 'react-router-dom'\r\n\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n}));\r\n\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nfunction AddCategory(props) {\r\n    // const { idTask } = useParams();\r\n\r\n    const idTask = props.idTask;\r\n    // עיצוב\r\n    const classes = useStyles();\r\n\r\n    const [categoriesArr, setCategoriesArr] = useState([]);\r\n\r\n    // משתנה להוספה \r\n    let category = {};\r\n\r\n    // טופס\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const name = register('name', { minLength: { value: 2, message: \"Min 2\" } })\r\n\r\n    // פונקצית העדכון\r\n    const onSubmit = async data => {\r\n        AddCategoryFunc(data).then(succ => {\r\n\r\n            // UpdateStatusTask(idTask,true);\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"Add Success\");\r\n            handleClick();\r\n\r\n        }).catch(error => {\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const onKeyUp = (e, type) => {\r\n        category[type] = e.target.value;\r\n    }\r\n\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n    useEffect(() => {\r\n\r\n        getAllCategories().then((succ) => {\r\n            setCategoriesArr(succ.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{\r\n            \"margin-top\": \"-21%\",\r\n            \"width\": \"100%\"\r\n        }}>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n            </Snackbar>\r\n            <List\r\n                sx={{\r\n                    width: '100%',\r\n                    maxWidth: 360,\r\n                    bgcolor: 'background.paper',\r\n                    position: 'relative',\r\n                    overflow: 'auto',\r\n                    maxHeight: 300,\r\n                    '& ul': { padding: 0 },\r\n                }}\r\n                subheader={<li />}\r\n                style={{ \"max-width\": \"100%\" }}\r\n            >\r\n                {categoriesArr && categoriesArr.map((item) => (\r\n                    <li>\r\n                        <ul>\r\n                            <ListItem >\r\n                                <ListItemText style={{ \"text-align\": \"end\" }} primary={`${item.name}`} />\r\n                            </ListItem>\r\n                        </ul>\r\n                    </li>\r\n                ))}\r\n            </List>\r\n            {<form className={classes.form} style={{ \"margin-top\": \"79px\" }} noValidate onSubmit={handleSubmit(() => onSubmit(category))}>\r\n\r\n\r\n\r\n                <Grid container spacing={2} style={{ \"display\": \"block\" }}>\r\n                    <Grid item xs={12} sm={6} style={{ \"max-width\": \"100%\" }}>\r\n                        <TextField\r\n                            autoComplete=\"fname\"\r\n                            name=\"name\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            onKeyUp={(e) => onKeyUp(e, \"name\")}\r\n                            {...name}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    style={{ backgroundImage: \"linear-gradient(132deg, black 0%, #ff716e 0%, #0b0b2b 80%)\" }}>\r\n\r\n                    Add\r\n                </Button>\r\n\r\n            </form>}\r\n        </div>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {};\r\n}\r\nexport default connect(mapStateToProps, {})(AddCategory);\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdateBuisness\\ListBuisness.js",["640","641","642","643","644","645","646","647","648","649","650","651","652"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ChangeUpdateBuisness } from '../../../actions/index';\r\nimport { connect } from \"react-redux\";\r\nimport { GetCurrentBuisness, GetAllBuisnessOfUser, deleteBuisness } from '../../../util/index';\r\nimport UpdateBuisness from './UpdateBuisnes';\r\nimport MiniUpdate from './MiniUpdate';\r\nimport ico from '../../search/img/person.png';\r\nimport { Image } from 'semantic-ui-react';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nfunction ListBuisness(props) {\r\n\r\n    //#region Modal\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const concelationDelete = () => {\r\n        setOpen(false);\r\n    }\r\n    const deleteBuisnessFunc = (id) => {\r\n\r\n        deleteBuisness(id).then(() => {\r\n            GetCurrentBuisnessFunc();\r\n\r\n        });\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    const styleDivContent = { \"margin-top\": \"0\", \"border-top-right-radius\": 0, \"border-top-left-radius\": 0 }\r\n    const styleDivW = { \"position\": \"relative\", \"top\": \"27%\" }\r\n    const styleAction = { \"height\": \"3em\", \"margin-top\": \"10%\" }\r\n    const styleIconUser = { \"margin-left\": \"-2em\", \"color\": \"white\" }\r\n    const styleP = { \"color\": \"white\",\"text-align\": \"initial\" }\r\n    const styleIconExport = { \"margin-left\": \"3em\", \"color\": \"white\" }\r\n\r\n    //#endregion\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    const [secondary, setSecondary] = React.useState(false);\r\n    const [listBuisness, setlistBuisness] = React.useState([]);\r\n\r\n\r\n    const GetCurrentBuisnessFunc = () => {\r\n\r\n        GetAllBuisnessOfUser().then(data => {\r\n            console.log(data.data);\r\n            setlistBuisness(data.data);\r\n            if (props.updateBuisness == null)\r\n                props.ChangeUpdateBuisness(data.data[0]);\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n\r\n        });\r\n\r\n    }\r\n    const ChangeUpdateBuisness = (id) => {\r\n\r\n        GetCurrentBuisness(id).then(data => {\r\n            props.ChangeUpdateBuisness(data.data);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    const [ifNone, setifNone] = React.useState(false);\r\n\r\n    //style \r\n    const styleItem = {\r\n        \"height\": \"3em\", \"width\": \"48%\", \"padding-top\": \"56px\", \"background-color\": \"#0b0b2b\",\r\n        \"color\": \"white\"\r\n    }\r\n    const styleText = { \"margin-left\": \"20%\", \"margin-top\": \"-19%\" }\r\n    const styelIcon = { \"position\": \"relative\", \"left\": \"-66%\", \"bottom\": \"1.5rem\" }\r\n    useEffect(() => {\r\n\r\n        GetCurrentBuisnessFunc();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {listBuisness.length > 0 ? <Grid container spacing={2}>\r\n                <Grid item xs={9} md={8}>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n\r\n                    </Typography>\r\n                    <div className={classes.demo}>\r\n                        <List>\r\n                            {listBuisness && listBuisness.map((item, index) => {\r\n                                return (\r\n                                    <>\r\n                                        <ListItem onClick={() => {\r\n                                            ChangeUpdateBuisness(item._id)\r\n\r\n\r\n                                        }}\r\n                                            style={styleItem}\r\n                                        >\r\n                                            <ListItemAvatar style={{ \"margin-left\": \"-7%\" }}>\r\n                                                {/* <Image size='medium'  src={item.img ? item.img : ico} wrapped /> */}\r\n                                                <Image\r\n                                                    style={{\r\n                                                        \"margin-top\": \"-69%\",\r\n                                                        \"margin-left\": \" 17px\",\r\n                                                        \"height\": \"50px\",\r\n                                                        \"width\": \"50px\", \"border-radius\": \"28px\"\r\n                                                    }} src={item.img && item.img !== \"undefined\" ? item.img : ico}>\r\n\r\n                                                </Image>\r\n                                            </ListItemAvatar>\r\n\r\n\r\n\r\n                                            <Modal\r\n\r\n                                                onClose={() => setOpen(false)}\r\n                                                onOpen={() => setOpen(true)}\r\n                                                open={open}\r\n                                                trigger={\r\n                                                    <ListItemAvatar style={styelIcon}>\r\n                                                        <IconButton edge=\"end\" aria-label=\"delete\" >\r\n                                                            <DeleteIcon style={{ \"font-size\": \"1.5em\" }} onClick={() => ChangeUpdateBuisness(item._id)} />\r\n                                                        </IconButton>\r\n                                                    </ListItemAvatar>\r\n                                                }\r\n                                                style={{ \"height\": \"17.5em\" }}\r\n                                            >\r\n                                                {/* <div className=\"div_content\" style={styleDivContent}> */}\r\n\r\n                                                {/* </div> */}\r\n\r\n                                                <Modal.Actions style={styleAction}>\r\n                                                <p style={styleP}>  Are You Shur That You Whant To Delete The Busness?</p>\r\n\r\n                                                    <div style={{\r\n                                                        \"margin-top\": \"8.7%\",\r\n                                                        \"width\": \"50%\",\r\n                                                        \"margin-left\": \"23%\"\r\n                                                    }}>\r\n\r\n                     \r\n                                                        <CloseIcon onClick={concelationDelete} style={{ \"font-size\": \"2.6em\" }}></CloseIcon>\r\n\r\n                                                        <DeleteIcon style={{ \"font-size\": \"2.6em\", \"margin-left\": \"54%\" }} onClick={() => deleteBuisnessFunc(props.updateBuisness._id)} />\r\n                                                    \r\n\r\n                                                    </div>\r\n\r\n                                                </Modal.Actions>\r\n                                            </Modal>\r\n\r\n\r\n\r\n                                            <ListItemText\r\n                                                primary={item.name}\r\n                                                secondary={secondary ? 'Secondary text' : null}\r\n                                                style={styleText}\r\n                                            />\r\n                                        </ListItem>\r\n                                        <div style={{ \"height\": \"9px\" }}></div>\r\n                                        {<MiniUpdate item={item} />}\r\n                                        <div>\r\n                                            <UpdateBuisness GetAllBuisnessOfUser={GetCurrentBuisnessFunc} id={item._id} />\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            })}\r\n                        </List>\r\n                    </div>\r\n                </Grid>\r\n\r\n            </Grid> : null}\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { updateBuisness: state.businessPart.updateBuisness };\r\n}\r\nexport default connect(mapStateToProps, { ChangeUpdateBuisness })(ListBuisness);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Histories\\Buisness.js",["653","654","655","656","657","658","659","660"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Users.scss';\r\nimport Business from \"../../search/Business\";\r\nimport { GetCurrentUser, DeleteHistoryBusiness } from '../../../util/index';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n    style: {\r\n        maxWidth: \"32%\"\r\n    }\r\n}));\r\n\r\nconst Buisness = (props) => {\r\n\r\n    let cntB=0;\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    const [secondary, setSecondary] = React.useState(false);\r\n\r\n    const GetCuccentUserFunc = async () => {\r\n\r\n        GetCurrentUser().then(succ => setCurrentUser(succ.data)).catch(() => setifGoToLogin(true));\r\n    }\r\n\r\n    const DeleteHistoryFunc = async (index) => {\r\n        DeleteHistoryBusiness(index).then(succ => {\r\n            if (succ.status == 200)\r\n                GetCuccentUserFunc();\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        GetCuccentUserFunc();\r\n\r\n    }, []);\r\n\r\n    return (<>\r\n        {currentUser ?\r\n            <>\r\n                <Grid item xs={12} md={6}>\r\n                    <div className={classes.demo}>\r\n                        <List>\r\n                            {\r\n                                currentUser.lastSearchBusiness.map((item, index) => {\r\n                                    if (cntB < 7 && item.businessSearch)\r\n                                    {\r\n                                        cntB++;\r\n                                         return (item.businessSearch && <ListItem>\r\n\r\n                                            {/* <p>{item.date}</p> */}\r\n                                            <ListItemText\r\n                                                primary={<Business ifAdd=\"false\" business={item.businessSearch} key={index} />}\r\n                                                secondary={secondary ? 'Secondary text' : null}\r\n                                            />\r\n                                            <ListItemAvatar>\r\n                                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => DeleteHistoryFunc(index)}>\r\n                                                    <DeleteIcon style={{ \"font-size\": \"1.5em\" }} />\r\n                                                </IconButton>\r\n\r\n                                            </ListItemAvatar>\r\n                                        </ListItem>)\r\n                                    }\r\n                                       \r\n                                })\r\n                            }\r\n                        </List>\r\n                    </div>\r\n                </Grid>\r\n            </>\r\n            : null}\r\n\r\n    </>);\r\n}\r\n\r\nexport default Buisness;\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\UpdateBuisnesOfManager.js",["661","662","663","664","665","666","667","668","669","670","671"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../../components/classes/business'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getAllCategories, UpdateBuisnessFunc, GetCurrentBuisness, UpdateStatusTask } from '../../util/index';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport { ChangeUpdateBuisness } from '../../actions/index';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useParams } from 'react-router-dom';\r\nimport person from '../search/img/person.png';\r\nimport Input from '@mui/material/Input';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundImage: \"linear-gradient(132deg, black 0%, #ff716e 0%, #0b0b2b 80%)\"\r\n    },\r\n}));\r\n\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nfunction UpdateBuisnesOfManager(props) {\r\n\r\n\r\n    // עיצוב\r\n    const classes = useStyles();\r\n\r\n    const [currentBuisness, setcurrentBuisness] = useState(null);\r\n    const [imsState, setimsState] = useState();\r\n    const [imsStateToShow, setimsStateToShow] = useState();\r\n    const styleItem = {\r\n        \"padding\": \"0px\",\r\n        \"top\": \"42px\",\r\n        \"margin-left\": \"40%\",\r\n        \"position\": \"relative\"\r\n\r\n    }\r\n    const styleLable = {\r\n        \"width\": \"93%\",\r\n        \"height\": \"30%\",\r\n        \"margin-top\": \"-26%\"\r\n    }\r\n    // const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n    const styleImg = {\r\n        \"width\": props.imgW ? props.imgW : \"59%\",\r\n        \"border-radius\": \"50%\",\r\n        \"height\": props.imgH ? props.imgH : \"13em\",\r\n        \"margin-top\": \"-105%\",\r\n        \"z-index\": \"10\",\r\n        \"margin-left\": props.imgMarginLeft\r\n\r\n    }\r\n    const styleInputImg = {\r\n        \"border-radius\": \"50%\",\r\n        \"height\": props.iconH ? props.iconH : \"3em\",\r\n        \"width\": props.iconW ? props.iconW : \"14%\",\r\n        \"margin-left\": props.iconMarginLeft ? props.iconMarginLeft : \"3%\",\r\n        \"margin-bottom\": props.iconMarginBottom ? props.iconMarginBottom : \"18%\",\r\n        \"position\": \"relative\"\r\n    }\r\n    let listCategory = useRef([]);\r\n    const [categoriesArr, setCategoriesArr] = useState([]);\r\n    const [ifSelect, setIfSelect] = useState(false);\r\n\r\n    // const { id,idTask } = useParams();\r\n    const id = props.id;\r\n    const idTask = props.idTask;\r\n\r\n    // משתנה לעדכון \r\n    let updateBuisness = new business();\r\n\r\n    // טופס\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const name = register('name', { minLength: { value: 2, message: \"Min 2\" } })\r\n    const email = register('email', { pattern: { value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, message: \"Email No Valid\" } })\r\n    const phone = register('phone', { pattern: { value: /0[0-9]{9}/, message: \"Phone No Valid\" } })\r\n    const adress = register('adress');\r\n\r\n\r\n\r\n    // לא לשכוח\r\n    // this.img = \"\";\r\n    // this.advertising = \"\";\r\n    const onchangeImg = (e) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            setimsState(e.target.files[0]);\r\n            console.log(e.target.files[0]);\r\n            setimsStateToShow(e.target.value);\r\n            e.preventDefault();\r\n            const reader = new FileReader();\r\n            const file = e.target.files[0];\r\n            reader.onloadend = () => {\r\n                setimsStateToShow(reader.result);\r\n            }\r\n            reader.readAsDataURL(file);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // פונקצית העדכון\r\n    const onSubmit = async data => {\r\n\r\n        updateBuisness.listCategory = listCategory.current.getSelectedItems();\r\n\r\n\r\n        let fd = new FormData();\r\n        fd.append('img', imsState);\r\n        fd.append('adress', data.adress);\r\n        fd.append('name', data.name);\r\n        fd.append('email', data.email);\r\n        fd.append('phoneNamber', data.phoneNamber);\r\n        fd.append('_id', currentBuisness._id);\r\n\r\n\r\n\r\n        UpdateBuisnessFunc(currentBuisness._id, fd).then(succ => {\r\n            // UpdateStatusTask(idTask, true);\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"Updating Success\");\r\n            handleClick();\r\n\r\n        }).catch(error => {\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    const onKeyUp = (e, type) => {\r\n        updateBuisness[type] = e.target.value;\r\n        e.target.value = updateBuisness[type];\r\n        if (updateBuisness[type] == '')\r\n            updateBuisness[type] = null;\r\n    }\r\n\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n    useEffect(() => {\r\n\r\n        GetCurrentBuisness(id).then(succ => {\r\n            setcurrentBuisness(succ.data)\r\n        });\r\n\r\n        getAllCategories().then((succ) => {\r\n            let arrName = succ.data.map((data) => data.name);\r\n            setCategoriesArr(arrName);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n            </Snackbar>\r\n            {currentBuisness && <form className={classes.form} noValidate onSubmit={handleSubmit(() => onSubmit(updateBuisness))}>\r\n\r\n                <Grid item xs={12} sm={4} style={styleItem}>\r\n                    <label htmlFor=\"photo-upload\" className=\"custom-file-upload fas\" style={styleLable}>\r\n                        <input type=\"file\" className=\"form-control\"\r\n                            accept=\"image/png, image/jpeg\"\r\n                            name=\"image\" onChange={(e) => onchangeImg(e)}\r\n                            style={styleInputImg}\r\n                        />\r\n                        <img for=\"photo-upload\" style={styleImg} src={imsStateToShow ? imsStateToShow : currentBuisness.img ? currentBuisness.img : person} />\r\n                    </label>\r\n                </Grid>\r\n\r\n                <Grid container spacing={2} style={{\"margin-top\":\"42px\"}}>\r\n\r\n\r\n                    <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                        <Input\r\n                            autoComplete=\"fname\"\r\n                            name=\"name\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            defaultValue={currentBuisness.name}\r\n                            onKeyUp={(e) => onKeyUp(e, \"name\")}\r\n                            {...name}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"name\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                        <Input\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"address\"\r\n                            label=\"Address\"\r\n                            name=\"address\"\r\n                            autoComplete=\"lname\"\r\n                            defaultValue={currentBuisness.adress}\r\n                            onKeyUp={(e) => onKeyUp(e, \"adress\")}\r\n                            {...adress}\r\n                        />\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} style={{ \"padding\": \"22px\" }}>\r\n                        <Input\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            defaultValue={currentBuisness.email}\r\n                            onKeyUp={(e) => onKeyUp(e, \"email\")}\r\n                            {...email}\r\n                            disabled=\"true\"\r\n                        />\r\n\r\n                        <ErrorMessage errors={errors} name=\"email\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n                        {props.ifExist ? <p className=\"redColor\">This Email Alrady Exist</p> : null}\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                        <Input\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"phone\"\r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            autoComplete=\"phone\"\r\n                            defaultValue={currentBuisness.phoneNamber}\r\n                            onKeyUp={(e) => onKeyUp(e, \"phoneNamber\")}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"phone\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                        <Multiselect\r\n                            onSelect={(e) => setIfSelect(false)}\r\n                            label=\"Category\"\r\n                            name=\"category\"\r\n                            options={categoriesArr ? categoriesArr : []}\r\n                            isObject={false}\r\n                            ref={listCategory} type=\"text\"\r\n                            selectedValues={currentBuisness.listCategory}\r\n                        />\r\n                        {ifSelect && <p className=\"redColor\">This is required.</p>}\r\n                    </Grid>\r\n\r\n                   \r\n                </Grid>\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}>\r\n                    Update\r\n          </Button>\r\n\r\n            </form>}\r\n        </>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { updateBuisness: state.businessPart.updateBuisness };\r\n}\r\nexport default connect(mapStateToProps, { ChangeUpdateBuisness })(UpdateBuisnesOfManager);\r\n\r\n",["672","673"],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Histories\\Users.js",["674","675","676","677","678","679","680","681"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Users.scss'\r\nimport { GetCurrentUser, DeleteHistoryUsers } from '../../../util/index';\r\nimport User from \"../../search/User\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n    style: {\r\n        maxWidth: \"32%\"\r\n    }\r\n}));\r\n\r\nconst Users = (props) => {\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    // const [dense, setDense] = React.useState(false);\r\n    const [secondary, setSecondary] = React.useState(false);\r\n\r\n    const GetCuccentUserFunc = async () => {\r\n\r\n        GetCurrentUser().then(succ => setCurrentUser(succ.data)).catch(() => setifGoToLogin(true));\r\n\r\n    }\r\n    const DeleteHistoryFunc = async (index) => {\r\n\r\n        DeleteHistoryUsers(index).then(succ => {\r\n            if (succ.status == 200)\r\n                GetCuccentUserFunc();\r\n        })\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetCuccentUserFunc();\r\n    }, []);\r\n\r\n    return (<>\r\n        {currentUser ?\r\n            <>\r\n                <Grid item xs={12} md={6}>\r\n                    <div className={classes.demo}>\r\n                        <List>\r\n                            {\r\n                                currentUser.lastSearchUsers.map((item, index) => {\r\n                                    if (index < 7 && item.userSearch)\r\n                                        return (<ListItem style={{ \"margin-right\": \"50%\" }}>\r\n\r\n                                            {/* <p>{item.date}</p> */}\r\n                                            <ListItemText\r\n                                                primary={<User color=\"false\" ifAdd=\"false\" user={item.userSearch} key={index} />}\r\n                                                secondary={secondary ? 'Secondary text' : null}\r\n                                            />\r\n\r\n                                            <ListItemAvatar>\r\n                                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => DeleteHistoryFunc(index)}>\r\n                                                    <DeleteIcon style={{ \"font-size\": \"1.5em\" }} />\r\n                                                </IconButton>\r\n\r\n                                            </ListItemAvatar>\r\n                                        </ListItem>)\r\n                                })\r\n                            }\r\n                        </List>\r\n                    </div>\r\n                </Grid>\r\n            </>\r\n            : null}\r\n\r\n    </>);\r\n}\r\n\r\nexport default Users;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import List from '@material-ui/core/List';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\n// import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import FormGroup from '@material-ui/core/FormGroup';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import FolderIcon from '@material-ui/icons/Folder';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//     maxWidth: 752,\r\n//   },\r\n//   demo: {\r\n//     backgroundColor: theme.palette.background.paper,\r\n//   },\r\n//   title: {\r\n//     margin: theme.spacing(4, 0, 2),\r\n//   },\r\n// }));\r\n\r\n// function generate(element) {\r\n//   return [0, 1, 2].map((value) =>\r\n//     React.cloneElement(element, {\r\n//       key: value,\r\n//     }),\r\n//   );\r\n// }\r\n\r\n// export default function InteractiveList() {\r\n//   const classes = useStyles();\r\n//   const [dense, setDense] = React.useState(false);\r\n//   const [secondary, setSecondary] = React.useState(false);\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <FormGroup row>\r\n//         <FormControlLabel\r\n//           control={\r\n//             <Checkbox checked={dense} onChange={(event) => setDense(event.target.checked)} />\r\n//           }\r\n//           label=\"Enable dense\"\r\n//         />\r\n//         <FormControlLabel\r\n//           control={\r\n//             <Checkbox\r\n//               checked={secondary}\r\n//               onChange={(event) => setSecondary(event.target.checked)}\r\n//             />\r\n//           }\r\n//           label=\"Enable secondary text\"\r\n//         />\r\n//       </FormGroup>\r\n//       <Grid container spacing={2}>\r\n//         <Grid item xs={12} md={6}>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             Text only\r\n//           </Typography>\r\n//           <div className={classes.demo}>\r\n//             <List dense={dense}>\r\n//               {generate(\r\n//                 <ListItem>\r\n//                   <ListItemText\r\n//                     primary=\"Single-line item\"\r\n//                     secondary={secondary ? 'Secondary text' : null}\r\n//                   />\r\n//                 </ListItem>,\r\n//               )}\r\n//             </List>\r\n//           </div>\r\n//         </Grid>\r\n//         <Grid item xs={12} md={6}>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             Icon with text\r\n//           </Typography>\r\n//           <div className={classes.demo}>\r\n//             <List dense={dense}>\r\n//               {generate(\r\n//                 <ListItem>\r\n//                   <ListItemIcon>\r\n//                     <FolderIcon />\r\n//                   </ListItemIcon>\r\n//                   <ListItemText\r\n//                     primary=\"Single-line item\"\r\n//                     secondary={secondary ? 'Secondary text' : null}\r\n//                   />\r\n//                 </ListItem>,\r\n//               )}\r\n//             </List>\r\n//           </div>\r\n//         </Grid>\r\n//       </Grid>\r\n//       <Grid container spacing={2}>\r\n//         <Grid item xs={12} md={6}>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             Avatar with text\r\n//           </Typography>\r\n//           <div className={classes.demo}>\r\n//             <List dense={dense}>\r\n//               {generate(\r\n//                 <ListItem>\r\n//                   <ListItemAvatar>\r\n//                     <Avatar>\r\n//                       <FolderIcon />\r\n//                     </Avatar>\r\n//                   </ListItemAvatar>\r\n//                   <ListItemText\r\n//                     primary=\"Single-line item\"\r\n//                     secondary={secondary ? 'Secondary text' : null}\r\n//                   />\r\n//                 </ListItem>,\r\n//               )}\r\n//             </List>\r\n//           </div>\r\n//         </Grid>\r\n//         <Grid item xs={12} md={6}>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             Avatar with text and icon\r\n//           </Typography>\r\n//           <div className={classes.demo}>\r\n//             <List dense={dense}>\r\n//               {generate(\r\n//                 <ListItem>\r\n//                   <ListItemAvatar>\r\n//                     <Avatar>\r\n//                       <FolderIcon />\r\n//                     </Avatar>\r\n//                   </ListItemAvatar>\r\n//                   <ListItemText\r\n//                     primary=\"Single-line item\"\r\n//                     secondary={secondary ? 'Secondary text' : null}\r\n//                   />\r\n//                   <ListItemSecondaryAction>\r\n//                     <IconButton edge=\"end\" aria-label=\"delete\">\r\n//                       <DeleteIcon />\r\n//                     </IconButton>\r\n//                   </ListItemSecondaryAction>\r\n//                 </ListItem>,\r\n//               )}\r\n//             </List>\r\n//           </div>\r\n//         </Grid>\r\n//       </Grid>\r\n//     </div>\r\n//   );\r\n// }","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdateBuisness\\UpdateBuisnes.js",["682","683","684","685","686","687","688","689","690","691","692","693"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../../classes/business'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getAllCategories, UpdateBuisnessFunc } from '../../../util/index';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport { ChangeUpdateBuisness } from '../../../actions/index';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Input from '@mui/material/Input';\r\nimport person from '../../search/img/person.png';\r\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\r\nimport './UpdateBuisnes.scss';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundImage: \"linear-gradient(132deg, black 0%, #ff716e 0%, #0b0b2b 80%)\"\r\n        // backgroundColor: '#ff716e'\r\n    },\r\n}));\r\n\r\nconst styleGrid = {\r\n    \"margin-left\": \"63%\",\r\n    \"width\": \"153%\",\r\n    \"margin-top\": \"-27.5%\",\r\n    \"position\": \"relative\",\r\n    \"background-color\": \"#f2f2f2\",\r\n    \"height\": \"476px\"\r\n\r\n    // \"margin-left\": \"63%\",\r\n    // \"width\": \"153%\",\r\n    // \"margin-top\": \"3%\", \r\n    // \"position\": \"relative\"\r\n}\r\nconst styleForm = { \"position\": \"absolute\", \"top\": \"19rem\" }\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nfunction UpdateBuisness(props) {\r\n\r\n    // עיצוב\r\n    const classes = useStyles();\r\n\r\n    const [currentBuisness, setcurrentBuisness] = useState(null);\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n\r\n    let listCategory = useRef([]);\r\n    const [categoriesArr, setCategoriesArr] = useState([]);\r\n    const [ifSelect, setIfSelect] = useState(false);\r\n\r\n    // משתנה לעדכון \r\n    let updateBuisness = new business();\r\n\r\n    // טופס\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const name = register('name', { minLength: { value: 2, message: \"Min 2\" } })\r\n    const email = register('email', { pattern: { value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, message: \"Email No Valid\" } })\r\n    const phone = register('phone', { pattern: { value: /0[0-9]{9}/, message: \"Phone No Valid\" } })\r\n    const adress = register('adress');\r\n\r\n\r\n\r\n    // לא לשכוח\r\n    // this.img = \"\";\r\n    // this.advertising = \"\";\r\n\r\n\r\n    //img\r\n\r\n    const [imsState, setimsState] = useState();\r\n    const [imsStateToShow, setimsStateToShow] = useState();\r\n\r\n    const styleItem = {\r\n        \"padding\": \"9px\",\r\n        \"top\": \"220px\",\r\n        \"margin-left\": \"36%\",\r\n        \"position\": \"relative\",\r\n        \"background-color\": \"#f2f2f2\",\r\n        \"height\": \"224px\",\r\n        // \"padding\": \"0px\",\r\n        // \"top\": \"42px\",\r\n        // \"margin-left\": \"40%\",\r\n        // \"position\": \"relative\"\r\n\r\n    }\r\n    const styleLable = {\r\n        \"width\": \"93%\",\r\n        \"height\": \"30%\",\r\n        \"margin-top\": \"-26%\"\r\n    }\r\n    const styleInputImg = {\r\n        \"border-radius\": \"50%\",\r\n        \"height\": \"3em\",\r\n        \"width\": \"19%\",\r\n        \"margin-left\": \"3%\",\r\n        \"margin-bottom\": \"12%\",\r\n        \"position\": \"relative\"\r\n\r\n    }\r\n    const styleImg = {\r\n        \"width\": \"80%\",\r\n        \"border-radius\": \"50%\",\r\n        \"height\": \"13em\",\r\n        \"margin-top\": \"-105%\",\r\n        \"z-index\": \"10\"\r\n\r\n    }\r\n    const styleDiv = {\r\n        \"background-color\": \"rgb(11, 11, 43)\",\r\n        \"position\": \"absolute\",\r\n        \"top\": \"-219px\",\r\n        \"width\": \"758px\",\r\n        \"left\": \"-271px\",\r\n        \"height\": \"23px\"\r\n    }\r\n    const onchangeImg = (e) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            setimsState(e.target.files[0]);\r\n            console.log(e.target.files[0]);\r\n            setimsStateToShow(e.target.value);\r\n            e.preventDefault();\r\n            const reader = new FileReader();\r\n            const file = e.target.files[0];\r\n            reader.onloadend = () => {\r\n                setimsStateToShow(reader.result);\r\n            }\r\n            reader.readAsDataURL(file);\r\n        }\r\n\r\n    }\r\n\r\n    //img\r\n    // פונקצית העדכון\r\n    const onSubmit = async data => {\r\n\r\n        updateBuisness.listCategory = listCategory.current.getSelectedItems();\r\n\r\n\r\n        let fd = new FormData();\r\n        fd.append('img', imsState);\r\n        fd.append('adress', data.adress);\r\n        fd.append('name', data.name);\r\n        fd.append('phoneNamber', data.phoneNamber);\r\n        fd.append('email', data.email);\r\n        fd.append('userId', props.updateBuisness.userId);\r\n        fd.append('listCategory', data.listCategory);\r\n        fd.append('_id', data._id);\r\n\r\n\r\n\r\n        UpdateBuisnessFunc(props.updateBuisness._id, fd).then(succ => {\r\n\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"Updating Success\");\r\n            handleClick();\r\n            props.GetAllBuisnessOfUser();\r\n\r\n        }).catch(error => {\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    const onKeyUp = (e, type) => {\r\n        updateBuisness[type] = e.target.value;\r\n        e.target.value = updateBuisness[type];\r\n        if (updateBuisness[type] == '')\r\n            updateBuisness[type] = null;\r\n    }\r\n\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n    useEffect(() => {\r\n\r\n        getAllCategories().then((succ) => {\r\n            let arrName = succ.data.map((data) => data.name);\r\n            setCategoriesArr(arrName);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n            </Snackbar>\r\n\r\n            {props.updateBuisness && props.updateBuisness._id == props.id && <form className={classes.form} noValidate onSubmit={handleSubmit(() => onSubmit(updateBuisness))}\r\n                style={styleForm}>\r\n\r\n                <Grid style={styleGrid}>\r\n                    <Grid container spacing={2} >\r\n                        <Grid item xs={12} sm={4} style={styleItem}>\r\n                            <div style={styleDiv}></div>\r\n                            <label htmlFor=\"photo-upload\" className=\"custom-file-upload fas\" style={styleLable}>\r\n                                <input type=\"file\" className=\"form-control\"\r\n                                    accept=\"image/png, image/jpeg\"\r\n                                    name=\"image\" onChange={(e) => onchangeImg(e)}\r\n                                    style={styleInputImg}\r\n                                />\r\n\r\n                                < PhotoCameraIcon style={{ \"font-size\": \" 2rem\", \"margin-top\": \"-61px\", \"position\": \"absolute\", \"left\": \"22px\" }}></PhotoCameraIcon>\r\n                               \r\n\r\n\r\n                                <img for=\"photo-upload\" style={styleImg} src={imsStateToShow ? imsStateToShow : props.updateBuisness.img&&props.updateBuisness.img!==\"undefined\" ? props.updateBuisness.img : person} />\r\n\r\n\r\n                            </label>\r\n\r\n                        </Grid>\r\n\r\n\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                                <Input\r\n                                    autoComplete=\"fname\"\r\n                                    name=\"name\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"name\"\r\n                                    label=\"Name\"\r\n                                    defaultValue={props.updateBuisness.name}\r\n                                    onKeyUp={(e) => onKeyUp(e, \"name\")}\r\n                                    {...name}\r\n                                />\r\n                                <ErrorMessage errors={errors} name=\"name\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                                <Input\r\n                                    autoComplete=\"fname\"\r\n                                    name=\"address\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"address\"\r\n                                    label=\"Address\"\r\n                                    defaultValue={props.updateBuisness.adress}\r\n                                    onKeyUp={(e) => onKeyUp(e, \"adress\")}\r\n                                    {...adress}\r\n                                />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{ \"padding\": \"22px\" }}>\r\n                            <Input\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                defaultValue={props.updateBuisness.email}\r\n                                onKeyUp={(e) => onKeyUp(e, \"email\")}\r\n                                {...email}\r\n                            />\r\n                            <ErrorMessage errors={errors} name=\"email\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n                            {props.ifExist ? <p className=\"redColor\">This Email Alrady Exist</p> : null}\r\n                        </Grid>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                                <Multiselect \r\n                                    onSelect={(e) => setIfSelect(false)}\r\n                                    label=\"Category\"\r\n                                    name=\"category\"\r\n                                    options={categoriesArr ? categoriesArr : []}\r\n                                    isObject={false}\r\n                                    ref={listCategory} type=\"text\"\r\n                                    selectedValues={props.updateBuisness.listCategory}\r\n                                />\r\n                                {ifSelect && <p className=\"redColor\">This is required.</p>}\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} style={{ \"padding\": \"22px\" }}>\r\n                                <Input\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"phone\"\r\n                                    label=\"Phone\"\r\n                                    name=\"phone\"\r\n                                    autoComplete=\"phone\"\r\n                                    defaultValue={props.updateBuisness.phoneNamber}\r\n                                    onKeyUp={(e) => onKeyUp(e, \"phoneNamber\")}\r\n\r\n                                />\r\n                                <ErrorMessage errors={errors} name=\"phone\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}>\r\n                        Update\r\n          </Button>\r\n                </Grid>\r\n            </form>}\r\n        </>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { updateBuisness: state.businessPart.updateBuisness };\r\n}\r\nexport default connect(mapStateToProps, { ChangeUpdateBuisness })(UpdateBuisness);\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdateBuisness\\MiniUpdate.js",["694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../../classes/business'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getAllCategories, UpdateBuisnessFunc } from '../../../util/index';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport { ChangeUpdateBuisness } from '../../../actions/index';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Input from '@mui/material/Input';\r\nimport person from '../../search/img/person.png';\r\nfunction MiniUpdate(props) {\r\n  \r\n   \r\n    const styleDiv1 = {\r\n       \r\n    }\r\n    const styleDiv = {\r\n        \"display\":\"none\",\r\n        \"height\":\"96px\"\r\n    }\r\n    return (\r\n             <>\r\n                <Grid style={styleDiv} >{props.item.name}{console.log(props)}</Grid>\r\n                <Grid style={styleDiv}>{props.item.phoneNamber[0]}</Grid>\r\n                <Grid style={styleDiv}>{props.item.email}</Grid>\r\n             </>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { updateBuisness: state.businessPart.updateBuisness };\r\n}\r\nexport default connect(mapStateToProps, { ChangeUpdateBuisness })(MiniUpdate);\r\n",{"ruleId":"712","replacedBy":"713"},{"ruleId":"714","replacedBy":"715"},{"ruleId":"716","severity":1,"message":"717","line":5,"column":8,"nodeType":"718","messageId":"719","endLine":5,"endColumn":17},{"ruleId":"716","severity":1,"message":"720","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":18},{"ruleId":"716","severity":1,"message":"721","line":8,"column":8,"nodeType":"718","messageId":"719","endLine":8,"endColumn":18},{"ruleId":"716","severity":1,"message":"722","line":9,"column":8,"nodeType":"718","messageId":"719","endLine":9,"endColumn":18},{"ruleId":"716","severity":1,"message":"723","line":10,"column":8,"nodeType":"718","messageId":"719","endLine":10,"endColumn":17},{"ruleId":"716","severity":1,"message":"724","line":11,"column":8,"nodeType":"718","messageId":"719","endLine":11,"endColumn":22},{"ruleId":"716","severity":1,"message":"725","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":23},{"ruleId":"716","severity":1,"message":"726","line":12,"column":20,"nodeType":"718","messageId":"719","endLine":12,"endColumn":29},{"ruleId":"727","severity":1,"message":"728","line":35,"column":19,"nodeType":"729","messageId":"730","endLine":35,"endColumn":21},{"ruleId":"727","severity":1,"message":"728","line":35,"column":63,"nodeType":"729","messageId":"730","endLine":35,"endColumn":65},{"ruleId":"731","severity":1,"message":"732","line":51,"column":94,"nodeType":"733","endLine":51,"endColumn":148},{"ruleId":"727","severity":1,"message":"734","line":51,"column":116,"nodeType":"729","messageId":"730","endLine":51,"endColumn":118},{"ruleId":"727","severity":1,"message":"734","line":52,"column":101,"nodeType":"729","messageId":"730","endLine":52,"endColumn":103},{"ruleId":"727","severity":1,"message":"734","line":57,"column":97,"nodeType":"729","messageId":"730","endLine":57,"endColumn":99},{"ruleId":"727","severity":1,"message":"734","line":58,"column":91,"nodeType":"729","messageId":"730","endLine":58,"endColumn":93},{"ruleId":"731","severity":1,"message":"732","line":63,"column":94,"nodeType":"733","endLine":63,"endColumn":148},{"ruleId":"727","severity":1,"message":"734","line":63,"column":116,"nodeType":"729","messageId":"730","endLine":63,"endColumn":118},{"ruleId":"727","severity":1,"message":"734","line":64,"column":91,"nodeType":"729","messageId":"730","endLine":64,"endColumn":93},{"ruleId":"731","severity":1,"message":"732","line":69,"column":94,"nodeType":"733","endLine":69,"endColumn":148},{"ruleId":"727","severity":1,"message":"734","line":69,"column":116,"nodeType":"729","messageId":"730","endLine":69,"endColumn":118},{"ruleId":"727","severity":1,"message":"734","line":70,"column":93,"nodeType":"729","messageId":"730","endLine":70,"endColumn":95},{"ruleId":"731","severity":1,"message":"732","line":75,"column":94,"nodeType":"733","endLine":75,"endColumn":148},{"ruleId":"727","severity":1,"message":"734","line":75,"column":116,"nodeType":"729","messageId":"730","endLine":75,"endColumn":118},{"ruleId":"727","severity":1,"message":"734","line":76,"column":97,"nodeType":"729","messageId":"730","endLine":76,"endColumn":99},{"ruleId":"716","severity":1,"message":"735","line":2,"column":17,"nodeType":"718","messageId":"719","endLine":2,"endColumn":26},{"ruleId":"716","severity":1,"message":"736","line":2,"column":39,"nodeType":"718","messageId":"719","endLine":2,"endColumn":47},{"ruleId":"716","severity":1,"message":"737","line":4,"column":8,"nodeType":"718","messageId":"719","endLine":4,"endColumn":19},{"ruleId":"716","severity":1,"message":"738","line":5,"column":8,"nodeType":"718","messageId":"719","endLine":5,"endColumn":22},{"ruleId":"716","severity":1,"message":"739","line":10,"column":8,"nodeType":"718","messageId":"719","endLine":10,"endColumn":19},{"ruleId":"716","severity":1,"message":"740","line":23,"column":8,"nodeType":"718","messageId":"719","endLine":23,"endColumn":24},{"ruleId":"741","severity":1,"message":"742","line":54,"column":15,"nodeType":"743","endLine":65,"endColumn":6},{"ruleId":"744","severity":1,"message":"745","line":75,"column":25,"nodeType":"746","endLine":75,"endColumn":86},{"ruleId":"744","severity":1,"message":"745","line":19,"column":17,"nodeType":"746","endLine":19,"endColumn":35},{"ruleId":"744","severity":1,"message":"745","line":20,"column":17,"nodeType":"746","endLine":20,"endColumn":35},{"ruleId":"716","severity":1,"message":"747","line":18,"column":8,"nodeType":"718","messageId":"719","endLine":18,"endColumn":17},{"ruleId":"716","severity":1,"message":"748","line":19,"column":8,"nodeType":"718","messageId":"719","endLine":19,"endColumn":16},{"ruleId":"716","severity":1,"message":"749","line":20,"column":10,"nodeType":"718","messageId":"719","endLine":20,"endColumn":23},{"ruleId":"716","severity":1,"message":"750","line":24,"column":8,"nodeType":"718","messageId":"719","endLine":24,"endColumn":24},{"ruleId":"716","severity":1,"message":"751","line":25,"column":8,"nodeType":"718","messageId":"719","endLine":25,"endColumn":18},{"ruleId":"716","severity":1,"message":"752","line":39,"column":7,"nodeType":"718","messageId":"719","endLine":39,"endColumn":11},{"ruleId":"716","severity":1,"message":"753","line":96,"column":11,"nodeType":"718","messageId":"719","endLine":96,"endColumn":17},{"ruleId":"741","severity":1,"message":"754","line":108,"column":3,"nodeType":"755","endLine":108,"endColumn":18,"suggestions":"756"},{"ruleId":"727","severity":1,"message":"734","line":111,"column":18,"nodeType":"729","messageId":"730","endLine":111,"endColumn":20},{"ruleId":"727","severity":1,"message":"734","line":111,"column":43,"nodeType":"729","messageId":"730","endLine":111,"endColumn":45},{"ruleId":"727","severity":1,"message":"734","line":111,"column":68,"nodeType":"729","messageId":"730","endLine":111,"endColumn":70},{"ruleId":"727","severity":1,"message":"734","line":111,"column":102,"nodeType":"729","messageId":"730","endLine":111,"endColumn":104},{"ruleId":"727","severity":1,"message":"728","line":123,"column":13,"nodeType":"729","messageId":"730","endLine":123,"endColumn":15},{"ruleId":"727","severity":1,"message":"728","line":123,"column":57,"nodeType":"729","messageId":"730","endLine":123,"endColumn":59},{"ruleId":"757","severity":1,"message":"758","line":187,"column":25,"nodeType":"759","messageId":"760","endLine":187,"endColumn":27},{"ruleId":"757","severity":1,"message":"758","line":187,"column":38,"nodeType":"759","messageId":"760","endLine":187,"endColumn":40},{"ruleId":"716","severity":1,"message":"761","line":4,"column":10,"nodeType":"718","messageId":"719","endLine":4,"endColumn":19},{"ruleId":"716","severity":1,"message":"762","line":8,"column":21,"nodeType":"718","messageId":"719","endLine":8,"endColumn":29},{"ruleId":"716","severity":1,"message":"763","line":25,"column":10,"nodeType":"718","messageId":"719","endLine":25,"endColumn":20},{"ruleId":"764","severity":1,"message":"765","line":15,"column":5,"nodeType":"766","messageId":"767","endLine":90,"endColumn":6},{"ruleId":"716","severity":1,"message":"768","line":2,"column":8,"nodeType":"718","messageId":"719","endLine":2,"endColumn":26},{"ruleId":"716","severity":1,"message":"769","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":15},{"ruleId":"716","severity":1,"message":"770","line":4,"column":10,"nodeType":"718","messageId":"719","endLine":4,"endColumn":21},{"ruleId":"764","severity":1,"message":"765","line":15,"column":6,"nodeType":"766","messageId":"767","endLine":88,"endColumn":6},{"ruleId":"716","severity":1,"message":"771","line":12,"column":44,"nodeType":"718","messageId":"719","endLine":12,"endColumn":62},{"ruleId":"716","severity":1,"message":"772","line":26,"column":12,"nodeType":"718","messageId":"719","endLine":26,"endColumn":25},{"ruleId":"716","severity":1,"message":"773","line":26,"column":27,"nodeType":"718","messageId":"719","endLine":26,"endColumn":43},{"ruleId":"727","severity":1,"message":"734","line":30,"column":55,"nodeType":"729","messageId":"730","endLine":30,"endColumn":57},{"ruleId":"727","severity":1,"message":"728","line":46,"column":120,"nodeType":"729","messageId":"730","endLine":46,"endColumn":122},{"ruleId":"716","severity":1,"message":"774","line":56,"column":11,"nodeType":"718","messageId":"719","endLine":56,"endColumn":26},{"ruleId":"727","severity":1,"message":"728","line":74,"column":72,"nodeType":"729","messageId":"730","endLine":74,"endColumn":74},{"ruleId":"741","severity":1,"message":"775","line":82,"column":8,"nodeType":"776","endLine":82,"endColumn":27,"suggestions":"777"},{"ruleId":"716","severity":1,"message":"736","line":2,"column":28,"nodeType":"718","messageId":"719","endLine":2,"endColumn":36},{"ruleId":"716","severity":1,"message":"778","line":14,"column":8,"nodeType":"718","messageId":"719","endLine":14,"endColumn":14},{"ruleId":"716","severity":1,"message":"779","line":19,"column":8,"nodeType":"718","messageId":"719","endLine":19,"endColumn":21},{"ruleId":"716","severity":1,"message":"780","line":23,"column":10,"nodeType":"718","messageId":"719","endLine":23,"endColumn":24},{"ruleId":"716","severity":1,"message":"781","line":24,"column":10,"nodeType":"718","messageId":"719","endLine":24,"endColumn":18},{"ruleId":"741","severity":1,"message":"782","line":204,"column":8,"nodeType":"776","endLine":204,"endColumn":10,"suggestions":"783"},{"ruleId":"716","severity":1,"message":"736","line":4,"column":21,"nodeType":"718","messageId":"719","endLine":4,"endColumn":29},{"ruleId":"716","severity":1,"message":"781","line":6,"column":10,"nodeType":"718","messageId":"719","endLine":6,"endColumn":18},{"ruleId":"716","severity":1,"message":"784","line":6,"column":20,"nodeType":"718","messageId":"719","endLine":6,"endColumn":30},{"ruleId":"716","severity":1,"message":"785","line":6,"column":32,"nodeType":"718","messageId":"719","endLine":6,"endColumn":43},{"ruleId":"716","severity":1,"message":"786","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":24},{"ruleId":"787","severity":1,"message":"788","line":21,"column":27,"nodeType":"789","messageId":"790","endLine":21,"endColumn":28,"suggestions":"791"},{"ruleId":"787","severity":1,"message":"788","line":21,"column":43,"nodeType":"789","messageId":"790","endLine":21,"endColumn":44,"suggestions":"792"},{"ruleId":"727","severity":1,"message":"734","line":32,"column":31,"nodeType":"729","messageId":"730","endLine":32,"endColumn":33},{"ruleId":"727","severity":1,"message":"734","line":49,"column":102,"nodeType":"729","messageId":"730","endLine":49,"endColumn":104},{"ruleId":"716","severity":1,"message":"793","line":2,"column":26,"nodeType":"718","messageId":"719","endLine":2,"endColumn":33},{"ruleId":"716","severity":1,"message":"781","line":16,"column":10,"nodeType":"718","messageId":"719","endLine":16,"endColumn":18},{"ruleId":"716","severity":1,"message":"785","line":16,"column":32,"nodeType":"718","messageId":"719","endLine":16,"endColumn":43},{"ruleId":"716","severity":1,"message":"794","line":17,"column":10,"nodeType":"718","messageId":"719","endLine":17,"endColumn":20},{"ruleId":"716","severity":1,"message":"724","line":19,"column":8,"nodeType":"718","messageId":"719","endLine":19,"endColumn":22},{"ruleId":"716","severity":1,"message":"795","line":68,"column":9,"nodeType":"718","messageId":"719","endLine":68,"endColumn":14},{"ruleId":"716","severity":1,"message":"796","line":69,"column":9,"nodeType":"718","messageId":"719","endLine":69,"endColumn":17},{"ruleId":"716","severity":1,"message":"726","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":26},{"ruleId":"716","severity":1,"message":"736","line":1,"column":28,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"797","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":12},{"ruleId":"744","severity":1,"message":"745","line":5,"column":13,"nodeType":"746","endLine":5,"endColumn":83},{"ruleId":"716","severity":1,"message":"736","line":1,"column":28,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"798","line":1,"column":28,"nodeType":"718","messageId":"719","endLine":1,"endColumn":34},{"ruleId":"716","severity":1,"message":"799","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":24},{"ruleId":"716","severity":1,"message":"800","line":10,"column":10,"nodeType":"718","messageId":"719","endLine":10,"endColumn":19},{"ruleId":"727","severity":1,"message":"734","line":54,"column":55,"nodeType":"729","messageId":"730","endLine":54,"endColumn":57},{"ruleId":"716","severity":1,"message":"798","line":1,"column":28,"nodeType":"718","messageId":"719","endLine":1,"endColumn":34},{"ruleId":"716","severity":1,"message":"799","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":24},{"ruleId":"727","severity":1,"message":"734","line":57,"column":55,"nodeType":"729","messageId":"730","endLine":57,"endColumn":57},{"ruleId":"716","severity":1,"message":"798","line":1,"column":28,"nodeType":"718","messageId":"719","endLine":1,"endColumn":34},{"ruleId":"716","severity":1,"message":"799","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":24},{"ruleId":"727","severity":1,"message":"734","line":57,"column":55,"nodeType":"729","messageId":"730","endLine":57,"endColumn":57},{"ruleId":"716","severity":1,"message":"798","line":1,"column":28,"nodeType":"718","messageId":"719","endLine":1,"endColumn":34},{"ruleId":"716","severity":1,"message":"799","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":24},{"ruleId":"716","severity":1,"message":"800","line":10,"column":10,"nodeType":"718","messageId":"719","endLine":10,"endColumn":19},{"ruleId":"727","severity":1,"message":"734","line":53,"column":55,"nodeType":"729","messageId":"730","endLine":53,"endColumn":57},{"ruleId":"716","severity":1,"message":"801","line":1,"column":8,"nodeType":"718","messageId":"719","endLine":1,"endColumn":14},{"ruleId":"716","severity":1,"message":"802","line":10,"column":8,"nodeType":"718","messageId":"719","endLine":10,"endColumn":17},{"ruleId":"716","severity":1,"message":"799","line":11,"column":8,"nodeType":"718","messageId":"719","endLine":11,"endColumn":24},{"ruleId":"716","severity":1,"message":"803","line":12,"column":8,"nodeType":"718","messageId":"719","endLine":12,"endColumn":16},{"ruleId":"716","severity":1,"message":"798","line":19,"column":31,"nodeType":"718","messageId":"719","endLine":19,"endColumn":37},{"ruleId":"716","severity":1,"message":"804","line":22,"column":10,"nodeType":"718","messageId":"719","endLine":22,"endColumn":41},{"ruleId":"716","severity":1,"message":"805","line":22,"column":43,"nodeType":"718","messageId":"719","endLine":22,"endColumn":55},{"ruleId":"716","severity":1,"message":"806","line":88,"column":23,"nodeType":"718","messageId":"719","endLine":88,"endColumn":35},{"ruleId":"716","severity":1,"message":"807","line":89,"column":27,"nodeType":"718","messageId":"719","endLine":89,"endColumn":43},{"ruleId":"716","severity":1,"message":"802","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":17},{"ruleId":"716","severity":1,"message":"808","line":15,"column":10,"nodeType":"718","messageId":"719","endLine":15,"endColumn":17},{"ruleId":"716","severity":1,"message":"809","line":15,"column":19,"nodeType":"718","messageId":"719","endLine":15,"endColumn":27},{"ruleId":"716","severity":1,"message":"810","line":16,"column":8,"nodeType":"718","messageId":"719","endLine":16,"endColumn":11},{"ruleId":"716","severity":1,"message":"811","line":21,"column":8,"nodeType":"718","messageId":"719","endLine":21,"endColumn":12},{"ruleId":"716","severity":1,"message":"812","line":157,"column":25,"nodeType":"718","messageId":"719","endLine":157,"endColumn":41},{"ruleId":"813","severity":1,"message":"814","line":186,"column":5,"nodeType":"815","messageId":"730","endLine":186,"endColumn":12},{"ruleId":"716","severity":1,"message":"816","line":215,"column":9,"nodeType":"718","messageId":"719","endLine":215,"endColumn":22},{"ruleId":"741","severity":1,"message":"782","line":223,"column":6,"nodeType":"776","endLine":223,"endColumn":8,"suggestions":"817"},{"ruleId":"744","severity":1,"message":"745","line":251,"column":15,"nodeType":"746","endLine":251,"endColumn":105},{"ruleId":"716","severity":1,"message":"802","line":9,"column":8,"nodeType":"718","messageId":"719","endLine":9,"endColumn":17},{"ruleId":"716","severity":1,"message":"799","line":10,"column":8,"nodeType":"718","messageId":"719","endLine":10,"endColumn":24},{"ruleId":"716","severity":1,"message":"803","line":11,"column":8,"nodeType":"718","messageId":"719","endLine":11,"endColumn":16},{"ruleId":"716","severity":1,"message":"798","line":17,"column":31,"nodeType":"718","messageId":"719","endLine":17,"endColumn":37},{"ruleId":"716","severity":1,"message":"818","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":14},{"ruleId":"716","severity":1,"message":"819","line":10,"column":8,"nodeType":"718","messageId":"719","endLine":10,"endColumn":20},{"ruleId":"727","severity":1,"message":"734","line":7,"column":62,"nodeType":"729","messageId":"730","endLine":7,"endColumn":64},{"ruleId":"727","severity":1,"message":"734","line":10,"column":103,"nodeType":"729","messageId":"730","endLine":10,"endColumn":105},{"ruleId":"716","severity":1,"message":"798","line":1,"column":38,"nodeType":"718","messageId":"719","endLine":1,"endColumn":44},{"ruleId":"716","severity":1,"message":"778","line":2,"column":8,"nodeType":"718","messageId":"719","endLine":2,"endColumn":14},{"ruleId":"716","severity":1,"message":"802","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":17},{"ruleId":"716","severity":1,"message":"820","line":4,"column":8,"nodeType":"718","messageId":"719","endLine":4,"endColumn":12},{"ruleId":"716","severity":1,"message":"821","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":16},{"ruleId":"716","severity":1,"message":"822","line":9,"column":10,"nodeType":"718","messageId":"719","endLine":9,"endColumn":22},{"ruleId":"716","severity":1,"message":"781","line":10,"column":10,"nodeType":"718","messageId":"719","endLine":10,"endColumn":18},{"ruleId":"716","severity":1,"message":"823","line":10,"column":35,"nodeType":"718","messageId":"719","endLine":10,"endColumn":39},{"ruleId":"716","severity":1,"message":"824","line":12,"column":10,"nodeType":"718","messageId":"719","endLine":12,"endColumn":21},{"ruleId":"716","severity":1,"message":"825","line":13,"column":10,"nodeType":"718","messageId":"719","endLine":13,"endColumn":30},{"ruleId":"716","severity":1,"message":"800","line":16,"column":10,"nodeType":"718","messageId":"719","endLine":16,"endColumn":19},{"ruleId":"716","severity":1,"message":"810","line":22,"column":8,"nodeType":"718","messageId":"719","endLine":22,"endColumn":11},{"ruleId":"716","severity":1,"message":"826","line":25,"column":8,"nodeType":"718","messageId":"719","endLine":25,"endColumn":16},{"ruleId":"716","severity":1,"message":"827","line":26,"column":8,"nodeType":"718","messageId":"719","endLine":26,"endColumn":20},{"ruleId":"716","severity":1,"message":"828","line":27,"column":8,"nodeType":"718","messageId":"719","endLine":27,"endColumn":22},{"ruleId":"716","severity":1,"message":"829","line":76,"column":12,"nodeType":"718","messageId":"719","endLine":76,"endColumn":23},{"ruleId":"716","severity":1,"message":"830","line":81,"column":11,"nodeType":"718","messageId":"719","endLine":81,"endColumn":18},{"ruleId":"716","severity":1,"message":"831","line":84,"column":36,"nodeType":"718","messageId":"719","endLine":84,"endColumn":42},{"ruleId":"716","severity":1,"message":"832","line":84,"column":46,"nodeType":"718","messageId":"719","endLine":84,"endColumn":58},{"ruleId":"716","severity":1,"message":"833","line":85,"column":11,"nodeType":"718","messageId":"719","endLine":85,"endColumn":15},{"ruleId":"716","severity":1,"message":"834","line":91,"column":23,"nodeType":"718","messageId":"719","endLine":91,"endColumn":35},{"ruleId":"716","severity":1,"message":"835","line":92,"column":20,"nodeType":"718","messageId":"719","endLine":92,"endColumn":29},{"ruleId":"716","severity":1,"message":"836","line":94,"column":11,"nodeType":"718","messageId":"719","endLine":94,"endColumn":22},{"ruleId":"837","severity":1,"message":"838","line":3,"column":1,"nodeType":"839","endLine":8,"endColumn":3},{"ruleId":"716","severity":1,"message":"768","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":26},{"ruleId":"716","severity":1,"message":"769","line":4,"column":8,"nodeType":"718","messageId":"719","endLine":4,"endColumn":15},{"ruleId":"716","severity":1,"message":"770","line":5,"column":10,"nodeType":"718","messageId":"719","endLine":5,"endColumn":21},{"ruleId":"727","severity":1,"message":"728","line":30,"column":106,"nodeType":"729","messageId":"730","endLine":30,"endColumn":108},{"ruleId":"727","severity":1,"message":"734","line":30,"column":147,"nodeType":"729","messageId":"730","endLine":30,"endColumn":149},{"ruleId":"727","severity":1,"message":"734","line":19,"column":29,"nodeType":"729","messageId":"730","endLine":19,"endColumn":31},{"ruleId":"727","severity":1,"message":"734","line":22,"column":29,"nodeType":"729","messageId":"730","endLine":22,"endColumn":31},{"ruleId":"727","severity":1,"message":"734","line":42,"column":36,"nodeType":"729","messageId":"730","endLine":42,"endColumn":38},{"ruleId":"727","severity":1,"message":"734","line":47,"column":36,"nodeType":"729","messageId":"730","endLine":47,"endColumn":38},{"ruleId":"716","severity":1,"message":"798","line":4,"column":10,"nodeType":"718","messageId":"719","endLine":4,"endColumn":16},{"ruleId":"716","severity":1,"message":"736","line":6,"column":17,"nodeType":"718","messageId":"719","endLine":6,"endColumn":25},{"ruleId":"716","severity":1,"message":"840","line":7,"column":22,"nodeType":"718","messageId":"719","endLine":7,"endColumn":30},{"ruleId":"716","severity":1,"message":"778","line":8,"column":10,"nodeType":"718","messageId":"719","endLine":8,"endColumn":16},{"ruleId":"716","severity":1,"message":"823","line":9,"column":10,"nodeType":"718","messageId":"719","endLine":9,"endColumn":14},{"ruleId":"716","severity":1,"message":"841","line":9,"column":16,"nodeType":"718","messageId":"719","endLine":9,"endColumn":21},{"ruleId":"716","severity":1,"message":"842","line":15,"column":18,"nodeType":"718","messageId":"719","endLine":15,"endColumn":22},{"ruleId":"757","severity":1,"message":"758","line":25,"column":31,"nodeType":"759","messageId":"760","endLine":25,"endColumn":33},{"ruleId":"757","severity":1,"message":"843","line":25,"column":49,"nodeType":"759","messageId":"760","endLine":25,"endColumn":51},{"ruleId":"757","severity":1,"message":"758","line":25,"column":49,"nodeType":"759","messageId":"760","endLine":25,"endColumn":51},{"ruleId":"757","severity":1,"message":"843","line":25,"column":67,"nodeType":"759","messageId":"760","endLine":25,"endColumn":69},{"ruleId":"716","severity":1,"message":"844","line":34,"column":13,"nodeType":"718","messageId":"719","endLine":34,"endColumn":21},{"ruleId":"727","severity":1,"message":"734","line":89,"column":41,"nodeType":"729","messageId":"730","endLine":89,"endColumn":43},{"ruleId":"727","severity":1,"message":"734","line":102,"column":73,"nodeType":"729","messageId":"730","endLine":102,"endColumn":75},{"ruleId":"727","severity":1,"message":"734","line":102,"column":135,"nodeType":"729","messageId":"730","endLine":102,"endColumn":137},{"ruleId":"727","severity":1,"message":"734","line":103,"column":94,"nodeType":"729","messageId":"730","endLine":103,"endColumn":96},{"ruleId":"727","severity":1,"message":"734","line":103,"column":156,"nodeType":"729","messageId":"730","endLine":103,"endColumn":158},{"ruleId":"727","severity":1,"message":"734","line":106,"column":94,"nodeType":"729","messageId":"730","endLine":106,"endColumn":96},{"ruleId":"727","severity":1,"message":"734","line":106,"column":156,"nodeType":"729","messageId":"730","endLine":106,"endColumn":158},{"ruleId":"727","severity":1,"message":"734","line":107,"column":72,"nodeType":"729","messageId":"730","endLine":107,"endColumn":74},{"ruleId":"727","severity":1,"message":"734","line":107,"column":134,"nodeType":"729","messageId":"730","endLine":107,"endColumn":136},{"ruleId":"727","severity":1,"message":"734","line":113,"column":86,"nodeType":"729","messageId":"730","endLine":113,"endColumn":88},{"ruleId":"727","severity":1,"message":"734","line":114,"column":69,"nodeType":"729","messageId":"730","endLine":114,"endColumn":71},{"ruleId":"727","severity":1,"message":"734","line":114,"column":133,"nodeType":"729","messageId":"730","endLine":114,"endColumn":135},{"ruleId":"727","severity":1,"message":"734","line":117,"column":68,"nodeType":"729","messageId":"730","endLine":117,"endColumn":70},{"ruleId":"727","severity":1,"message":"734","line":117,"column":132,"nodeType":"729","messageId":"730","endLine":117,"endColumn":134},{"ruleId":"727","severity":1,"message":"734","line":118,"column":87,"nodeType":"729","messageId":"730","endLine":118,"endColumn":89},{"ruleId":"716","severity":1,"message":"769","line":2,"column":8,"nodeType":"718","messageId":"719","endLine":2,"endColumn":15},{"ruleId":"716","severity":1,"message":"736","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":18},{"ruleId":"716","severity":1,"message":"818","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":14},{"ruleId":"716","severity":1,"message":"845","line":5,"column":10,"nodeType":"718","messageId":"719","endLine":5,"endColumn":20},{"ruleId":"716","severity":1,"message":"769","line":6,"column":8,"nodeType":"718","messageId":"719","endLine":6,"endColumn":15},{"ruleId":"716","severity":1,"message":"735","line":7,"column":17,"nodeType":"718","messageId":"719","endLine":7,"endColumn":26},{"ruleId":"716","severity":1,"message":"736","line":7,"column":39,"nodeType":"718","messageId":"719","endLine":7,"endColumn":47},{"ruleId":"716","severity":1,"message":"770","line":8,"column":10,"nodeType":"718","messageId":"719","endLine":8,"endColumn":21},{"ruleId":"716","severity":1,"message":"768","line":9,"column":8,"nodeType":"718","messageId":"719","endLine":9,"endColumn":26},{"ruleId":"716","severity":1,"message":"819","line":13,"column":8,"nodeType":"718","messageId":"719","endLine":13,"endColumn":20},{"ruleId":"716","severity":1,"message":"846","line":14,"column":8,"nodeType":"718","messageId":"719","endLine":14,"endColumn":22},{"ruleId":"716","severity":1,"message":"847","line":15,"column":8,"nodeType":"718","messageId":"719","endLine":15,"endColumn":13},{"ruleId":"716","severity":1,"message":"848","line":16,"column":8,"nodeType":"718","messageId":"719","endLine":16,"endColumn":24},{"ruleId":"716","severity":1,"message":"849","line":18,"column":7,"nodeType":"718","messageId":"719","endLine":18,"endColumn":17},{"ruleId":"716","severity":1,"message":"850","line":9,"column":8,"nodeType":"718","messageId":"719","endLine":9,"endColumn":13},{"ruleId":"716","severity":1,"message":"781","line":10,"column":10,"nodeType":"718","messageId":"719","endLine":10,"endColumn":18},{"ruleId":"716","severity":1,"message":"784","line":10,"column":20,"nodeType":"718","messageId":"719","endLine":10,"endColumn":30},{"ruleId":"716","severity":1,"message":"785","line":10,"column":32,"nodeType":"718","messageId":"719","endLine":10,"endColumn":43},{"ruleId":"716","severity":1,"message":"851","line":2,"column":8,"nodeType":"718","messageId":"719","endLine":2,"endColumn":17},{"ruleId":"716","severity":1,"message":"810","line":4,"column":8,"nodeType":"718","messageId":"719","endLine":4,"endColumn":11},{"ruleId":"716","severity":1,"message":"852","line":5,"column":8,"nodeType":"718","messageId":"719","endLine":5,"endColumn":16},{"ruleId":"716","severity":1,"message":"853","line":6,"column":8,"nodeType":"718","messageId":"719","endLine":6,"endColumn":18},{"ruleId":"716","severity":1,"message":"854","line":13,"column":8,"nodeType":"718","messageId":"719","endLine":13,"endColumn":18},{"ruleId":"716","severity":1,"message":"855","line":15,"column":8,"nodeType":"718","messageId":"719","endLine":15,"endColumn":29},{"ruleId":"716","severity":1,"message":"856","line":16,"column":8,"nodeType":"718","messageId":"719","endLine":16,"endColumn":27},{"ruleId":"716","severity":1,"message":"798","line":17,"column":10,"nodeType":"718","messageId":"719","endLine":17,"endColumn":16},{"ruleId":"716","severity":1,"message":"823","line":19,"column":10,"nodeType":"718","messageId":"719","endLine":19,"endColumn":14},{"ruleId":"716","severity":1,"message":"841","line":19,"column":16,"nodeType":"718","messageId":"719","endLine":19,"endColumn":21},{"ruleId":"716","severity":1,"message":"857","line":19,"column":23,"nodeType":"718","messageId":"719","endLine":19,"endColumn":29},{"ruleId":"716","severity":1,"message":"858","line":21,"column":10,"nodeType":"718","messageId":"719","endLine":21,"endColumn":20},{"ruleId":"716","severity":1,"message":"859","line":22,"column":8,"nodeType":"718","messageId":"719","endLine":22,"endColumn":19},{"ruleId":"716","severity":1,"message":"860","line":25,"column":10,"nodeType":"718","messageId":"719","endLine":25,"endColumn":20},{"ruleId":"716","severity":1,"message":"861","line":26,"column":8,"nodeType":"718","messageId":"719","endLine":26,"endColumn":21},{"ruleId":"716","severity":1,"message":"862","line":29,"column":8,"nodeType":"718","messageId":"719","endLine":29,"endColumn":17},{"ruleId":"716","severity":1,"message":"848","line":34,"column":8,"nodeType":"718","messageId":"719","endLine":34,"endColumn":24},{"ruleId":"716","severity":1,"message":"863","line":49,"column":12,"nodeType":"718","messageId":"719","endLine":49,"endColumn":16},{"ruleId":"716","severity":1,"message":"864","line":49,"column":18,"nodeType":"718","messageId":"719","endLine":49,"endColumn":25},{"ruleId":"716","severity":1,"message":"865","line":52,"column":12,"nodeType":"718","messageId":"719","endLine":52,"endColumn":17},{"ruleId":"727","severity":1,"message":"734","line":57,"column":30,"nodeType":"729","messageId":"730","endLine":57,"endColumn":32},{"ruleId":"716","severity":1,"message":"866","line":85,"column":12,"nodeType":"718","messageId":"719","endLine":85,"endColumn":19},{"ruleId":"716","severity":1,"message":"867","line":120,"column":13,"nodeType":"718","messageId":"719","endLine":120,"endColumn":16},{"ruleId":"716","severity":1,"message":"842","line":120,"column":18,"nodeType":"718","messageId":"719","endLine":120,"endColumn":22},{"ruleId":"727","severity":1,"message":"734","line":130,"column":34,"nodeType":"729","messageId":"730","endLine":130,"endColumn":36},{"ruleId":"727","severity":1,"message":"734","line":132,"column":39,"nodeType":"729","messageId":"730","endLine":132,"endColumn":41},{"ruleId":"727","severity":1,"message":"734","line":134,"column":39,"nodeType":"729","messageId":"730","endLine":134,"endColumn":41},{"ruleId":"727","severity":1,"message":"734","line":136,"column":39,"nodeType":"729","messageId":"730","endLine":136,"endColumn":41},{"ruleId":"727","severity":1,"message":"734","line":152,"column":34,"nodeType":"729","messageId":"730","endLine":152,"endColumn":36},{"ruleId":"741","severity":1,"message":"868","line":157,"column":8,"nodeType":"776","endLine":157,"endColumn":10,"suggestions":"869"},{"ruleId":"716","severity":1,"message":"802","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":17},{"ruleId":"716","severity":1,"message":"821","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":16},{"ruleId":"716","severity":1,"message":"850","line":12,"column":8,"nodeType":"718","messageId":"719","endLine":12,"endColumn":13},{"ruleId":"716","severity":1,"message":"853","line":19,"column":10,"nodeType":"718","messageId":"719","endLine":19,"endColumn":20},{"ruleId":"716","severity":1,"message":"870","line":19,"column":22,"nodeType":"718","messageId":"719","endLine":19,"endColumn":26},{"ruleId":"787","severity":1,"message":"788","line":79,"column":95,"nodeType":"789","messageId":"790","endLine":79,"endColumn":96,"suggestions":"871"},{"ruleId":"787","severity":1,"message":"788","line":79,"column":111,"nodeType":"789","messageId":"790","endLine":79,"endColumn":112,"suggestions":"872"},{"ruleId":"716","severity":1,"message":"873","line":81,"column":11,"nodeType":"718","messageId":"719","endLine":81,"endColumn":19},{"ruleId":"727","severity":1,"message":"734","line":186,"column":60,"nodeType":"729","messageId":"730","endLine":186,"endColumn":62},{"ruleId":"716","severity":1,"message":"865","line":224,"column":12,"nodeType":"718","messageId":"719","endLine":224,"endColumn":17},{"ruleId":"744","severity":1,"message":"745","line":314,"column":25,"nodeType":"746","endLine":314,"endColumn":115},{"ruleId":"716","severity":1,"message":"802","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":17},{"ruleId":"716","severity":1,"message":"810","line":16,"column":8,"nodeType":"718","messageId":"719","endLine":16,"endColumn":11},{"ruleId":"787","severity":1,"message":"788","line":95,"column":93,"nodeType":"789","messageId":"790","endLine":95,"endColumn":94,"suggestions":"874"},{"ruleId":"787","severity":1,"message":"788","line":95,"column":109,"nodeType":"789","messageId":"790","endLine":95,"endColumn":110,"suggestions":"875"},{"ruleId":"727","severity":1,"message":"734","line":112,"column":28,"nodeType":"729","messageId":"730","endLine":112,"endColumn":30},{"ruleId":"727","severity":1,"message":"734","line":126,"column":32,"nodeType":"729","messageId":"730","endLine":126,"endColumn":34},{"ruleId":"716","severity":1,"message":"876","line":186,"column":9,"nodeType":"718","messageId":"719","endLine":186,"endColumn":21},{"ruleId":"741","severity":1,"message":"782","line":227,"column":6,"nodeType":"776","endLine":227,"endColumn":8,"suggestions":"877"},{"ruleId":"716","severity":1,"message":"802","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":17},{"ruleId":"716","severity":1,"message":"850","line":15,"column":8,"nodeType":"718","messageId":"719","endLine":15,"endColumn":13},{"ruleId":"716","severity":1,"message":"781","line":16,"column":10,"nodeType":"718","messageId":"719","endLine":16,"endColumn":18},{"ruleId":"716","severity":1,"message":"784","line":16,"column":20,"nodeType":"718","messageId":"719","endLine":16,"endColumn":30},{"ruleId":"716","severity":1,"message":"785","line":16,"column":32,"nodeType":"718","messageId":"719","endLine":16,"endColumn":43},{"ruleId":"716","severity":1,"message":"800","line":16,"column":45,"nodeType":"718","messageId":"719","endLine":16,"endColumn":54},{"ruleId":"716","severity":1,"message":"878","line":20,"column":42,"nodeType":"718","messageId":"719","endLine":20,"endColumn":58},{"ruleId":"716","severity":1,"message":"879","line":72,"column":12,"nodeType":"718","messageId":"719","endLine":72,"endColumn":23},{"ruleId":"716","severity":1,"message":"880","line":72,"column":25,"nodeType":"718","messageId":"719","endLine":72,"endColumn":39},{"ruleId":"716","severity":1,"message":"881","line":132,"column":11,"nodeType":"718","messageId":"719","endLine":132,"endColumn":17},{"ruleId":"787","severity":1,"message":"788","line":148,"column":64,"nodeType":"789","messageId":"790","endLine":148,"endColumn":65,"suggestions":"882"},{"ruleId":"787","severity":1,"message":"788","line":148,"column":80,"nodeType":"789","messageId":"790","endLine":148,"endColumn":81,"suggestions":"883"},{"ruleId":"741","severity":1,"message":"884","line":251,"column":8,"nodeType":"776","endLine":251,"endColumn":28,"suggestions":"885"},{"ruleId":"744","severity":1,"message":"745","line":275,"column":29,"nodeType":"746","endLine":275,"endColumn":155},{"ruleId":"716","severity":1,"message":"778","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":16},{"ruleId":"716","severity":1,"message":"886","line":2,"column":18,"nodeType":"718","messageId":"719","endLine":2,"endColumn":23},{"ruleId":"716","severity":1,"message":"818","line":2,"column":32,"nodeType":"718","messageId":"719","endLine":2,"endColumn":36},{"ruleId":"716","severity":1,"message":"887","line":9,"column":11,"nodeType":"718","messageId":"719","endLine":9,"endColumn":22},{"ruleId":"716","severity":1,"message":"798","line":4,"column":10,"nodeType":"718","messageId":"719","endLine":4,"endColumn":16},{"ruleId":"716","severity":1,"message":"823","line":5,"column":10,"nodeType":"718","messageId":"719","endLine":5,"endColumn":14},{"ruleId":"716","severity":1,"message":"841","line":5,"column":16,"nodeType":"718","messageId":"719","endLine":5,"endColumn":21},{"ruleId":"716","severity":1,"message":"778","line":6,"column":10,"nodeType":"718","messageId":"719","endLine":6,"endColumn":16},{"ruleId":"716","severity":1,"message":"888","line":11,"column":8,"nodeType":"718","messageId":"719","endLine":11,"endColumn":22},{"ruleId":"716","severity":1,"message":"842","line":17,"column":18,"nodeType":"718","messageId":"719","endLine":17,"endColumn":22},{"ruleId":"716","severity":1,"message":"889","line":22,"column":18,"nodeType":"718","messageId":"719","endLine":22,"endColumn":25},{"ruleId":"757","severity":1,"message":"758","line":54,"column":31,"nodeType":"759","messageId":"760","endLine":54,"endColumn":33},{"ruleId":"757","severity":1,"message":"843","line":54,"column":49,"nodeType":"759","messageId":"760","endLine":54,"endColumn":51},{"ruleId":"757","severity":1,"message":"758","line":54,"column":49,"nodeType":"759","messageId":"760","endLine":54,"endColumn":51},{"ruleId":"757","severity":1,"message":"843","line":54,"column":67,"nodeType":"759","messageId":"760","endLine":54,"endColumn":69},{"ruleId":"741","severity":1,"message":"890","line":76,"column":8,"nodeType":"776","endLine":76,"endColumn":10,"suggestions":"891"},{"ruleId":"716","severity":1,"message":"844","line":79,"column":13,"nodeType":"718","messageId":"719","endLine":79,"endColumn":21},{"ruleId":"727","severity":1,"message":"734","line":97,"column":45,"nodeType":"729","messageId":"730","endLine":97,"endColumn":47},{"ruleId":"744","severity":1,"message":"745","line":101,"column":29,"nodeType":"746","endLine":101,"endColumn":143},{"ruleId":"727","severity":1,"message":"734","line":105,"column":73,"nodeType":"729","messageId":"730","endLine":105,"endColumn":75},{"ruleId":"727","severity":1,"message":"734","line":105,"column":127,"nodeType":"729","messageId":"730","endLine":105,"endColumn":129},{"ruleId":"727","severity":1,"message":"734","line":108,"column":72,"nodeType":"729","messageId":"730","endLine":108,"endColumn":74},{"ruleId":"727","severity":1,"message":"734","line":108,"column":126,"nodeType":"729","messageId":"730","endLine":108,"endColumn":128},{"ruleId":"716","severity":1,"message":"798","line":1,"column":38,"nodeType":"718","messageId":"719","endLine":1,"endColumn":44},{"ruleId":"716","severity":1,"message":"821","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":16},{"ruleId":"716","severity":1,"message":"822","line":9,"column":10,"nodeType":"718","messageId":"719","endLine":9,"endColumn":22},{"ruleId":"716","severity":1,"message":"781","line":10,"column":10,"nodeType":"718","messageId":"719","endLine":10,"endColumn":18},{"ruleId":"716","severity":1,"message":"878","line":11,"column":60,"nodeType":"718","messageId":"719","endLine":11,"endColumn":76},{"ruleId":"716","severity":1,"message":"824","line":12,"column":10,"nodeType":"718","messageId":"719","endLine":12,"endColumn":21},{"ruleId":"716","severity":1,"message":"825","line":13,"column":10,"nodeType":"718","messageId":"719","endLine":13,"endColumn":30},{"ruleId":"716","severity":1,"message":"800","line":16,"column":10,"nodeType":"718","messageId":"719","endLine":16,"endColumn":19},{"ruleId":"716","severity":1,"message":"892","line":22,"column":8,"nodeType":"718","messageId":"719","endLine":22,"endColumn":21},{"ruleId":"716","severity":1,"message":"881","line":69,"column":11,"nodeType":"718","messageId":"719","endLine":69,"endColumn":17},{"ruleId":"716","severity":1,"message":"831","line":79,"column":36,"nodeType":"718","messageId":"719","endLine":79,"endColumn":42},{"ruleId":"716","severity":1,"message":"736","line":1,"column":28,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"893","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":14},{"ruleId":"716","severity":1,"message":"778","line":19,"column":10,"nodeType":"718","messageId":"719","endLine":19,"endColumn":16},{"ruleId":"716","severity":1,"message":"894","line":19,"column":18,"nodeType":"718","messageId":"719","endLine":19,"endColumn":24},{"ruleId":"716","severity":1,"message":"870","line":19,"column":26,"nodeType":"718","messageId":"719","endLine":19,"endColumn":30},{"ruleId":"716","severity":1,"message":"895","line":55,"column":11,"nodeType":"718","messageId":"719","endLine":55,"endColumn":26},{"ruleId":"716","severity":1,"message":"896","line":56,"column":11,"nodeType":"718","messageId":"719","endLine":56,"endColumn":20},{"ruleId":"716","severity":1,"message":"897","line":58,"column":11,"nodeType":"718","messageId":"719","endLine":58,"endColumn":24},{"ruleId":"716","severity":1,"message":"898","line":60,"column":11,"nodeType":"718","messageId":"719","endLine":60,"endColumn":26},{"ruleId":"716","severity":1,"message":"899","line":72,"column":23,"nodeType":"718","messageId":"719","endLine":72,"endColumn":35},{"ruleId":"716","severity":1,"message":"900","line":98,"column":12,"nodeType":"718","messageId":"719","endLine":98,"endColumn":18},{"ruleId":"716","severity":1,"message":"901","line":98,"column":20,"nodeType":"718","messageId":"719","endLine":98,"endColumn":29},{"ruleId":"741","severity":1,"message":"902","line":111,"column":8,"nodeType":"776","endLine":111,"endColumn":10,"suggestions":"903"},{"ruleId":"716","severity":1,"message":"781","line":10,"column":10,"nodeType":"718","messageId":"719","endLine":10,"endColumn":18},{"ruleId":"716","severity":1,"message":"784","line":10,"column":20,"nodeType":"718","messageId":"719","endLine":10,"endColumn":30},{"ruleId":"716","severity":1,"message":"785","line":10,"column":32,"nodeType":"718","messageId":"719","endLine":10,"endColumn":43},{"ruleId":"716","severity":1,"message":"850","line":11,"column":8,"nodeType":"718","messageId":"719","endLine":11,"endColumn":13},{"ruleId":"716","severity":1,"message":"879","line":36,"column":12,"nodeType":"718","messageId":"719","endLine":36,"endColumn":23},{"ruleId":"716","severity":1,"message":"899","line":39,"column":23,"nodeType":"718","messageId":"719","endLine":39,"endColumn":35},{"ruleId":"727","severity":1,"message":"734","line":48,"column":29,"nodeType":"729","messageId":"730","endLine":48,"endColumn":31},{"ruleId":"904","severity":1,"message":"905","line":67,"column":82,"nodeType":"743","messageId":"906","endLine":67,"endColumn":84},{"ruleId":"716","severity":1,"message":"802","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":17},{"ruleId":"716","severity":1,"message":"781","line":10,"column":10,"nodeType":"718","messageId":"719","endLine":10,"endColumn":18},{"ruleId":"716","severity":1,"message":"878","line":11,"column":68,"nodeType":"718","messageId":"719","endLine":11,"endColumn":84},{"ruleId":"716","severity":1,"message":"800","line":16,"column":10,"nodeType":"718","messageId":"719","endLine":16,"endColumn":19},{"ruleId":"716","severity":1,"message":"881","line":107,"column":11,"nodeType":"718","messageId":"719","endLine":107,"endColumn":17},{"ruleId":"787","severity":1,"message":"788","line":115,"column":64,"nodeType":"789","messageId":"790","endLine":115,"endColumn":65,"suggestions":"907"},{"ruleId":"787","severity":1,"message":"788","line":115,"column":80,"nodeType":"789","messageId":"790","endLine":115,"endColumn":81,"suggestions":"908"},{"ruleId":"716","severity":1,"message":"909","line":116,"column":11,"nodeType":"718","messageId":"719","endLine":116,"endColumn":16},{"ruleId":"727","severity":1,"message":"734","line":178,"column":34,"nodeType":"729","messageId":"730","endLine":178,"endColumn":36},{"ruleId":"741","severity":1,"message":"910","line":216,"column":8,"nodeType":"776","endLine":216,"endColumn":10,"suggestions":"911"},{"ruleId":"744","severity":1,"message":"745","line":232,"column":25,"nodeType":"746","endLine":232,"endColumn":159},{"ruleId":"712","replacedBy":"912"},{"ruleId":"714","replacedBy":"913"},{"ruleId":"716","severity":1,"message":"781","line":10,"column":10,"nodeType":"718","messageId":"719","endLine":10,"endColumn":18},{"ruleId":"716","severity":1,"message":"784","line":10,"column":20,"nodeType":"718","messageId":"719","endLine":10,"endColumn":30},{"ruleId":"716","severity":1,"message":"785","line":10,"column":32,"nodeType":"718","messageId":"719","endLine":10,"endColumn":43},{"ruleId":"716","severity":1,"message":"850","line":11,"column":8,"nodeType":"718","messageId":"719","endLine":11,"endColumn":13},{"ruleId":"716","severity":1,"message":"879","line":35,"column":12,"nodeType":"718","messageId":"719","endLine":35,"endColumn":23},{"ruleId":"716","severity":1,"message":"899","line":39,"column":23,"nodeType":"718","messageId":"719","endLine":39,"endColumn":35},{"ruleId":"727","severity":1,"message":"734","line":49,"column":29,"nodeType":"729","messageId":"730","endLine":49,"endColumn":31},{"ruleId":"904","severity":1,"message":"905","line":67,"column":79,"nodeType":"743","messageId":"906","endLine":67,"endColumn":81},{"ruleId":"716","severity":1,"message":"802","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":17},{"ruleId":"716","severity":1,"message":"781","line":10,"column":10,"nodeType":"718","messageId":"719","endLine":10,"endColumn":18},{"ruleId":"716","severity":1,"message":"914","line":80,"column":12,"nodeType":"718","messageId":"719","endLine":80,"endColumn":27},{"ruleId":"716","severity":1,"message":"915","line":80,"column":29,"nodeType":"718","messageId":"719","endLine":80,"endColumn":47},{"ruleId":"716","severity":1,"message":"879","line":81,"column":12,"nodeType":"718","messageId":"719","endLine":81,"endColumn":23},{"ruleId":"716","severity":1,"message":"880","line":81,"column":25,"nodeType":"718","messageId":"719","endLine":81,"endColumn":39},{"ruleId":"787","severity":1,"message":"788","line":94,"column":64,"nodeType":"789","messageId":"790","endLine":94,"endColumn":65,"suggestions":"916"},{"ruleId":"787","severity":1,"message":"788","line":94,"column":80,"nodeType":"789","messageId":"790","endLine":94,"endColumn":81,"suggestions":"917"},{"ruleId":"716","severity":1,"message":"909","line":95,"column":11,"nodeType":"718","messageId":"719","endLine":95,"endColumn":16},{"ruleId":"727","severity":1,"message":"734","line":210,"column":34,"nodeType":"729","messageId":"730","endLine":210,"endColumn":36},{"ruleId":"727","severity":1,"message":"734","line":252,"column":63,"nodeType":"729","messageId":"730","endLine":252,"endColumn":65},{"ruleId":"744","severity":1,"message":"745","line":270,"column":33,"nodeType":"746","endLine":270,"endColumn":217},{"ruleId":"716","severity":1,"message":"726","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":26},{"ruleId":"716","severity":1,"message":"736","line":1,"column":28,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"798","line":1,"column":38,"nodeType":"718","messageId":"719","endLine":1,"endColumn":44},{"ruleId":"716","severity":1,"message":"778","line":2,"column":8,"nodeType":"718","messageId":"719","endLine":2,"endColumn":14},{"ruleId":"716","severity":1,"message":"802","line":3,"column":8,"nodeType":"718","messageId":"719","endLine":3,"endColumn":17},{"ruleId":"716","severity":1,"message":"918","line":5,"column":10,"nodeType":"718","messageId":"719","endLine":5,"endColumn":20},{"ruleId":"716","severity":1,"message":"821","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":16},{"ruleId":"716","severity":1,"message":"919","line":8,"column":10,"nodeType":"718","messageId":"719","endLine":8,"endColumn":17},{"ruleId":"716","severity":1,"message":"822","line":9,"column":10,"nodeType":"718","messageId":"719","endLine":9,"endColumn":22},{"ruleId":"716","severity":1,"message":"781","line":10,"column":10,"nodeType":"718","messageId":"719","endLine":10,"endColumn":18},{"ruleId":"716","severity":1,"message":"920","line":11,"column":10,"nodeType":"718","messageId":"719","endLine":11,"endColumn":26},{"ruleId":"716","severity":1,"message":"921","line":11,"column":28,"nodeType":"718","messageId":"719","endLine":11,"endColumn":46},{"ruleId":"716","severity":1,"message":"824","line":12,"column":10,"nodeType":"718","messageId":"719","endLine":12,"endColumn":21},{"ruleId":"716","severity":1,"message":"922","line":14,"column":8,"nodeType":"718","messageId":"719","endLine":14,"endColumn":16},{"ruleId":"716","severity":1,"message":"923","line":15,"column":8,"nodeType":"718","messageId":"719","endLine":15,"endColumn":16},{"ruleId":"716","severity":1,"message":"924","line":16,"column":8,"nodeType":"718","messageId":"719","endLine":16,"endColumn":13},{"ruleId":"716","severity":1,"message":"925","line":17,"column":8,"nodeType":"718","messageId":"719","endLine":17,"endColumn":14},{"ruleId":"716","severity":1,"message":"926","line":21,"column":11,"nodeType":"718","messageId":"719","endLine":21,"endColumn":20},"no-native-reassign",["927"],"no-negated-in-lhs",["928"],"no-unused-vars","'SimpleMap' is defined but never used.","Identifier","unusedVar","'MyLocation' is defined but never used.","'PrivateNew' is defined but never used.","'TableTasks' is defined but never used.","'ChartPage' is defined but never used.","'Advertisements' is defined but never used.","'FingerprintIcon' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Expected '===' and instead saw '=='.","'Component' is defined but never used.","'useState' is defined but never used.","'UsersSearch' is defined but never used.","'BusinessSearch' is defined but never used.","'PrivateArea' is defined but never used.","'ExpandingDetails' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'useRouteMatch' is defined but never used.","'ManageSearchIcon' is defined but never used.","'GroupsIcon' is defined but never used.","'Main' is assigned a value but never used.","'idUser' is assigned a value but never used.","React Hook useEffect contains a call to 'setcolor'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props, pathname] as a second argument to the useEffect Hook.","MemberExpression",["929"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'randomNum' is defined but never used.","'Doughnut' is defined but never used.","'createData' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'GeolocationService' is defined but never used.","'Geocode' is defined but never used.","'FromAddress' is defined but never used.","'GetAllBusinessFunc' is defined but never used.","'countBusiness' is assigned a value but never used.","'setCountBusiness' is assigned a value but never used.","'styleDivInput_2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ifSorted', 'props.SaveAllBusiness', and 'props.setCircularProgresStateFunc'. Either include them or remove the dependency array.","ArrayExpression",["930"],"'Button' is defined but never used.","'SearchHistory' is defined but never used.","'GetCurrentUser' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["931"],"'useHistory' is defined but never used.","'useLocation' is defined but never used.","'ResultSearchUser' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["932","933"],["934","935"],"'SignOut' is defined but never used.","'withStyles' is defined but never used.","'users' is assigned a value but never used.","'business' is assigned a value but never used.","'icon' is defined but never used.","'useRef' is defined but never used.","'FormControlLabel' is defined but never used.","'useParams' is defined but never used.","'random' is defined but never used.","'TextField' is defined but never used.","'Checkbox' is defined but never used.","'GetCurrentUserByPaaswordAndMail' is defined but never used.","'CheckManager' is defined but never used.","'setifManager' is assigned a value but never used.","'setifNoGoToLogin' is assigned a value but never used.","'AddUser' is defined but never used.","'SendMail' is defined but never used.","'Box' is defined but never used.","'alex' is defined but never used.","'setselectedImage' is assigned a value but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","'changeHistory' is assigned a value but never used.",["936"],"'List' is defined but never used.","'ListItemText' is defined but never used.","'Grid' is defined but never used.","'business' is defined but never used.","'ErrorMessage' is defined but never used.","'Link' is defined but never used.","'Multiselect' is defined but never used.","'ChangeUpdateBuisness' is defined but never used.","'EditIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'NavigationIcon' is defined but never used.","'currentUser' is assigned a value but never used.","'classes' is assigned a value but never used.","'errors' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'name' is assigned a value but never used.","'settypeAlert' is assigned a value but never used.","'setmasseg' is assigned a value but never used.","'handleClick' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'GetImage' is defined but never used.","'Route' is defined but never used.","'path' is assigned a value but never used.","Unexpected mix of '||' and '&&'.","'myWindow' is assigned a value but never used.","'geolocated' is defined but never used.","'LinearProgress' is defined but never used.","'Stack' is defined but never used.","'CircularProgress' is defined but never used.","'colorLoder' is assigned a value but never used.","'axios' is defined but never used.","'PropTypes' is defined but never used.","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'KeyboardArrowUpIcon' is defined but never used.","'Switch' is defined but never used.","'withRouter' is defined but never used.","'queryString' is defined but never used.","'setTimeout' is defined but never used.","'UpdateBuisnes' is defined but never used.","'FormGroup' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'check' is assigned a value but never used.","'ifTasks' is assigned a value but never used.","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'idTask' and 'nameButton'. Either include them or remove the dependency array.",["937"],"'Icon' is defined but never used.",["938","939"],["940","941"],"'category' is assigned a value but never used.",["942","943"],["944","945"],"'onFileChange' is assigned a value but never used.",["946"],"'UpdateStatusTask' is defined but never used.","'ifGoToLogin' is assigned a value but never used.","'setifGoToLogin' is assigned a value but never used.","'idTask' is assigned a value but never used.",["947","948"],["949","950"],"React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["951"],"'Image' is defined but never used.","'styleAction' is assigned a value but never used.","'UpdataBusiness' is defined but never used.","'SetZoom' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.business.adress'. Either include it or remove the dependency array.",["952"],"'ListSubheader' is defined but never used.","'Avatar' is defined but never used.","'Header' is defined but never used.","'styleDivContent' is assigned a value but never used.","'styleDivW' is assigned a value but never used.","'styleIconUser' is assigned a value but never used.","'styleIconExport' is assigned a value but never used.","'setSecondary' is assigned a value but never used.","'ifNone' is assigned a value but never used.","'setifNone' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetCurrentBuisnessFunc'. Either include it or remove the dependency array.",["953"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["954","955"],["956","957"],"'phone' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["958"],["927"],["928"],"'currentBuisness' is assigned a value but never used.","'setcurrentBuisness' is assigned a value but never used.",["959","960"],["961","962"],"'makeStyles' is defined but never used.","'useForm' is defined but never used.","'getAllCategories' is defined but never used.","'UpdateBuisnessFunc' is defined but never used.","'Snackbar' is defined but never used.","'MuiAlert' is defined but never used.","'Input' is defined but never used.","'person' is defined but never used.","'styleDiv1' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"963","fix":"964"},{"desc":"965","fix":"966"},{"desc":"967","fix":"968"},{"messageId":"969","fix":"970","desc":"971"},{"messageId":"972","fix":"973","desc":"974"},{"messageId":"969","fix":"975","desc":"971"},{"messageId":"972","fix":"976","desc":"974"},{"desc":"967","fix":"977"},{"desc":"978","fix":"979"},{"messageId":"969","fix":"980","desc":"971"},{"messageId":"972","fix":"981","desc":"974"},{"messageId":"969","fix":"982","desc":"971"},{"messageId":"972","fix":"983","desc":"974"},{"messageId":"969","fix":"984","desc":"971"},{"messageId":"972","fix":"985","desc":"974"},{"messageId":"969","fix":"986","desc":"971"},{"messageId":"972","fix":"987","desc":"974"},{"desc":"967","fix":"988"},{"messageId":"969","fix":"989","desc":"971"},{"messageId":"972","fix":"990","desc":"974"},{"messageId":"969","fix":"991","desc":"971"},{"messageId":"972","fix":"992","desc":"974"},{"desc":"993","fix":"994"},{"desc":"995","fix":"996"},{"desc":"997","fix":"998"},{"messageId":"969","fix":"999","desc":"971"},{"messageId":"972","fix":"1000","desc":"974"},{"messageId":"969","fix":"1001","desc":"971"},{"messageId":"972","fix":"1002","desc":"974"},{"desc":"1003","fix":"1004"},{"messageId":"969","fix":"1005","desc":"971"},{"messageId":"972","fix":"1006","desc":"974"},{"messageId":"969","fix":"1007","desc":"971"},{"messageId":"972","fix":"1008","desc":"974"},"Add dependencies array: [props, pathname]",{"range":"1009","text":"1010"},"Update the dependencies array to be: [ifSorted, props.AllBusiness, props.SaveAllBusiness, props.setCircularProgresStateFunc]",{"range":"1011","text":"1012"},"Update the dependencies array to be: [props]",{"range":"1013","text":"1014"},"removeEscape",{"range":"1015","text":"1016"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1017","text":"1018"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1019","text":"1016"},{"range":"1020","text":"1018"},{"range":"1021","text":"1014"},"Update the dependencies array to be: [idTask, nameButton]",{"range":"1022","text":"1023"},{"range":"1024","text":"1016"},{"range":"1025","text":"1018"},{"range":"1026","text":"1016"},{"range":"1027","text":"1018"},{"range":"1028","text":"1016"},{"range":"1029","text":"1018"},{"range":"1030","text":"1016"},{"range":"1031","text":"1018"},{"range":"1032","text":"1014"},{"range":"1033","text":"1016"},{"range":"1034","text":"1018"},{"range":"1035","text":"1016"},{"range":"1036","text":"1018"},"Update the dependencies array to be: [id, props, props.idUserUpdate]",{"range":"1037","text":"1038"},"Update the dependencies array to be: [props.business.adress]",{"range":"1039","text":"1040"},"Update the dependencies array to be: [GetCurrentBuisnessFunc]",{"range":"1041","text":"1042"},{"range":"1043","text":"1016"},{"range":"1044","text":"1018"},{"range":"1045","text":"1016"},{"range":"1046","text":"1018"},"Update the dependencies array to be: [id]",{"range":"1047","text":"1048"},{"range":"1049","text":"1016"},{"range":"1050","text":"1018"},{"range":"1051","text":"1016"},{"range":"1052","text":"1018"},[4178,4178],", [props, pathname]",[2964,2983],"[ifSorted, props.AllBusiness, props.SaveAllBusiness, props.setCircularProgresStateFunc]",[5504,5506],"[props]",[797,798],"",[797,797],"\\",[813,814],[813,813],[5379,5381],[5980,5982],"[idTask, nameButton]",[2479,2480],[2479,2479],[2495,2496],[2495,2495],[2968,2969],[2968,2968],[2984,2985],[2984,2984],[6309,6311],[4701,4702],[4701,4701],[4717,4718],[4717,4717],[7748,7768],"[id, props, props.idUserUpdate]",[2365,2367],"[props.business.adress]",[3452,3454],"[GetCurrentBuisnessFunc]",[3735,3736],[3735,3735],[3751,3752],[3751,3751],[6404,6406],"[id]",[3021,3022],[3021,3021],[3037,3038],[3037,3037]]