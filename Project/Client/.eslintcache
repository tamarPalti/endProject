[{"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\index.js":"1","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\App.js":"2","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reportWebVitals.js":"3","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reduces\\index.js":"4","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Home.js":"5","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\MyLocation.js":"6","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reduces\\users.js":"7","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reduces\\business.js":"8","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\Search.js":"9","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\UseresSearch.js":"10","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\BusinessSearch.js":"11","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\Manager.js":"12","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\404\\Page404.js":"13","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\SingUp.js":"14","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\UpdataUser.js":"15","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\ForgotPassword.js":"16","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\singIn.js":"17","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\UpdataBusiness.js":"18","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\PrivateArea.js":"19","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\index.js":"20","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\ActionTypes.js":"21","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\services\\SortService.js":"22","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\ResultSearchBusiness.js":"23","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\ResultSearchUser.js":"24","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\actions\\index.js":"25","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\classes\\business.js":"26","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\classes\\user.js":"27","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\classes\\task.js":"28","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\TableTasks.js":"29","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\SendMail.js":"30","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\Manager.js":"31","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\Tasks.js":"32","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\Location.js":"33","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\SearchHistory.js":"34","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\UtilCategory.js":"35","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\UtilBuisness.js":"36","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\BusinessInformationUpdate.js":"37","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\AddingBusiness.js":"38","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\BasicDetails.js":"39","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\UtilUser.js":"40","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdatePersonalDetails.js":"41","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\actions\\business.js":"42","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\actions\\users.js":"43","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\AddCategory.js":"44","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\User.js":"45","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\Business.js":"46","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Histories\\Buisness.js":"47","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\UpdateBuisnesOfManager.js":"48","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Histories\\Users.js":"49","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdateBuisness\\ListBuisness.js":"50","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdateBuisness\\UpdateBuisnes.js":"51","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Tasks.js":"52","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\AddCtegory.js":"53","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\AddUser.js":"54","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Heder.js":"55"},{"size":1117,"mtime":1631529240822,"results":"56","hashOfConfig":"57"},{"size":725,"mtime":1634115444958,"results":"58","hashOfConfig":"57"},{"size":375,"mtime":1631529240831,"results":"59","hashOfConfig":"57"},{"size":86,"mtime":1631529240825,"results":"60","hashOfConfig":"57"},{"size":4605,"mtime":1634124451573,"results":"61","hashOfConfig":"57"},{"size":832,"mtime":1634050847461,"results":"62","hashOfConfig":"57"},{"size":2742,"mtime":1631529240830,"results":"63","hashOfConfig":"57"},{"size":2772,"mtime":1631529240824,"results":"64","hashOfConfig":"57"},{"size":3518,"mtime":1631529240808,"results":"65","hashOfConfig":"57"},{"size":3900,"mtime":1634048453214,"results":"66","hashOfConfig":"57"},{"size":4499,"mtime":1634049155995,"results":"67","hashOfConfig":"57"},{"size":206,"mtime":1631529240761,"results":"68","hashOfConfig":"57"},{"size":89,"mtime":1631529240683,"results":"69","hashOfConfig":"57"},{"size":2250,"mtime":1634136506544,"results":"70","hashOfConfig":"57"},{"size":3647,"mtime":1631529240774,"results":"71","hashOfConfig":"57"},{"size":5991,"mtime":1632917168877,"results":"72","hashOfConfig":"57"},{"size":5845,"mtime":1634126393659,"results":"73","hashOfConfig":"57"},{"size":3663,"mtime":1631529240773,"results":"74","hashOfConfig":"57"},{"size":6328,"mtime":1633867401408,"results":"75","hashOfConfig":"57"},{"size":691,"mtime":1633864721153,"results":"76","hashOfConfig":"57"},{"size":1061,"mtime":1631529240675,"results":"77","hashOfConfig":"57"},{"size":1723,"mtime":1631529240922,"results":"78","hashOfConfig":"57"},{"size":1044,"mtime":1631529240806,"results":"79","hashOfConfig":"57"},{"size":743,"mtime":1631529240807,"results":"80","hashOfConfig":"57"},{"size":480,"mtime":1631529240678,"results":"81","hashOfConfig":"57"},{"size":291,"mtime":1631529240776,"results":"82","hashOfConfig":"57"},{"size":412,"mtime":1631529240779,"results":"83","hashOfConfig":"57"},{"size":261,"mtime":1631529240777,"results":"84","hashOfConfig":"57"},{"size":6382,"mtime":1633861302153,"results":"85","hashOfConfig":"57"},{"size":146,"mtime":1631631484449,"results":"86","hashOfConfig":"57"},{"size":536,"mtime":1633864721154,"results":"87","hashOfConfig":"57"},{"size":803,"mtime":1633864721153,"results":"88","hashOfConfig":"57"},{"size":1271,"mtime":1633851802758,"results":"89","hashOfConfig":"57"},{"size":3223,"mtime":1631529240768,"results":"90","hashOfConfig":"57"},{"size":257,"mtime":1631529240925,"results":"91","hashOfConfig":"57"},{"size":915,"mtime":1631529240925,"results":"92","hashOfConfig":"57"},{"size":521,"mtime":1631529240765,"results":"93","hashOfConfig":"57"},{"size":8278,"mtime":1631529240765,"results":"94","hashOfConfig":"57"},{"size":15155,"mtime":1634136572704,"results":"95","hashOfConfig":"57"},{"size":2084,"mtime":1632917168879,"results":"96","hashOfConfig":"57"},{"size":12047,"mtime":1631529240771,"results":"97","hashOfConfig":"57"},{"size":2682,"mtime":1631529240678,"results":"98","hashOfConfig":"57"},{"size":3967,"mtime":1631529240681,"results":"99","hashOfConfig":"57"},{"size":5062,"mtime":1631529240760,"results":"100","hashOfConfig":"57"},{"size":7481,"mtime":1631631484345,"results":"101","hashOfConfig":"57"},{"size":5750,"mtime":1631631484344,"results":"102","hashOfConfig":"57"},{"size":3306,"mtime":1633863652513,"results":"103","hashOfConfig":"57"},{"size":9009,"mtime":1631529240763,"results":"104","hashOfConfig":"57"},{"size":8907,"mtime":1633863652515,"results":"105","hashOfConfig":"57"},{"size":3765,"mtime":1631529240769,"results":"106","hashOfConfig":"57"},{"size":8881,"mtime":1631529240770,"results":"107","hashOfConfig":"57"},{"size":4380,"mtime":1633869707534,"results":"108","hashOfConfig":"57"},{"size":3579,"mtime":1633867770626,"results":"109","hashOfConfig":"57"},{"size":3596,"mtime":1633870582702,"results":"110","hashOfConfig":"57"},{"size":5139,"mtime":1634125602895,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"gpv0kl",{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"114"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"114"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"114"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"114"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"114"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"114"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"114"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"114"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"114"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"114"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"114"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"114"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"114"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"114"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"114"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"114"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"114"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"114"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"114"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\index.js",[],["256","257"],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\App.js",["258","259"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Home from './components/Home';\r\nimport Heder from './components/Heder';\r\nimport SimpleMap from './components/search/MyLocation'\r\nimport { connect } from \"react-redux\";\r\nimport MyLocation from './components/search/MyLocation';\r\nconst app = (props) => {\r\n    return (<>\r\n     {/* <Heder Home={Home}/> */}\r\n        <Heder/>\r\n        <Home/>\r\n        {/* <SimpleMap/> */}\r\n        {/* <MyLocation /> */}\r\n        {/* console.log(\"jjj\"); */}\r\n        {/* tamar */}\r\n    </>)\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { CurrentUser: state.usersPart.CurrentUser };\r\n}\r\nexport default connect(mapStateToProps, {})(app);\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reportWebVitals.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reduces\\index.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Home.js",["260","261","262","263"],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\MyLocation.js",["264","265"],"\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nconst MyLocation = (props) => {\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n      \r\n        <div style={{ height: '100%', width: '100%' }}>\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: 'AIzaSyDeHECUdYGEUUu_2Laqle6o2ZOq8KM1LJo' }}\r\n                defaultCenter={props.center}\r\n                defaultZoom={props.zoom}\r\n            >\r\n                <AnyReactComponent\r\n                    lat={props.center.lat}\r\n                    lng={props.center.lng}\r\n                    text={props.txt}\r\n                />\r\n            </GoogleMapReact>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default MyLocation;\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reduces\\users.js",["266"],"import * as actionTypes from '../ActionTypes'\r\nconst initialUsers = {\r\n    AllUsers: [],\r\n    UserSearch: null,\r\n    SelectedUser: null,\r\n    ColorFirstName: \"\",\r\n    ColorLastName: \"\",\r\n    CurrentUser: null,\r\n    SingUp: false,\r\n    IfExist: false,\r\n    ErrorInAdd: false,\r\n    IdUserManagerUpdate: null\r\n}\r\nexport const usersReducer = (state = initialUsers, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FILL_ALL_USERS:\r\n            return {\r\n                ...state,\r\n                AllUsers: action.payload\r\n            };\r\n        case actionTypes.REFRESH_RESULT:\r\n            return {\r\n                ...state,\r\n                UserSearch: action.payload\r\n            }\r\n        case actionTypes.DELETE_RESULT_USER:\r\n            return {\r\n                ...state,\r\n                UserSearch: action.payload\r\n            }\r\n        case actionTypes.SELECTED_USER:\r\n            return {\r\n                ...state,\r\n                SelectedUser: action.payload\r\n            }\r\n        case actionTypes.NO_SELECTED_USER:\r\n            return {\r\n                ...state,\r\n                SelectedUser: action.payload\r\n            }\r\n        case actionTypes.CHANGE_COLOR_FIRST_NAME:\r\n            return {\r\n                ...state,\r\n                ColorFirstName: action.payload\r\n            }\r\n        case actionTypes.CHANGE_COLOR_LAST_NAME:\r\n            return {\r\n                ...state,\r\n                ColorLastName: action.payload\r\n            }\r\n        case actionTypes.SING_IN:\r\n            localStorage.setItem(\"currentUser\", null);\r\n            localStorage.setItem(\"currentUserPassword\", action.payload.password);\r\n            localStorage.setItem(\"currentUserMail\", action.payload.email);\r\n            localStorage.setItem(\"currentUserId\", action.payload._id);\r\n\r\n            return {\r\n                ...state,\r\n                CurrentUser: action.payload\r\n            }\r\n\r\n\r\n        case actionTypes.SING_OUT:\r\n            localStorage.setItem(\"currentUserPassword\", null);\r\n            localStorage.setItem(\"currentUserMail\", null);\r\n            localStorage.setItem(\"currentUserId\", null);\r\n            return {\r\n                ...state,\r\n                CurrentUser: null\r\n            }\r\n\r\n        case actionTypes.IF_EXIST:\r\n            return {\r\n                ...state,\r\n                IfExist: action.payload\r\n            }\r\n\r\n        case actionTypes.IF_ERROR_IN_ADD:\r\n            return {\r\n                ...state,\r\n                ErrorInAdd: action.payload\r\n            }\r\n        case actionTypes.CHANGE_ID_USER_MANAGER_UPDATE:\r\n            return {\r\n                ...state,\r\n                IdUserManagerUpdate: action.payload\r\n            }\r\n\r\n\r\n    }\r\n    return state;\r\n}\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\reduces\\business.js",["267","268","269","270"],"import * as actionTypes from '../ActionTypes';\r\nimport GeolocationService from '../services/SortService';\r\nimport Geocode from \"react-geocode\";\r\nimport { FromAddress } from '../util';\r\n\r\n\r\nconst initialBusiness = {\r\n    AllBusiness: [],\r\n    BusinessSearch: [],\r\n    SelectedBusiness: null,\r\n    ColorName: \"\",\r\n    updateBuisness: null\r\n}\r\nexport const businessReducer =  (state = initialBusiness, action) => {\r\n     switch (action.type) {\r\n        case actionTypes.FILL_ALL_BUSINESS:\r\n\r\n            // const places = [];\r\n            // let place = {};\r\n            // let sorted = [];\r\n            // let loc = {};\r\n\r\n            // await navigator.geolocation.getCurrentPosition(\r\n\r\n            //     async  arr => {\r\n\r\n            //         place = arr;\r\n\r\n            //         for (let index = 0; index < action.payload.length; index++) {\r\n            //             console.log(action.payload[index]);\r\n\r\n            //             await FromAddress(action.payload[index].adress).then(Address => places.push(Address))\r\n            //                 .catch(error => console.log(\"לא נמצא כתובת \" + action.payload[index].adress));\r\n            //         }\r\n\r\n            //         let arrSort = await GeolocationService.beginSort(\r\n            //             loc ? loc.results[0].geometry.location.lat : place.coords.latitude,\r\n            //             loc ? loc.results[0].geometry.location.lng : place.coords.longitude,\r\n            //             places\r\n            //         );\r\n\r\n            //         sorted = arrSort.map((location) => action.payload[location.index]);\r\n            //     }\r\n            // )\r\n\r\n\r\n\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                AllBusiness: action.payload\r\n            };\r\n\r\n            \r\n        case actionTypes.REFRESH_RESULT_BUSINESS:\r\n            return {\r\n                ...state,\r\n                BusinessSearch: action.payload\r\n            }\r\n        case actionTypes.DELETE_RESULT_BUSINESS:\r\n            return {\r\n                ...state,\r\n                BusinessSearch: action.payload\r\n            }\r\n        case actionTypes.SELECTED_BUSINESS:\r\n            return {\r\n                ...state,\r\n                SelectedBusiness: action.payload\r\n            }\r\n        // case actionTypes.NO_SELECTED_USER:\r\n        //     return {\r\n        //         ...state,\r\n        //         SelectedUser: action.payload\r\n        //     }\r\n        case actionTypes.CHANGE_COLOR_NAME:\r\n            return {\r\n                ...state,\r\n                ColorName: action.payload\r\n            }\r\n        case actionTypes.UPDATE_BUISNESS:\r\n            return {\r\n                ...state,\r\n                updateBuisness: action.payload\r\n            }\r\n\r\n    }\r\n    return state;\r\n}\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\Search.js",["271","272","273","274","275","276","277","278"],"import './Search.scss'\r\nimport React, { useEffect, useState } from 'react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport UsersSearch from './UseresSearch';\r\nimport BusinessSearch from './BusinessSearch';\r\nimport ResultSearchUser from './ResultSearchUser';\r\nimport ResultSearchBusiness from './ResultSearchBusiness';\r\nimport { connect } from \"react-redux\";\r\nimport { GetCurrentUser } from '../../actions/index';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport { GetCurrentUser as GetCurrentUser2 } from '../../util';\r\nimport Button from '@material-ui/core/Button';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(purple[500]),\r\n        backgroundColor: purple[500],\r\n        '&:hover': {\r\n            backgroundColor: purple[700],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n        position: \"absolute\",\r\n        top: \"-21%\",\r\n        right: \"102%\"\r\n    },\r\n}));\r\n\r\n\r\nconst Search = (props) => {\r\n    const classes = useStyles();\r\n\r\n    let users = React.createRef();\r\n    let business = React.createRef();\r\n\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n\r\n    const ChangeButtonUsers = (e) => {\r\n        e.target.classList.add(\"active\");\r\n        e.target.classList.add(\"teal\");\r\n        business.current.classList.remove(\"active\");\r\n        business.current.classList.remove(\"teal\");\r\n    }\r\n    const ChangeButtonBusiness = (e) => {\r\n        e.target.classList.add(\"active\");\r\n        e.target.classList.add(\"teal\");\r\n        users.current.classList.remove(\"active\");\r\n        users.current.classList.remove(\"teal\");\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    return (<><div className=\"back-search\">\r\n\r\n        <div className=\"ui pointing menu three serach_div\">\r\n\r\n            <Link to=\"/PrivateArea\">\r\n                <ColorButton variant=\"contained\" color=\"primary\" className={classes.margin}>\r\n                    PrivateArea\r\n                </ColorButton>\r\n            </Link>\r\n\r\n            <Link to=\"/search/users\" className=\"div_link\">\r\n                <a className=\"item sizetab item-user\" ref={users} onClick={(e) => ChangeButtonUsers(e)}>\r\n                    Users</a>\r\n            </Link>\r\n\r\n            <Link to=\"/search/business\" className=\"div_link\">\r\n                <a className=\"item sizetab\" ref={business} onClick={(e) => ChangeButtonBusiness(e)}>\r\n                    Business</a>\r\n            </Link>\r\n\r\n            <div className=\"place_search\">\r\n                <Route path=\"/search/users\">\r\n                    <>  <UsersSearch />\r\n                        <div className=\"place_result\">\r\n                        <ResultSearchUser />\r\n                    </div></>\r\n                </Route>\r\n\r\n                <Route path=\"/search/business\">\r\n                    <>    <BusinessSearch />\r\n                        <div className=\"place_result\">\r\n                            <ResultSearchBusiness />\r\n                        </div></>\r\n                </Route>\r\n                \r\n            </div>\r\n        </div>\r\n\r\n    </div></>);\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { CurrentUser: state.usersPart.CurrentUser };\r\n}\r\nexport default connect(mapStateToProps, { GetCurrentUser })(Search);\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\UseresSearch.js",["279","280","281","282","283","284","285","286","287"],"import 'react-bootstrap';\r\nimport { GetAllUsers, SaveResultUsers, SearchUsers, DeleteResultUser, ChangeColorFirstName, ChangeColorLastName } from '../../actions/index';\r\nimport user from '../classes/user';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport ResultSearchUser from './ResultSearchUser';\r\nimport {SendMail} from '../../util/index';\r\n\r\nconst UsersSearch = (props) => {\r\n    \r\n    const send = (mail) => {\r\n        let Email = {\r\n            toUser: mail,\r\n            subject: \"הצטרפות לאתר מי מייל\",\r\n            text: `<h1>${\"הצטרפות לאתר מי מייל\"}</h1>`\r\n        }\r\n        SendMail(Email);\r\n    }\r\n    function validateEmail(email) {\r\n        const re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        return re.test(email);\r\n    }\r\n\r\n    let firstName = useRef();\r\n    let lastName = useRef();\r\n    let phoneNamber = useRef();\r\n    let email = useRef();\r\n    let adress = useRef();\r\n\r\n    // props.AllUsers פעם ראשונה שמבקר באתר נשלף כל המשתמשים למערך\r\n    if (props.AllUsers.length == 0)\r\n        props.GetAllUsers();\r\n\r\n\r\n    // פונקצית חיפוש Users\r\n    const searchUsers = () => {\r\n\r\n        let User = new user();\r\n        User.firstName = firstName.current.value;\r\n        User.lastName = lastName.current.value;\r\n        User.phoneNamber = phoneNamber.current.value;\r\n        User.email = email.current.value;\r\n        User.adress = adress.current.value;\r\n\r\n        if (User.firstName || User.lastName || User.phoneNamber || User.email || User.adress) {\r\n            props.ChangeColorFirstName(User.firstName);\r\n            props.ChangeColorLastName(User.lastName);\r\n            if( User.email&&validateEmail( User.email)&&!props.AllUsers.find((item)=>item.email==User.email))\r\n                 send(User.email)\r\n            props.SearchUsers(User, props.AllUsers);\r\n        }\r\n        else\r\n            props.SaveResultUsers([]);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n\r\n    return (<>\r\n        {<form className=\"ui form\">\r\n            <div className=\"ui form\">\r\n                <div className=\"two fields\">\r\n                    <div className=\"field\">\r\n                        <label>First Name</label>\r\n                        <input placeholder=\"First Name\" ref={firstName} type=\"text\" onKeyUp={searchUsers} />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Last Name</label>\r\n                        <input placeholder=\"Last Name\" ref={lastName} type=\"text\" onKeyUp={searchUsers} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Email</label>\r\n                    <input type=\"text\" placeholder=\"Email\" ref={email} onKeyUp={searchUsers} />\r\n                </div>\r\n                <div className=\"two fields\">\r\n                    <div className=\"field\">\r\n                        <label>Phone Number</label>\r\n                        <input placeholder=\"Phone Number\" ref={phoneNamber} type=\"number\" onKeyUp={searchUsers} />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Address</label>\r\n                        <input placeholder=\"Address\" ref={adress} type=\"text\" onKeyUp={searchUsers} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n                   }\r\n    </>);\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { CurrentUser: state.usersPart.CurrentUser, AllUsers: state.usersPart.AllUsers, UserSearch: state.usersPart.UserSearch };\r\n}\r\nexport default connect(mapStateToProps, { GetAllUsers, SaveResultUsers, SearchUsers, DeleteResultUser, ChangeColorFirstName, ChangeColorLastName })(UsersSearch);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\BusinessSearch.js",["288","289","290","291","292","293","294","295","296","297","298"],"import 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../classes/business';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport {\r\n    GetAllBusiness, SaveResultBusiness, SearchBusiness, DeleteResultBusiness,\r\n    ChangeColorName, GetCurrentUser, SaveAllBusiness\r\n} from '../../actions/index';\r\n\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport './BusinessSearch.scss'\r\nimport { getAllCategories, SortllBusiness, GetAllBusinessFunc } from '../../util/index';\r\n\r\nconst BusinessSearch = (props) => {\r\n\r\n\r\n    let name = useRef();\r\n    let phoneNamber = useRef();\r\n    let email = useRef();\r\n    let adress = useRef();\r\n    let listCategory = useRef();\r\n    const [categoriesArr, setCategoriesArr] = useState([]);\r\n\r\n    const [countBusiness, setCountBusiness] = useState();\r\n    const [ifSorted, setifSorted] = useState(false);\r\n\r\n    // props.AllUsers פעם ראשונה שמבקר באתר נשלף כל המשתמשים למערך\r\n    if (props.AllBusiness && props.AllBusiness.length == 0) {\r\n        props.GetAllBusiness();\r\n    }\r\n\r\n\r\n\r\n\r\n    // פונקצית חיפוש Users\r\n    const searchBusiness = () => {\r\n\r\n        let Business = new business();\r\n        Business.name = name.current.value;\r\n        Business.phoneNamber = phoneNamber.current.value;\r\n        Business.email = email.current.value;\r\n        Business.adress = adress.current.value;\r\n        Business.listCategory = listCategory.current.getSelectedItems();\r\n        if (Business.name || Business.phoneNamber || Business.email || Business.adress || Business.listCategory.length != 0) {\r\n            props.ChangeColorName(Business.name);\r\n            props.SearchBusiness(Business, props.AllBusiness);\r\n        }\r\n        else\r\n            props.SaveResultBusiness([]);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        getAllCategories().then(scss => {\r\n            let arrName = scss.data.map((data) => data.name);\r\n            setCategoriesArr(arrName);\r\n        });\r\n\r\n\r\n        if (!ifSorted && props.AllBusiness && props.AllBusiness.length != 0) {\r\n            setifSorted(true);\r\n            SortllBusiness(props.AllBusiness,props.SaveAllBusiness)\r\n        }\r\n\r\n    }, [props.AllBusiness]);\r\n\r\n\r\n\r\n    return (<>\r\n        {<form className=\"ui form\">\r\n            <div className=\"ui form\">\r\n                <div className=\"two fields\">\r\n                    <div className=\"field\">\r\n                        <label>Name</label>\r\n                        <input placeholder=\"Name\" type=\"text\" ref={name} type=\"text\" onKeyUp={searchBusiness} />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Address</label>\r\n                        <input placeholder=\"Address\" type=\"text\" ref={adress} type=\"text\" onKeyUp={searchBusiness} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Email</label>\r\n                    <input type=\"text\" placeholder=\"Email\" ref={email} type=\"text\" onKeyUp={searchBusiness} />\r\n                </div>\r\n                <div className=\"two fields\">\r\n                    <div className=\"field\">\r\n                        <label>Phone Number</label>\r\n                        <input placeholder=\"Phone Number\" type=\"number\" ref={phoneNamber} type=\"text\" onKeyUp={searchBusiness} />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Category</label>\r\n                        <Multiselect\r\n                            options={categoriesArr ? categoriesArr : []}\r\n                            isObject={false}\r\n                            ref={listCategory} type=\"text\"\r\n                            onSelect={searchBusiness}\r\n                            onRemove={searchBusiness}\r\n                        />\r\n                        {/* <input placeholder=\"category\" type=\"text\" ref={listCategory} type=\"text\" onKeyUp={searchBusiness} /> */}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </form>}\r\n\r\n\r\n    </>);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { CurrentUser: state.usersPart.CurrentUser, AllBusiness: state.businessPart.AllBusiness, BusinessSearch: state.businessPart.BusinessSearch };\r\n}\r\nexport default connect(mapStateToProps, {\r\n    SortllBusiness, GetCurrentUser, GetAllBusiness, SaveResultBusiness\r\n    , SearchBusiness, DeleteResultBusiness, ChangeColorName, SaveAllBusiness\r\n})(BusinessSearch);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\Manager.js",["299","300"],"import React, { useEffect, useState } from 'react';\r\nimport TableTasks from './TableTasks';\r\n\r\nconst Manager = (props) => {\r\n\r\n    return (<>\r\n    <TableTasks/>\r\n       </>);\r\n}\r\n\r\nexport default Manager;\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\404\\Page404.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\SingUp.js",["301"],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\UpdataUser.js",["302","303","304"],"import React, { useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AddTask, GetAllTypeTsks } from '../../util/index';\r\nimport task from '../classes/task';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { useParams } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nconst UpdataUser = (props) => {\r\n\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const desription = register('desription', { required: \"This is required.\", minLength: { value: 5, message: \"Min 5\" } })\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const { idUser } = useParams();\r\n\r\n    let Task = new task();\r\n\r\n    const AddTaskFunc = async (data) => {\r\n        Task.date = new Date();\r\n\r\n        Task.codeUser = localStorage.getItem(\"currentUserId\");\r\n\r\n\r\n        let all = await GetAllTypeTsks();\r\n        Task.type = all.data.find((type) => type.code == 1)._id;\r\n\r\n        Task.otherbuisness = null;\r\n        Task.status = false;\r\n        Task.desription = data.desription;\r\n        Task.otherUser = idUser;\r\n\r\n        AddTask(Task).then((succ) => {\r\n\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"נשלח בהצלחה\");\r\n            handleClick();\r\n\r\n\r\n        }).catch((error) => {\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n\r\n        });\r\n        console.log(Task);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n\r\n\r\n    // alerts\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (<>\r\n\r\n\r\n        {/* alerts */}\r\n\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n        </Snackbar>\r\n\r\n        {/* alerts */}\r\n\r\n\r\n        <div>\r\n            <form noValidate onSubmit={handleSubmit(AddTaskFunc)}>\r\n                <TextField\r\n                    label=\"Dense\"\r\n                    id=\"outlined-margin-dense\"\r\n                    className={classes.textField}\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"desription\"\r\n                    {...desription}\r\n                />\r\n                <ErrorMessage errors={errors} name=\"desription\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                    הגש בקשה\r\n      </Button>\r\n            </form>\r\n        </div></>);\r\n}\r\n\r\nexport default UpdataUser;","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\ForgotPassword.js",["305","306","307","308","309","310","311"],"\r\n\r\n\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { GetCurrentUser, SignOut } from '../../actions/index';\r\nimport './SignIn.scss';\r\nimport React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { GetCurrentUserByPaaswordAndMail, CheckManager, SendPasswordIfExist } from '../../util/index';\r\nimport { SignIn as SignInFunc } from '../../actions/index';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        // backgroundImage:'url(./img/back.png)'\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nconst ForgotPassword = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let mail;\r\n\r\n    const [ifManager, setifManager] = useState(false);\r\n    const [ifNoGoToLogin, setifNoGoToLogin] = useState(false);\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    const GetCurrentUser = async () => {\r\n\r\n\r\n\r\n        SendPasswordIfExist(mail).then(async succ => {\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"הסיסמא נשלחה בהצלחה\");\r\n            handleClick();\r\n\r\n        }).catch(error => {\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    if (ifNoGoToLogin)\r\n        return ifManager ? <Redirect to={'/Manager'} /> : <Redirect to={{ pathname: \"/Search/users\" }} />;\r\n\r\n    return (\r\n        <>\r\n\r\n           {/* alerts */}\r\n           <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n            </Snackbar>\r\n            {/* alerts */}\r\n            <Grid container component=\"main\" className={classes.root}>\r\n                <CssBaseline />\r\n\r\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Enter your email\r\n                        </Typography>\r\n                        <form className={classes.form} noValidate>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                onKeyUp={(e) => mail = e.target.value}\r\n                            />\r\n\r\n\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                className={classes.submit}\r\n                                onClick={async () => {\r\n                                    await GetCurrentUser();\r\n                                }}>\r\n                                Send\r\n                            </Button>\r\n                            <Grid container>\r\n                                <Grid item>\r\n                                    <Link to=\"/SignIn\">\r\n                                        Already have an account? Sign in\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} sm={2} md={7} className={classes.image + \" opcityandimg\"} />\r\n            </Grid>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { CurrentUser: state.usersPart.CurrentUser, SingUp: state.usersPart.SingUp };\r\n}\r\nexport default connect(mapStateToProps, { GetCurrentUser, SignOut, SignInFunc })(ForgotPassword);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\singIn.js",["312"],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\UpdataBusiness.js",["313","314","315"],"import React, { useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AddTask, GetAllTypeTsks } from '../../util/index';\r\nimport task from '../classes/task';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { useParams } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nconst UpdataBusiness = (props) => {\r\n\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const desription = register('desription', { required: \"This is required.\", minLength: { value: 5, message: \"Min 5\" } })\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const { idBusiness } = useParams();\r\n\r\n    let Task = new task();\r\n\r\n    const AddTaskFunc = async (data) => {\r\n        Task.date = new Date();\r\n\r\n        Task.codeUser = localStorage.getItem(\"currentUserId\");\r\n\r\n\r\n        let all = await GetAllTypeTsks();\r\n        Task.type = all.data.find((type) => type.code == 4)._id;\r\n\r\n        Task.otherbuisness = idBusiness;\r\n        Task.status = false;\r\n        Task.desription = data.desription;\r\n        Task.otherUser = null;\r\n\r\n        AddTask(Task).then((succ) => {\r\n\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"נשלח בהצלחה\");\r\n            handleClick();\r\n\r\n\r\n        }).catch((error) => {\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n\r\n        });\r\n        console.log(Task);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n\r\n\r\n    // alerts\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (<>\r\n\r\n\r\n        {/* alerts */}\r\n\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n        </Snackbar>\r\n\r\n        {/* alerts */}\r\n\r\n\r\n        <div>\r\n            <form noValidate onSubmit={handleSubmit(AddTaskFunc)}>\r\n                <TextField\r\n                    label=\"Dense\"\r\n                    id=\"outlined-margin-dense\"\r\n                    className={classes.textField}\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"desription\"\r\n                    {...desription}\r\n                />\r\n                <ErrorMessage errors={errors} name=\"desription\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                    הגש בקשה\r\n      </Button>\r\n            </form>\r\n        </div></>);\r\n}\r\n\r\nexport default UpdataBusiness;","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\PrivateArea.js",["316","317","318","319","320","321"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport UpdatePersonalDetails from './UpdatePersonalDetails';\r\nimport BusinessInformationUpdate from './BusinessInformationUpdate';\r\nimport AddingBusiness from './AddingBusiness';\r\nimport SearchHistory from './SearchHistory';\r\nimport ScrollableTabsButtonAuto from './SearchHistory';\r\nimport { connect } from \"react-redux\";\r\nimport { ChangeUpdateBuisness, ChangeColorFirstName, ChangeColorLastName } from '../../actions/index'\r\nimport { GetCurrentUser } from '../../util';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Tasks from './Tasks';\r\n\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n    root: {\r\n        color: '#eaeaf0',\r\n        display: 'flex',\r\n        height: 22,\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        color: '#784af4',\r\n    },\r\n    circle: {\r\n        width: 8,\r\n        height: 8,\r\n        borderRadius: '50%',\r\n        backgroundColor: 'currentColor',\r\n    },\r\n    completed: {\r\n        color: '#784af4',\r\n        zIndex: 1,\r\n        fontSize: 18,\r\n    },\r\n});\r\n\r\nfunction QontoStepIcon(props) {\r\n    const classes = useQontoStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n            })}\r\n        >\r\n            {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n    active: PropTypes.bool,\r\n    completed: PropTypes.bool,\r\n};\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 22,\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    line: {\r\n        height: 3,\r\n        border: 0,\r\n        backgroundColor: '#eaeaf0',\r\n        borderRadius: 1,\r\n    },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: '#ccc',\r\n        zIndex: 1,\r\n        color: '#fff',\r\n        width: 50,\r\n        height: 50,\r\n        display: 'flex',\r\n        borderRadius: '50%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n    },\r\n    completed: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons = {\r\n        1: <SettingsIcon />,\r\n        2: <GroupAddIcon />,\r\n        3: <VideoLabelIcon />,\r\n        4: <VideoLabelIcon />,\r\n        5: <SettingsIcon />\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n                [classes.completed]: completed,\r\n            })}\r\n        >\r\n            {icons[String(props.icon)]}\r\n        </div>\r\n    );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n\r\n    active: PropTypes.bool,\r\n\r\n    completed: PropTypes.bool,\r\n\r\n    icon: PropTypes.node,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction getSteps() {\r\n    return ['Update Personal Details', 'Business Information Update', 'Adding Business', 'Search History', 'Task'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n    switch (step) {\r\n        case 0:\r\n            return <UpdatePersonalDetails />;\r\n        case 1:\r\n            return <BusinessInformationUpdate />;\r\n        case 2:\r\n            return <AddingBusiness />;\r\n        case 3:\r\n            return <ScrollableTabsButtonAuto />;\r\n        case 4:\r\n            return <Tasks />;\r\n        default:\r\n            return <UpdatePersonalDetails />;\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction PrivateArea(props) {\r\n\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(4);\r\n    const steps = getSteps();\r\n\r\n\r\n    // const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n\r\n    const handleNext = (index) => {\r\n        setActiveStep(index);\r\n    };\r\n\r\n    useEffect(() => {\r\n        props.ChangeColorFirstName(\"\");\r\n        props.ChangeColorLastName(\"\");\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\r\n                {steps.map((label, index) => (\r\n                    <Step key={index} onClick={() => handleNext(index)}>\r\n                        <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { updateBuisness: state.businessPart.updateBuisness };\r\n}\r\nexport default connect(mapStateToProps, { ChangeUpdateBuisness, ChangeColorFirstName, ChangeColorLastName })(PrivateArea);\r\n\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\index.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\ActionTypes.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\services\\SortService.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\ResultSearchBusiness.js",["322","323","324","325","326","327"],"import Business from \"./Business\";\r\nimport { connect } from \"react-redux\";\r\nimport { List } from 'semantic-ui-react'\r\nimport { GetCurrentUser } from '../../actions/index';\r\nimport { geolocated } from \"react-geolocated\";\r\nimport Geocode from \"react-geocode\";\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport { FromAddress } from '../../util';\r\nimport GeolocationService from '../../services/SortService';\r\n\r\nconst ResultSearchBusiness = (props) => {\r\n\r\n    useEffect(() => {\r\n    }, [props.BusinessSearch]);\r\n    return (<>\r\n\r\n        {<List divided verticalAlign='middle'>\r\n\r\n            {props.BusinessSearch && props.BusinessSearch.map((item) => {\r\n                return (<Business ifAdd=\"true\" key={item._id} business={item} />);\r\n            })}\r\n        </List>}\r\n\r\n    </>);\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { CurrentUser: state.usersPart.CurrentUser, BusinessSearch: state.businessPart.BusinessSearch };\r\n}\r\nexport default connect(mapStateToProps, { GetCurrentUser })(ResultSearchBusiness); ","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\ResultSearchUser.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\actions\\index.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\classes\\business.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\classes\\user.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\classes\\task.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\TableTasks.js",["328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport { GetAllTask, GetAllTypeTsks, GetTaskById, SendMail } from '../../util/index';\r\nimport { Link, Route, Switch, useRouteMatch, useParams } from 'react-router-dom';\r\nimport UpdatePersonalDetails from '../PrivateArea/UpdatePersonalDetails';\r\nimport { withRouter } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { connect } from \"react-redux\";\r\nimport { ChangeIdUserManagerUpdate } from '../../actions/index';\r\nimport { setTimeout } from 'timers';\r\nimport UpdateBuisnes from '../PrivateArea/UpdateBuisness/UpdateBuisnes';\r\nimport UpdateBuisnesOfManager from './UpdateBuisnesOfManager';\r\nimport AddCategory from './AddCategory';\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset',\r\n        },\r\n    },\r\n});\r\n\r\nfunction Row(props) {\r\n    const { row, action } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow className={classes.root}>\r\n\r\n                <TableCell align=\"right\">{action}</TableCell>\r\n                <TableCell align=\"right\">{row.type.name}</TableCell>\r\n                <TableCell align=\"right\">{row.desription}</TableCell>\r\n                <TableCell align=\"right\">{row.codeUser.firstName}&nbsp;{row.codeUser.lastName}</TableCell>\r\n                <TableCell align=\"right\">{row.date}</TableCell>\r\n            </TableRow>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction TableTasks(props) {\r\n\r\n    const { idTask } = useParams();\r\n    const [ifTasks, setifTasks] = useState(true);\r\n\r\n    const send = (idTask,mail) => {\r\n        let Email = {\r\n            toUser: mail,\r\n            subject: \"הצטרפות לאתר מי מייל\",\r\n            text: `<h1>${\"הצטרפות לאתר מי מייל\"}</h1>`\r\n            // ,attachments\r\n        }\r\n        SendMail(Email);\r\n    }\r\n\r\n\r\n    const [rows, setRows] = useState([]);\r\n    const [typeTask, setTypeTask] = useState([]);\r\n\r\n    const { url, path } = useRouteMatch();\r\n\r\n    useEffect(() => {\r\n\r\n        GetAllTypeTsks().then(succ => {\r\n\r\n            let typeArr = [];\r\n            succ.data.forEach(element => {\r\n\r\n\r\n                if (element.code == 1)\r\n                    typeArr[0] = { id: element._id, action: (id, idTask) => <Link to={`${url}/updateUser/${id}/${idTask}`} onClick={() => { setTimeout(() => window.location.reload(), 10) }}>עדכון משתמש</Link> };\r\n                else if (element.code == 2)\r\n                    typeArr[1] = { id: element._id, action: (id, idTask) => <Link to={`${url}/addCategory/${idTask}`} onClick={() => { setTimeout(() => window.location.reload(), 10) }}>הוסף קטגוריה</Link> }\r\n                else if (element.code == 3)\r\n                    typeArr[2] = { id: element._id, action: (mail, idTask) => <button onClick={() => { send(idTask, mail) }} >הוסף משתמש למערכת</button> }\r\n                else if (element.code == 4)\r\n                    typeArr[3] = { id: element._id, action: (id, idTask) => <Link to={`${url}/updateBuisness/${id}/${idTask}`} onClick={() => { setTimeout(() => window.location.reload(), 10) }}>עדכן עסק</Link> }\r\n\r\n            });\r\n\r\n            setTypeTask(typeArr);\r\n\r\n        }).catch(error => console.log(error));\r\n\r\n        GetAllTask().then(succ => {\r\n            setRows(succ.data);\r\n        }).catch(erorr => {\r\n            console.log(erorr);\r\n        });\r\n\r\n        GetTaskById(idTask).then(succ => {\r\n            if (succ.data.status == true)\r\n                setifTasks(false);\r\n        }).catch(() => {\r\n\r\n        });\r\n    }, []);\r\n    return (<>{rows && <>\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"collapsible table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\">משימה</TableCell>\r\n                        <TableCell align=\"right\">תאור</TableCell>\r\n                        <TableCell align=\"right\">משתמש</TableCell>\r\n                        <TableCell align=\"right\">תאריך</TableCell>\r\n\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {typeTask && rows.map((row, index) => (\r\n                        <Row key={index} row={row} action={typeTask.find(elem => elem.id === row.type._id)\r\n                            .action(row.otherUser ? row.otherUser._id : row.otherbuisness ? row.otherbuisness._id : row.mail ? row.mail : null\r\n                                , row._id)} />\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n        <Switch>\r\n\r\n            <Route path={`${path}/updateUser/:id/:idTask`}>\r\n\r\n                {ifTasks && <UpdatePersonalDetails />}\r\n            </Route>\r\n\r\n            {/* <Route path={`${path}/sendAddUser/:idTask`}>\r\n                <div>sendAddUser</div>\r\n            </Route> */}\r\n\r\n            <Route path={`${path}/addCategory/:idTask`}>\r\n                {ifTasks && <AddCategory />}\r\n            </Route>\r\n\r\n            <Route path={`${path}/updateBuisness/:id/:idTask`}>\r\n                {ifTasks && <UpdateBuisnesOfManager />}\r\n            </Route>\r\n\r\n        </Switch>\r\n    </>\r\n    }</>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {};\r\n}\r\nexport default connect(mapStateToProps, { ChangeIdUserManagerUpdate })(TableTasks);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\SendMail.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\Manager.js",["347","348"],"export const CheckManager = (email, password) => {\r\n\r\n   (localStorage.getItem(\"managerMail\")) \r\n        let mailManager = localStorage.getItem(\"managerMail\").split(\"@\");\r\n        let mailArr = mailManager[0].split(\"\");\r\n        let mail = mailArr.filter((elem, index) => index % 2 == 0).join(\"\");\r\n        let newMail = mail + \"@\" + mailManager[1];\r\n\r\n        let idManager = localStorage.getItem(\"managerId\").split(\"\").filter((elem, index) => index % 2 == 0).join(\"\");\r\n        return email === newMail && password === idManager;\r\n   \r\n   \r\n}","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\Tasks.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\Location.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\SearchHistory.js",["349","350","351","352"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport axios from 'axios';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport Users from './Histories/Users';\r\nimport Buisness from './Histories/Buisness';\r\nimport { GetCurrentUser } from '../../util/index';\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\n\r\nconst SearchHistory = (props) => {\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    // const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        GetCurrentUser().then(data => {\r\n            setCurrentUser(data.data);\r\n        }).catch(() => {\r\n           \r\n        });\r\n\r\n    }, []);\r\n\r\n    \r\n    return (<>\r\n        {currentUser ?\r\n            <>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\" color=\"default\" width=\"22%\">\r\n                        <Tabs\r\n                            value={value}\r\n                            onChange={handleChange}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            variant=\"scrollable\"\r\n                            scrollButtons=\"auto\"\r\n                            aria-label=\"scrollable auto tabs example\"\r\n                        >\r\n                            <Tab label=\"Users\"  {...a11yProps(0)} />\r\n                            <Tab label=\"Business\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}><Users /></TabPanel>\r\n                    <TabPanel value={value} index={1}><Buisness /></TabPanel>\r\n                </div>\r\n            </>\r\n            : null}\r\n    </>);\r\n}\r\nexport default SearchHistory;\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\UtilCategory.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\UtilBuisness.js",[],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\BusinessInformationUpdate.js",["353"],"import ListBuisness from \"./UpdateBuisness/ListBuisness\";\r\nimport { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { ChangeUpdateBuisness } from '../../actions/index';\r\n\r\n\r\nconst BusinessInformationUpdate = (props) => {\r\n\r\n\r\n    return (<>\r\n        <ListBuisness/>\r\n\r\n    </>);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { updateBuisness: state.businessPart.updateBuisness };\r\n}\r\nexport default connect(mapStateToProps, { ChangeUpdateBuisness })(BusinessInformationUpdate);\r\n\r\n\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\AddingBusiness.js",["354","355","356","357","358","359"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../classes/business'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport '../LogIn/SingUp.scss';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport axios from 'axios';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { AddBusiness, getAllCategories } from '../../util/index';\r\n\r\n\r\n//לא לשכוח\r\n//   img\r\n//   advertising\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\nfunction AddingBusiness(props) {\r\n    const classes = useStyles();\r\n\r\n\r\n    let Business = new business();\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const name = register('name', { required: \"This is required.\", minLength: { value: 2, message: \"Min 2\" }, maxLength: { value: 11, message: \"Max 11\" } })\r\n    const adress = register('adress', { required: \"This is required.\" })\r\n    const email = register('email', { required: \"This is required.\", pattern: { value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, message: \"Email No Valid\" } })\r\n    const phone = register('phone', { required: \"This is required.\", pattern: { value: /0[0-9]{9}/, message: \"Phone No Valid\" } })\r\n    const category = register('category', { minLength: { value: 1, message: \"hhhhh\" } })\r\n\r\n\r\n    const AddBusinessFunc = async (business) => {\r\n\r\n        AddBusiness(business).then((succ) => {\r\n            console.log(succ.data);\r\n\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"Adding Success\");\r\n            handleClick();\r\n\r\n        }).catch(ee => {\r\n\r\n            console.log(ee.massege);\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(ee.response.data)\r\n\r\n            handleClick();\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const onSubmit = data => {\r\n        if (listCategory.current.getSelectedItems().length == 0)\r\n            setIfSelect(true);\r\n        else {\r\n            Business.phoneNamber = [];\r\n            Business.phoneNamber.push(data.phone);\r\n            Business.userId = localStorage.getItem(\"currentUserId\");\r\n            Business.listCategory = listCategory.current.getSelectedItems();\r\n            Business.name = data.name;\r\n            Business.email = data.email;\r\n            Business.adress = data.adress;\r\n            AddBusinessFunc(Business);\r\n        }\r\n    }\r\n\r\n    let listCategory = useRef([]);\r\n    const [categoriesArr, setCategoriesArr] = useState([]);\r\n    const [ifSelect, setIfSelect] = useState(false);\r\n\r\n    const [check, setCheck] = useState(false);\r\n\r\n    onchange = (e) => {\r\n        console.log(e);\r\n        setCheck(e.target.checked);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        getAllCategories().then(scss => {\r\n            let arrName = scss.data.map((data) => data.name);\r\n            setCategoriesArr(arrName);\r\n        });\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n\r\n\r\n    \r\n    return (<>\r\n        {/* alerts */}\r\n\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n        </Snackbar>\r\n\r\n        {/* alerts */}\r\n\r\n        {/* form */}\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        autoComplete=\"fname\"\r\n                        name=\"name\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"name\"\r\n                        {...name}\r\n                    />\r\n                    <ErrorMessage errors={errors} name=\"name\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"adress\"\r\n                        label=\"Address\"\r\n                        name=\"adress\"\r\n                        autoComplete=\"lname\"\r\n                        {...adress}\r\n                    />\r\n                    <ErrorMessage errors={errors} name=\"adress\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        {...email}\r\n                    />\r\n                    <ErrorMessage errors={errors} name=\"email\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n                    {props.ifExist ? <p className=\"redColor\">This Email Alrady Exist</p> : null}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Multiselect\r\n                        onSelect={(e) => setIfSelect(false)}\r\n                        label=\"Category\"\r\n                        name=\"category\"\r\n                        options={categoriesArr ? categoriesArr : []}\r\n                        isObject={false}\r\n                        ref={listCategory} type=\"text\"\r\n                    />\r\n                    {ifSelect && <p className=\"redColor\">This is required.</p>}\r\n\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"phone\"\r\n                        label=\"Phone Namber\"\r\n                        name=\"phone\"\r\n                        autoComplete=\"phone\"\r\n                        {...phone}\r\n                    />\r\n                    <ErrorMessage errors={errors} name=\"phone\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n            {props.errorInAdd ? <p className=\"redColor\">Error System</p> : null}\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n            > Sign Up</Button>\r\n\r\n        </form>\r\n        {/* form */}\r\n    </>\r\n\r\n\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {};\r\n}\r\nexport default connect(mapStateToProps, {})(AddingBusiness);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\LogIn\\BasicDetails.js",["360","361","362","363","364","365","366","367"],"D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\util\\UtilUser.js",["368"],"import axios from 'axios';\r\nimport Geocode from \"react-geocode\";\r\n\r\nexport const GetCurrentUser = async () => {\r\n    return axios.get(`http://localhost:4000/users/${localStorage.getItem(\"currentUserId\")}`);\r\n}\r\nexport const GetCurrentUserById = async (id) => {\r\n    return axios.get(`http://localhost:4000/users/${id}`);\r\n}\r\nexport const AddHistory = async (currentId, userId) => {\r\n\r\n    axios.put(`http://localhost:4000/users/addToHistory/${currentId}&${userId}`);\r\n\r\n}\r\nexport const AddHistoryBusiness = async (currentId, businessId) => {\r\n\r\n    axios.put(`http://localhost:4000/users/addToHistoryBusiness/${currentId}&${businessId}`);\r\n\r\n}\r\nexport const AddUser = async (user) => {\r\n    return axios.post(\"http://localhost:4000/users\", user)\r\n}\r\n\r\nexport const DeleteHistoryUsers = async (index) => {\r\n    return axios.put(`http://localhost:4000/users/deleteHistoryUser/${localStorage.getItem(\"currentUserId\")}&${index}`);\r\n}\r\nexport const UpdateUser = async (id, user) => {\r\n    return axios.put(`http://localhost:4000/users/${id}`, user);\r\n}\r\n\r\nexport const GetCurrentUserByPaaswordAndMail = async (password, mail) => {\r\n    return axios.get(`http://localhost:4000/users/getByPassword/${password}&${mail}`);\r\n}\r\n\r\nexport const GetImage = async (img) => {\r\n    return axios.get(`http://localhost:4000/${img}`);\r\n}\r\n\r\n\r\nexport const SendPasswordIfExist = async (email) => {\r\n    return axios.get(`http://localhost:4000/users/sendPasswordIfExist/${email}`);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const ChangeAdrres = async (address,setLen,setLet) => {\r\n//     let location;\r\n//     Geocode.fromAddress(address).then(\r\n//         (response) => {\r\n//             const { lat, lng } = response.results[0].geometry.location;\r\n//             console.log(lat, lng);\r\n//             // location = {\r\n//             //     \"latitude\":lat,\r\n//             //     \"longitude\": lng\r\n//             // }\r\n//             setLet(lat);\r\n//             setLen(lng)\r\n//             return location\r\n//         },\r\n//         (error) => {\r\n//             console.error(error);\r\n//         }\r\n//     );\r\n// }\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdatePersonalDetails.js",["369","370","371","372","373","374","375","376","377"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport { AddUser } from '../../actions/index';\r\nimport user from '../classes/user';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport '../LogIn/SingUp.scss';\r\nimport { IfExist, ErrorInAdd } from '../../actions/index';\r\nimport axios from 'axios';\r\nimport { Redirect, useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { GetCurrentUser } from '../../util/index';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { UpdateUser, GetCurrentUserById, UpdateStatusTask } from '../../util/index';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nfunction UpdatePersonalDetails(props) {\r\n\r\n    // עיצוב\r\n    const classes = useStyles();\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const { id,idTask } = useParams();\r\n\r\n\r\n    // משתנה לעדכון \r\n    let updateUser = new user();\r\n    updateUser.firstName = null;\r\n    updateUser.lastName = null;\r\n    updateUser.password = null;\r\n    updateUser.phoneNamber = null;\r\n    updateUser.adress = null;\r\n\r\n\r\n    // טופס\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const firstName = register('firstName', { minLength: { value: 2, message: \"Min 2\" }, maxLength: { value: 11, message: \"Max 11\" } })\r\n    const lastName = register('lastName', { minLength: { value: 2, message: \"Min 2\" }, maxLength: { value: 10, message: \"Max 10\" } })\r\n    const email = register('email', { pattern: { value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, message: \"Email No Valid\" } })\r\n    const phone = register('phone', { pattern: { value: /0[0-9]{9}/, message: \"Phone No Valid\" } })\r\n    const password = register('password', { minLength: { value: 5, message: \"Min 5\" }, maxLength: { value: 5, message: \"Max 5\" }, pattern: { value: /[0-9a-zA-Z]{5}/, message: \"Make sure it's at least 5 characters OR characters including a number , a lowercase letter and a upperrcase letter\" } })\r\n    const address = register('address');\r\n\r\n\r\n    // פונקצית העדכון\r\n    const onSubmit = async data => {\r\n\r\n        data.ifMessege = data.ifMessege === \"\" ? currentUser.ifMessege : data.ifMessege;\r\n        if (updateUser.firstName === \"\" || updateUser.lastName === \"\" || updateUser.adress === \"\" || updateUser.phoneNamber === \"\" || updateUser.password === \"\") {\r\n            settypeAlert(\"error\");\r\n            setmasseg(\"ALL INPUT IS REQUIRED\");\r\n            handleClick();\r\n        }\r\n        else {\r\n            UpdateUser(id ? id : localStorage.getItem(\"currentUserId\"), data).then(succ => {\r\n                if (idTask && id)\r\n                    UpdateStatusTask(idTask, true);\r\n                settypeAlert(\"success\");\r\n                setmasseg(\"Updating Success\");\r\n                handleClick();\r\n\r\n            }).catch(error => {\r\n\r\n                settypeAlert(\"error\");\r\n                setmasseg(error.response.data)\r\n                handleClick();\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const onKeyUp = (e, type) => {\r\n\r\n        updateUser[type] = e.target.value;\r\n        // e.target.value = updateUser[type];\r\n        // if (updateUser[type] == '')\r\n        //     updateUser[type] = null;\r\n    }\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n    useEffect(() => {\r\n\r\n        if (id) {\r\n            GetCurrentUserById(id).then(data => {\r\n                setCurrentUser(data.data);\r\n\r\n            }).catch(() => {\r\n\r\n            });\r\n           \r\n\r\n        }\r\n\r\n\r\n        else\r\n            // שליפת המשתמש הנוכחי\r\n            GetCurrentUser().then(data => {\r\n                setCurrentUser(data.data);\r\n\r\n            }).catch(() => {\r\n\r\n            });\r\n\r\n        return (props.IfExist(false), props.ErrorInAdd(false));\r\n\r\n    }, [props.idUserUpdate])\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* alerts */}\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n            </Snackbar>\r\n            {/* alerts */}\r\n\r\n            { currentUser && <form className={classes.form} noValidate onSubmit={handleSubmit(() => onSubmit(updateUser))}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            autoComplete=\"fname\"\r\n                            name=\"firstName\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"firstName\"\r\n                            label=\"First Name\"\r\n                            defaultValue={currentUser.firstName}\r\n                            onKeyUp={(e) => onKeyUp(e, \"firstName\")}\r\n                            {...firstName}\r\n                        // onLoad={() => updateUser.firstName = currentUser.firstName}\r\n                        />\r\n                        <p></p>\r\n                        <ErrorMessage errors={errors} name=\"firstName\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"lastName\"\r\n                            label=\"Last Name\"\r\n                            name=\"lastName\"\r\n                            autoComplete=\"lname\"\r\n                            defaultValue={currentUser.lastName}\r\n                            onKeyUp={(e) => onKeyUp(e, \"lastName\")}\r\n                            {...lastName}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"lastName\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            defaultValue={currentUser.email}\r\n                            onKeyUp={(e) => onKeyUp(e, \"email\")}\r\n                            {...email}\r\n                            disabled=\"true\"\r\n                        />\r\n\r\n                        <ErrorMessage errors={errors} name=\"email\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n                        {props.ifExist ? <p className=\"redColor\">This Email Alrady Exist</p> : null}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            autoComplete=\"password\"\r\n                            name=\"password\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            defaultValue={currentUser.password}\r\n                            onKeyUp={(e) => onKeyUp(e, \"password\")}\r\n                            {...password}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"password\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"phone\"\r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            autoComplete=\"phone\"\r\n                            defaultValue={currentUser.phoneNamber}\r\n                            onKeyUp={(e) => onKeyUp(e, \"phoneNamber\")}\r\n                            {...phone}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"phone\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            autoComplete=\"fname\"\r\n                            name=\"address\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"address\"\r\n                            label=\"Address\"\r\n                            defaultValue={currentUser.adress}\r\n                            onKeyUp={(e) => onKeyUp(e, \"adress\")}\r\n                            {...address}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox defaultChecked={currentUser.ifMessege}\r\n                                color=\"primary\" onClick={(e) => {\r\n                                    updateUser.ifMessege = e.target.checked\r\n                                }} />}\r\n                            label=\"I want to be notified if they searched for me\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                {props.errorInAdd ? <p className=\"redColor\">Error System</p> : null}\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                    Update\r\n          </Button>\r\n\r\n            </form>}\r\n        </>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    // ;\r\n    return {\r\n        ifExist: state.usersPart.IfExist, errorInAdd: state.usersPart.ErrorInAdd,\r\n        idUserUpdate: state.usersPart.IdUserManagerUpdate\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { AddUser, IfExist, ErrorInAdd })(UpdatePersonalDetails);\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\actions\\business.js",["378","379","380","381","382"],"import axios from 'axios';\r\nimport * as actionTypes from '../ActionTypes';\r\nimport GeolocationService from '../services/SortService';\r\nimport Geocode from \"react-geocode\";\r\nimport { FromAddress } from '../util';\r\n\r\nexport const GetAllBusiness = () => {\r\n\r\n    return (dispatch) => {\r\n        axios.get(\"http://localhost:4000/business\").then(succ => {\r\n            console.log(succ.data);\r\n            dispatch(SaveAllBusiness(succ.data));\r\n        }).catch(ee => {\r\n            console.log(ee.massege);\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const SearchBusiness = (business, allBusiness) => {\r\n    return (dispatch) => {\r\n        let name = business.name || \"\";\r\n        let phoneNamber = business.phoneNamber || [];\r\n        let email = business.email || \"\";\r\n        let adress = business.adress || \"\";\r\n        let listCategory = [];\r\n        if (business.listCategory)\r\n            business.listCategory.forEach((e) => listCategory.push(e));\r\n        let businesses = allBusiness.filter((b) => {\r\n            return b.name.includes(name) && (b.listCategory.filter(c => business.listCategory.indexOf(c) != -1).length > 0 || listCategory.length == 0)\r\n                && b.email.includes(email) && b.adress.includes(adress) && b.phoneNamber.filter((e) => e.includes(phoneNamber)).length > 0\r\n        });\r\n        dispatch(SaveResultBusiness(businesses));\r\n    }\r\n\r\n}\r\n// export const AddBusiness = (business) => {\r\n//     return (dispatch) => {\r\n//         axios.post(\"http://localhost:4000/business/\",business).then((succ) => {\r\n//             console.log(succ.data);\r\n//         }).catch(ee => {\r\n//             console.log(ee.massege);\r\n\r\n//         });\r\n//     }\r\n// }\r\nexport const SaveAllBusiness = (business) => {\r\n    return {\r\n        type: actionTypes.FILL_ALL_BUSINESS,\r\n        payload: business\r\n    }\r\n}\r\nexport const SaveResultBusiness = (business) => {\r\n    return {\r\n        type: actionTypes.REFRESH_RESULT_BUSINESS,\r\n        payload: business\r\n    }\r\n}\r\n\r\nexport const SelectedBusiness = (business) => {\r\n    return {\r\n        type: actionTypes.SELECTED_BUSINESS,\r\n        payload: business\r\n    }\r\n}\r\nexport const NoSelectedBusiness = () => {\r\n    return {\r\n        type: actionTypes.SELECTED_BUSINESS,\r\n        payload: null\r\n    }\r\n}\r\nexport const DeleteResultBusiness = () => {\r\n    return {\r\n        type: actionTypes.DELETE_RESULT_BUSINESS,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const ChangeColorName = (name) => {\r\n    return {\r\n        type: actionTypes.CHANGE_COLOR_NAME,\r\n        payload: name\r\n    }\r\n}\r\nexport const ChangeUpdateBuisness = (update) => {\r\n    return {\r\n        type: actionTypes.UPDATE_BUISNESS,\r\n        payload: update\r\n    }\r\n}\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\actions\\users.js",["383","384","385","386"],"import axios from 'axios';\r\nimport * as actionTypes from '../ActionTypes'\r\n\r\nexport const GetAllUsers = () => {\r\n    return (dispatch) => {\r\n        axios.get(\"http://localhost:4000/users\").then(succ => {\r\n            console.log(succ.data);\r\n            dispatch(SaveAllUsers(succ.data));\r\n        }).catch(ee => {\r\n            console.log(ee.massege);\r\n        });\r\n    }\r\n}\r\nexport const GetCurrentUser = (user) => {\r\n    return async (dispatch) => {\r\n        // { params: { password: user.password,mail:user.mail } }\r\n        // let succ = await axios.get(`http://localhost:4000/users/getByPassword/${user.password}&${user.mail}`);\r\n        axios.get(`http://localhost:4000/users/getByPassword/${user.password}&${user.mail}`).then((data, error) => {\r\n            if (data.status == 400)\r\n                console.log(\"kkkkkkkkkkk\");\r\n\r\n            if (data.status == 200)\r\n                dispatch(SignIn(data.data));\r\n        })\r\n\r\n\r\n\r\n    }\r\n}\r\nexport const AddUser = (user) => {\r\n    return (dispatch) => {\r\n        axios.post(\"http://localhost:4000/users\", user).then((succ) => {\r\n            console.log(succ.data);\r\n            if (succ.data != null) {\r\n                dispatch(SignIn(succ.data));\r\n                dispatch(IfExist(false));\r\n                dispatch(ErrorInAdd(false));\r\n            }\r\n\r\n        }).catch(ee => {\r\n            console.log(ee.massege);\r\n            if (ee.response.status == 404) {\r\n                dispatch(IfExist(true));\r\n                dispatch(ErrorInAdd(false));\r\n            }\r\n\r\n            if (ee.response.status == 400) {\r\n                dispatch(ErrorInAdd(true));\r\n                dispatch(IfExist(false));\r\n            }\r\n\r\n        });\r\n    }\r\n}\r\nexport const SearchUsers = (user, allUsers) => {\r\n    return (dispatch) => {\r\n        let firstName = user.firstName || \"\";\r\n        let lastName = user.lastName || \"\";\r\n        let phoneNamber = user.phoneNamber || \"\";\r\n        let email = user.email || \"\";\r\n        let adress = user.adress || \"\";\r\n        let users = allUsers.filter((u) => {\r\n            return u.firstName.includes(firstName) && u.lastName.includes(lastName)\r\n                && u.email.includes(email) && u.adress.includes(adress) && u.phoneNamber.filter((e) => e.includes(phoneNamber)).length > 0\r\n        });\r\n        dispatch(SaveResultUsers(users));\r\n    }\r\n\r\n}\r\n\r\nexport const SaveAllUsers = (users) => {\r\n    return {\r\n        type: actionTypes.FILL_ALL_USERS,\r\n        payload: users\r\n    }\r\n}\r\nexport const SaveResultUsers = (users) => {\r\n    return {\r\n        type: actionTypes.REFRESH_RESULT,\r\n        payload: users\r\n    }\r\n}\r\n\r\nexport const SelectedUser = (user) => {\r\n    return {\r\n        type: actionTypes.SELECTED_USER,\r\n        payload: user\r\n    }\r\n}\r\nexport const NoSelectedUser = () => {\r\n    return {\r\n        type: actionTypes.SELECTED_USER,\r\n        payload: null\r\n    }\r\n}\r\nexport const DeleteResultUser = () => {\r\n    return {\r\n        type: actionTypes.DELETE_RESULT_USER,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const ChangeColorFirstName = (name) => {\r\n    return {\r\n        type: actionTypes.CHANGE_COLOR_FIRST_NAME,\r\n        payload: name\r\n    }\r\n}\r\nexport const ChangeColorLastName = (name) => {\r\n    return {\r\n        type: actionTypes.CHANGE_COLOR_LAST_NAME,\r\n        payload: name\r\n    }\r\n}\r\nexport const SignIn = (user) => {\r\n    return {\r\n        type: actionTypes.SING_IN,\r\n        payload: user\r\n    }\r\n}\r\nexport const SignOut = () => {\r\n    return {\r\n        type: actionTypes.SING_OUT,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const IfExist = (ifExist) => {\r\n    return {\r\n        type: actionTypes.IF_EXIST,\r\n        payload: ifExist\r\n    }\r\n}\r\nexport const ErrorInAdd = (ifErrorInAdd) => {\r\n    return {\r\n        type: actionTypes.IF_ERROR_IN_ADD,\r\n        payload: ifErrorInAdd\r\n    }\r\n}\r\nexport const ChangeIdUserManagerUpdate = (id) => {\r\n    return {\r\n        type: actionTypes.CHANGE_ID_USER_MANAGER_UPDATE,\r\n        payload: id\r\n    }\r\n}","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\AddCategory.js",["387","388","389","390","391","392","393"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../../components/classes/business'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getAllCategories, AddCategory as AddCategoryFunc,UpdateStatusTask } from '../../util/index';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport { ChangeUpdateBuisness } from '../../actions/index';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n}));\r\n\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nfunction AddCategory(props) {\r\n    const { idTask } = useParams();\r\n    // עיצוב\r\n    const classes = useStyles();\r\n\r\n    const [categoriesArr, setCategoriesArr] = useState([]);\r\n\r\n    // משתנה להוספה \r\n    let category = {};\r\n\r\n    // טופס\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const name = register('name', { minLength: { value: 2, message: \"Min 2\" } })\r\n\r\n    // פונקצית העדכון\r\n    const onSubmit = async data => {\r\n        AddCategoryFunc(data).then(succ => {\r\n\r\n            UpdateStatusTask(idTask,true);\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"Add Success\");\r\n            handleClick();\r\n\r\n        }).catch(error => {\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const onKeyUp = (e, type) => {\r\n        category[type] = e.target.value;\r\n    }\r\n\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n    useEffect(() => {\r\n\r\n        getAllCategories().then((succ) => {\r\n            setCategoriesArr(succ.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n            </Snackbar>\r\n            {<form className={classes.form} noValidate onSubmit={handleSubmit(() => onSubmit(category))}>\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <h3>קטגוריות בשימוש</h3>\r\n                        {categoriesArr && categoriesArr.map((category) => <p>{category.name}</p>)}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            autoComplete=\"fname\"\r\n                            name=\"name\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            onKeyUp={(e) => onKeyUp(e, \"name\")}\r\n                            {...name}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}>\r\n                    Add\r\n                </Button>\r\n\r\n            </form>}\r\n        </>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {};\r\n}\r\nexport default connect(mapStateToProps, {})(AddCategory);\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\User.js",["394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421"],"import { connect } from \"react-redux\";\r\nimport './User.scss';\r\nimport { SelectedUser, ChangeColorFirstName, ChangeColorLastName } from '../../actions/index';\r\nimport { useRef, useEffect } from \"react\";\r\nimport ico from './img/alex.png';\r\nimport React, { useState } from 'react';\r\nimport { AddHistory, GetImage } from '../../util/index';\r\nimport { Button, Image, Modal, List } from 'semantic-ui-react';\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\r\nimport { SendMail, GetCurrentUser } from '../../util';\r\n\r\n\r\nconst User = (props) => {\r\n    const { url, path } = useRouteMatch();\r\n\r\n    let indexName = props.user.firstName.indexOf(props.ColorFirstName);\r\n    let start = props.user.firstName.substring(0, indexName);\r\n    let end = props.user.firstName.substring(indexName + props.ColorFirstName.length, props.user.firstName.length);\r\n    let indexLastName = props.user.lastName.indexOf(props.ColorLastName);\r\n    let Laststart = props.user.lastName.substring(0, indexLastName);\r\n    let Lastend = props.user.lastName.substring(indexLastName + props.ColorLastName.length, props.user.lastName.length);\r\n    const checkName = (name) => {\r\n        return name[0] >= 'A' && name[0] <= 'Z' || name[0] >= 'a' && name[0] <= 'z';\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, []);\r\n\r\n    function myFunction() {\r\n        var myWindow = window.open(url + \"/TasksUpdataUser/\" + props.user._id, \"UpdataUser\", \"width=400,height=300\");\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const SendMailFunc = (user) => {\r\n\r\n        GetCurrentUser().then(succ => {\r\n\r\n            let mail = {\r\n                toUser: user.email,\r\n                subject: `${succ.data.firstName + \" \" + succ.data.lastName} חיפש אותך `,\r\n                text: `<div>לשליחת מייל ${succ.data.email}</div> `\r\n            }\r\n\r\n            SendMail(mail);\r\n        })\r\n\r\n\r\n\r\n    }\r\n    return (\r\n        <List.Item key={props.user._id}>\r\n            <List.Content floated='right'>\r\n                <Modal\r\n                    onClose={() => setOpen(false)}\r\n                    onOpen={() => setOpen(true)}\r\n                    open={open}\r\n                    trigger={<div ><div className=\"place_user\" onClick={() => {\r\n\r\n                        props.SelectedUser(props.user);\r\n\r\n                        if (props.ifAdd == \"true\")\r\n                            AddHistory(localStorage.getItem(\"currentUserId\"), props.user._id);\r\n\r\n                        if (props.user.ifMessege) {\r\n                            console.log(props.user.ifMessege);\r\n                            SendMailFunc(props.user);\r\n                        }\r\n\r\n                    }}>\r\n                        <div><img></img></div>\r\n                        <p className=\"display\">{checkName(props.user.lastName) ? Laststart : Lastend}</p>\r\n                        {!checkName(props.user.lastName) && (Lastend[0] == ' ' || props.ColorLastName[props.ColorLastName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n                        {checkName(props.user.firstName) && (Laststart[Laststart.length - 1] == ' ' || props.ColorLastName[props.ColorLastName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                        <p className=\"color_name display\">{props.ColorLastName}</p>\r\n                        {!checkName(props.user.lastName) && (Laststart[Laststart.length - 1] == ' ' || props.ColorLastName[props.ColorLastName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n                        {checkName(props.user.lastName) && (Lastend[0] == ' ' || props.ColorLastName[props.ColorLastName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                        <p className=\"display\">{checkName(props.user.lastName) ? Lastend : Laststart}</p>\r\n                        <p className=\"display\">&nbsp;</p>\r\n                        <p className=\"display\">{checkName(props.user.firstName) ? start : end}</p>\r\n\r\n                        {checkName(props.user.lastName) && (start[start.length - 1]) == ' ' ? <p className=\"display\">&nbsp;</p> : null}\r\n                        {!checkName(props.user.lastName) && (end[0] == ' ' || props.ColorFirstName[props.ColorFirstName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                        <p className=\"color_name display\">{props.ColorFirstName}</p>\r\n                        {checkName(props.user.lastName) && (end[0] == ' ' || props.ColorFirstName[props.ColorFirstName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n                        {!checkName(props.user.lastName) && (start[start.length - 1]) == ' ' ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                        <p className=\"display\">{checkName(props.user.firstName) ? end : start}</p>\r\n                        <img className=\"img_ico\" alt=\"Avatar\" src={props.user.img ? props.user.img : ico}></img>\r\n                    </div>\r\n\r\n                    </div>}\r\n                >\r\n                    <div className=\"div_content\">\r\n\r\n                        <div className=\"name_user\">\r\n                            <p className=\"place_name\">{props.user.firstName} {props.user.lastName}</p>\r\n                        </div>\r\n                        <div className=\"img_user\">\r\n                            <Image size='medium' src={props.user.img ? props.user.img : ico} wrapped className=\"place_img\" />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <Modal.Actions>\r\n                        <div>\r\n                            <div className=\"div-ico\" data-tooltip=\"הוסף לאנשי קשר\">\r\n                                <i class=\"user plus icon i\" ></i>\r\n                            </div>\r\n                            <div className=\"div-ico\" data-tooltip=\"דווח על תקלה\">\r\n                                <i class=\"exclamation triangle icon\" onClick={myFunction}></i>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Modal.Actions>\r\n\r\n                    <h2 className=\"place_detailes\">\r\n\r\n                        <div className=\"div_all\">\r\n                            <i class=\"phone icon\"></i>\r\n                            <div className=\"place_div\">\r\n                                <p> {props.user.phoneNamber}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"div_all\">\r\n                            <div className=\"place_div\">\r\n                                <i class=\"envelope icon\"></i>\r\n                                <p><a href=\"mailto:abc@example.com?subject = Feedback&body = Message\">{props.user.email}</a></p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"div_all\">\r\n                            <i class=\"map marker alternate icon\"></i>\r\n                            <div className=\"place_div\"> <p> {props.user.adress}</p> </div>\r\n                        </div>\r\n                    </h2>\r\n                </Modal>\r\n            </List.Content>\r\n        </List.Item>\r\n        // style={{ textDecoration: 'none', color: 'black' }}\r\n\r\n    );\r\n    // </Link>\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { ColorFirstName: state.usersPart.ColorFirstName, ColorLastName: state.usersPart.ColorLastName };\r\n}\r\nexport default connect(mapStateToProps, { SelectedUser, ChangeColorFirstName, ChangeColorLastName })(User);\r\n\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\search\\Business.js",["422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440"],"import { connect } from \"react-redux\";\r\nimport './Business.scss';\r\nimport { SelectedBusiness, ChangeColorName } from '../../actions/index';\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\r\nimport { Button, Image, Modal, List } from 'semantic-ui-react';\r\nimport ico from './img/alex.png';\r\nimport { AddHistoryBusiness } from '../../util/index';\r\nimport { FromAddress } from '../../util/index'\r\nimport MyLocation from \"./MyLocation\";\r\nimport UpdataBusiness from '../Tasks/UpdataBusiness'\r\n\r\n\r\nconst Business = (props) => {\r\n\r\n\r\n    const { url, path } = useRouteMatch();\r\n\r\n\r\n    const [Cenetr, SetCenetr] = useState(null);\r\n    const [Txt, SetTxt] = useState(null);\r\n    const [Zoom, SetZoom] = useState(20);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    let indexName = props.business.name.indexOf(props.ColorName);\r\n    let start = props.business.name.substring(0, indexName);\r\n    let end = props.business.name.substring(indexName + props.ColorName.length, props.business.name.length);\r\n    const checkName = (name) => {\r\n        return name[0] >= 'A' && name[0] <= 'Z' || name[0] >= 'a' && name[0] <= 'z';\r\n    }\r\n    useEffect(() => {\r\n\r\n\r\n        FromAddress(props.business.adress).then(response => {\r\n\r\n            const { lat, lng } = response.results[0].geometry.location;\r\n            console.log(lat + \" \" + lng);\r\n            console.log(response.results[0]);\r\n\r\n            SetCenetr({ lat: lat, lng: lng });\r\n            SetTxt(response.results[0].address_components[0].long_name);\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n\r\n\r\n    }, []);\r\n    function myFunction() {\r\n        var myWindow = window.open(url+\"/TasksUpdataBusiness/\"+props.business._id, \"updataBusiness\", \"width=400,height=300\");\r\n    }\r\n\r\n    return (\r\n        <List.Item key={props.business._id}>\r\n            <List.Content floated='right'>\r\n                <Modal\r\n                    onClose={() => setOpen(false)}\r\n                    onOpen={() => setOpen(true)}\r\n                    open={open}\r\n                    trigger={<div>\r\n                        <div className=\"place_business\" onClick={() => {\r\n                            props.SelectedBusiness(props.business)\r\n                            if (props.ifAdd == \"true\")\r\n                                AddHistoryBusiness(localStorage.getItem(\"currentUserId\"), props.business._id);  \r\n                        }}>\r\n                            <p className=\"display\">&nbsp;</p>\r\n                            <p className=\"display\">{checkName(props.business.name) ? start : end}</p>\r\n                            {!checkName(props.business.name) && (end[0] == ' ' || props.ColorName[props.ColorName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                            <p className=\"color_name display\">{props.ColorName}</p>\r\n                            {checkName(props.business.name) && (end[0] == ' ' || props.ColorName[props.ColorName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                            <p className=\"display\">{checkName(props.business.name) ? end : start}</p>\r\n                            <img className=\"img_ico\" src={ico}></img>\r\n                        </div>\r\n                    </div>}\r\n                >\r\n                    <div className=\"div_content\">\r\n                        <div className=\"name_business\">\r\n                            <p className=\"place_name\">{props.business.name}</p>\r\n                        </div>\r\n                        <div className=\"img_business\">\r\n                            <Image size='medium' src={ico} wrapped className=\"place_img\" />\r\n                        </div>\r\n                    </div>\r\n                    <Modal.Actions>\r\n                        <div>\r\n                            <div className=\"div-ico\" data-tooltip=\"הוסף לאנשי קשר\">\r\n                                <i class=\"user plus icon i\" ></i>\r\n                            </div>\r\n                            <div className=\"div-ico\" data-tooltip=\"דווח על תקלה\">\r\n                                <i class=\"exclamation triangle icon\" onClick={myFunction}></i>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Modal.Actions>\r\n\r\n                    <h2 className=\"place_detailes\">\r\n\r\n                        <div className=\"div_all\">\r\n                            <i class=\"phone icon\"></i>\r\n                            <div className=\"place_div\">\r\n                                <p> {props.business.phoneNamber}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"div_all\">\r\n                            <div className=\"place_div\">\r\n                                <i class=\"envelope icon\"></i>\r\n                                <p><a href=\"mailto:abc@example.com?subject = Feedback&body = Message\">{props.business.email}</a></p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"div_all\">\r\n                            <i class=\"map marker alternate icon\"></i>\r\n                            <div className=\"place_div\"> <p> {props.business.adress}</p></div>\r\n\r\n                        </div>\r\n\r\n                    </h2>\r\n                    {Cenetr && Zoom && Txt && <MyLocation center={Cenetr} zoom={Zoom} txt={Txt} />}\r\n                </Modal>\r\n            </List.Content>\r\n        </List.Item>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { ColorName: state.businessPart.ColorName };\r\n}\r\nexport default connect(mapStateToProps, { SelectedBusiness, ChangeColorName })(Business);\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Histories\\Buisness.js",["441","442","443","444","445","446","447","448"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Users.scss';\r\nimport Business from \"../../search/Business\";\r\nimport { GetCurrentUser, DeleteHistoryBusiness } from '../../../util/index';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n    style: {\r\n        maxWidth: \"32%\"\r\n    }\r\n}));\r\n\r\nconst Buisness = (props) => {\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    const [secondary, setSecondary] = React.useState(false);\r\n\r\n    const GetCuccentUserFunc = async () => {\r\n\r\n        GetCurrentUser().then(succ => setCurrentUser(succ.data)).catch(() => setifGoToLogin(true));\r\n    }\r\n\r\n    const DeleteHistoryFunc = async (index) => {\r\n        DeleteHistoryBusiness(index).then(succ => {\r\n            if (succ.status == 200)\r\n                GetCuccentUserFunc();\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        GetCuccentUserFunc();\r\n\r\n    }, []);\r\n\r\n    return (<>\r\n        {currentUser ?\r\n            <>\r\n                <Grid item xs={12} md={6}>\r\n                    <div className={classes.demo}>\r\n                        <List>\r\n                            {\r\n                                currentUser.lastSearchBusiness.map((item, index) => {\r\n                                    if (index < 10 && item.businessSearch)\r\n                                        return (item.businessSearch && <ListItem>\r\n                                            <ListItemAvatar>\r\n                                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => DeleteHistoryFunc(index)}>\r\n                                                    <DeleteIcon style={{ \"font-size\": \"1.5em\" }} />\r\n                                                </IconButton>\r\n\r\n                                            </ListItemAvatar>\r\n                                            {/* <p>{item.date}</p> */}\r\n                                            <ListItemText\r\n                                                primary={<Business ifAdd=\"false\" business={item.businessSearch} key={index} />}\r\n                                                secondary={secondary ? 'Secondary text' : null}\r\n                                            />\r\n                                        </ListItem>)\r\n                                })\r\n                            }\r\n                        </List>\r\n                    </div>\r\n                </Grid>\r\n            </>\r\n            : null}\r\n\r\n    </>);\r\n}\r\n\r\nexport default Buisness;\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Manager\\UpdateBuisnesOfManager.js",["449","450","451","452","453","454"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../../components/classes/business'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getAllCategories, UpdateBuisnessFunc, GetCurrentBuisness,UpdateStatusTask } from '../../util/index';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport { ChangeUpdateBuisness } from '../../actions/index';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useParams } from 'react-router-dom'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n}));\r\n\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nfunction UpdateBuisnesOfManager(props) {\r\n\r\n    // עיצוב\r\n    const classes = useStyles();\r\n\r\n    const [currentBuisness, setcurrentBuisness] = useState(null);\r\n\r\n    // const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n\r\n    let listCategory = useRef([]);\r\n    const [categoriesArr, setCategoriesArr] = useState([]);\r\n    const [ifSelect, setIfSelect] = useState(false);\r\n\r\n    const { id,idTask } = useParams();\r\n\r\n\r\n    // משתנה לעדכון \r\n    let updateBuisness = new business();\r\n\r\n    // טופס\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const name = register('name', { minLength: { value: 2, message: \"Min 2\" } })\r\n    const email = register('email', { pattern: { value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, message: \"Email No Valid\" } })\r\n    const phone = register('phone', { pattern: { value: /0[0-9]{9}/, message: \"Phone No Valid\" } })\r\n    const adress = register('adress');\r\n\r\n\r\n\r\n    // לא לשכוח\r\n    // this.img = \"\";\r\n    // this.advertising = \"\";\r\n\r\n\r\n\r\n    // פונקצית העדכון\r\n    const onSubmit = async data => {\r\n\r\n        updateBuisness.listCategory = listCategory.current.getSelectedItems();\r\n\r\n        UpdateBuisnessFunc(currentBuisness._id, data).then(succ => {\r\n            UpdateStatusTask(idTask,true);\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"Updating Success\");\r\n            handleClick();\r\n\r\n        }).catch(error => {\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    const onKeyUp = (e, type) => {\r\n        updateBuisness[type] = e.target.value;\r\n        e.target.value = updateBuisness[type];\r\n        if (updateBuisness[type] == '')\r\n            updateBuisness[type] = null;\r\n    }\r\n\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n    useEffect(() => {\r\n\r\n        GetCurrentBuisness(id).then(succ => {\r\n            setcurrentBuisness(succ.data)\r\n        });\r\n\r\n        getAllCategories().then((succ) => {\r\n            let arrName = succ.data.map((data) => data.name);\r\n            setCategoriesArr(arrName);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n            </Snackbar>\r\n            {currentBuisness && <form className={classes.form} noValidate onSubmit={handleSubmit(() => onSubmit(updateBuisness))}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            autoComplete=\"fname\"\r\n                            name=\"name\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            defaultValue={currentBuisness.name}\r\n                            onKeyUp={(e) => onKeyUp(e, \"name\")}\r\n                            {...name}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"name\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            defaultValue={currentBuisness.email}\r\n                            onKeyUp={(e) => onKeyUp(e, \"email\")}\r\n                            {...email}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"email\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n                        {props.ifExist ? <p className=\"redColor\">This Email Alrady Exist</p> : null}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Multiselect\r\n                            onSelect={(e) => setIfSelect(false)}\r\n                            label=\"Category\"\r\n                            name=\"category\"\r\n                            options={categoriesArr ? categoriesArr : []}\r\n                            isObject={false}\r\n                            ref={listCategory} type=\"text\"\r\n                            selectedValues={currentBuisness.listCategory}\r\n                        />\r\n                        {ifSelect && <p className=\"redColor\">This is required.</p>}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"phone\"\r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            autoComplete=\"phone\"\r\n                            defaultValue={currentBuisness.phoneNamber}\r\n                            onKeyUp={(e) => onKeyUp(e, \"phoneNamber\")}\r\n\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"phone\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            autoComplete=\"fname\"\r\n                            name=\"address\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"address\"\r\n                            label=\"Address\"\r\n                            defaultValue={currentBuisness.adress}\r\n                            onKeyUp={(e) => onKeyUp(e, \"adress\")}\r\n                            {...adress}\r\n                        />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}>\r\n                    Update\r\n          </Button>\r\n\r\n            </form>}\r\n        </>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { updateBuisness: state.businessPart.updateBuisness };\r\n}\r\nexport default connect(mapStateToProps, { ChangeUpdateBuisness })(UpdateBuisnesOfManager);\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Histories\\Users.js",["455","456","457","458","459","460","461","462"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Users.scss'\r\nimport { GetCurrentUser, DeleteHistoryUsers } from '../../../util/index';\r\nimport User from \"../../search/User\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n    style: {\r\n        maxWidth: \"32%\"\r\n    }\r\n}));\r\n\r\nconst Users = (props) => {\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    // const [dense, setDense] = React.useState(false);\r\n    const [secondary, setSecondary] = React.useState(false);\r\n\r\n    const GetCuccentUserFunc = async () => {\r\n\r\n        GetCurrentUser().then(succ => setCurrentUser(succ.data)).catch(() => setifGoToLogin(true));\r\n\r\n    }\r\n    const DeleteHistoryFunc = async (index) => {\r\n\r\n        DeleteHistoryUsers(index).then(succ => {\r\n            if (succ.status == 200)\r\n                GetCuccentUserFunc();\r\n        })\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetCuccentUserFunc();\r\n    }, []);\r\n\r\n    return (<>\r\n        {currentUser ?\r\n            <>\r\n                <Grid item xs={12} md={6}>\r\n                    <div className={classes.demo}>\r\n                        <List>\r\n                            {\r\n                                currentUser.lastSearchUsers.map((item, index) => {\r\n                                    if (index < 10 && item.userSearch)\r\n                                        return (<ListItem>\r\n                                            <ListItemAvatar>\r\n                                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => DeleteHistoryFunc(index)}>\r\n                                                    <DeleteIcon style={{ \"font-size\": \"1.5em\" }} />\r\n                                                </IconButton>\r\n\r\n                                            </ListItemAvatar>\r\n                                            {/* <p>{item.date}</p> */}\r\n                                            <ListItemText\r\n                                                primary={<User ifAdd=\"false\" user={item.userSearch} key={index} />}\r\n                                                secondary={secondary ? 'Secondary text' : null}\r\n                                            />\r\n                                        </ListItem>)\r\n                                })\r\n                            }\r\n                        </List>\r\n                    </div>\r\n                </Grid>\r\n            </>\r\n            : null}\r\n\r\n    </>);\r\n}\r\n\r\nexport default Users;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import List from '@material-ui/core/List';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\n// import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import FormGroup from '@material-ui/core/FormGroup';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import FolderIcon from '@material-ui/icons/Folder';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//     maxWidth: 752,\r\n//   },\r\n//   demo: {\r\n//     backgroundColor: theme.palette.background.paper,\r\n//   },\r\n//   title: {\r\n//     margin: theme.spacing(4, 0, 2),\r\n//   },\r\n// }));\r\n\r\n// function generate(element) {\r\n//   return [0, 1, 2].map((value) =>\r\n//     React.cloneElement(element, {\r\n//       key: value,\r\n//     }),\r\n//   );\r\n// }\r\n\r\n// export default function InteractiveList() {\r\n//   const classes = useStyles();\r\n//   const [dense, setDense] = React.useState(false);\r\n//   const [secondary, setSecondary] = React.useState(false);\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <FormGroup row>\r\n//         <FormControlLabel\r\n//           control={\r\n//             <Checkbox checked={dense} onChange={(event) => setDense(event.target.checked)} />\r\n//           }\r\n//           label=\"Enable dense\"\r\n//         />\r\n//         <FormControlLabel\r\n//           control={\r\n//             <Checkbox\r\n//               checked={secondary}\r\n//               onChange={(event) => setSecondary(event.target.checked)}\r\n//             />\r\n//           }\r\n//           label=\"Enable secondary text\"\r\n//         />\r\n//       </FormGroup>\r\n//       <Grid container spacing={2}>\r\n//         <Grid item xs={12} md={6}>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             Text only\r\n//           </Typography>\r\n//           <div className={classes.demo}>\r\n//             <List dense={dense}>\r\n//               {generate(\r\n//                 <ListItem>\r\n//                   <ListItemText\r\n//                     primary=\"Single-line item\"\r\n//                     secondary={secondary ? 'Secondary text' : null}\r\n//                   />\r\n//                 </ListItem>,\r\n//               )}\r\n//             </List>\r\n//           </div>\r\n//         </Grid>\r\n//         <Grid item xs={12} md={6}>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             Icon with text\r\n//           </Typography>\r\n//           <div className={classes.demo}>\r\n//             <List dense={dense}>\r\n//               {generate(\r\n//                 <ListItem>\r\n//                   <ListItemIcon>\r\n//                     <FolderIcon />\r\n//                   </ListItemIcon>\r\n//                   <ListItemText\r\n//                     primary=\"Single-line item\"\r\n//                     secondary={secondary ? 'Secondary text' : null}\r\n//                   />\r\n//                 </ListItem>,\r\n//               )}\r\n//             </List>\r\n//           </div>\r\n//         </Grid>\r\n//       </Grid>\r\n//       <Grid container spacing={2}>\r\n//         <Grid item xs={12} md={6}>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             Avatar with text\r\n//           </Typography>\r\n//           <div className={classes.demo}>\r\n//             <List dense={dense}>\r\n//               {generate(\r\n//                 <ListItem>\r\n//                   <ListItemAvatar>\r\n//                     <Avatar>\r\n//                       <FolderIcon />\r\n//                     </Avatar>\r\n//                   </ListItemAvatar>\r\n//                   <ListItemText\r\n//                     primary=\"Single-line item\"\r\n//                     secondary={secondary ? 'Secondary text' : null}\r\n//                   />\r\n//                 </ListItem>,\r\n//               )}\r\n//             </List>\r\n//           </div>\r\n//         </Grid>\r\n//         <Grid item xs={12} md={6}>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             Avatar with text and icon\r\n//           </Typography>\r\n//           <div className={classes.demo}>\r\n//             <List dense={dense}>\r\n//               {generate(\r\n//                 <ListItem>\r\n//                   <ListItemAvatar>\r\n//                     <Avatar>\r\n//                       <FolderIcon />\r\n//                     </Avatar>\r\n//                   </ListItemAvatar>\r\n//                   <ListItemText\r\n//                     primary=\"Single-line item\"\r\n//                     secondary={secondary ? 'Secondary text' : null}\r\n//                   />\r\n//                   <ListItemSecondaryAction>\r\n//                     <IconButton edge=\"end\" aria-label=\"delete\">\r\n//                       <DeleteIcon />\r\n//                     </IconButton>\r\n//                   </ListItemSecondaryAction>\r\n//                 </ListItem>,\r\n//               )}\r\n//             </List>\r\n//           </div>\r\n//         </Grid>\r\n//       </Grid>\r\n//     </div>\r\n//   );\r\n// }","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdateBuisness\\ListBuisness.js",["463","464","465"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ChangeUpdateBuisness } from '../../../actions/index';\r\nimport { connect } from \"react-redux\";\r\nimport { GetCurrentBuisness, GetAllBuisnessOfUser } from '../../../util/index';\r\nimport UpdateBuisness from './UpdateBuisnes';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nfunction ListBuisness(props) {\r\n    const classes = useStyles();\r\n    const [secondary, setSecondary] = React.useState(false);\r\n    const [listBuisness, setlistBuisness] = React.useState([]);\r\n\r\n\r\n    const GetCurrentBuisnessFunc = () => {\r\n\r\n        GetAllBuisnessOfUser().then(data => {\r\n            console.log(data.data);\r\n            setlistBuisness(data.data);\r\n            if (props.updateBuisness == null)\r\n                props.ChangeUpdateBuisness(data.data[0]);\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n\r\n        });\r\n\r\n    }\r\n    const ChangeUpdateBuisness = (id) => {\r\n\r\n        GetCurrentBuisness(id).then(data => {\r\n            props.ChangeUpdateBuisness(data.data);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        GetCurrentBuisnessFunc();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {listBuisness.length > 0 ? <Grid container spacing={2}>\r\n                <Grid item xs={9} md={8}>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n\r\n                    </Typography>\r\n                    <div className={classes.demo}>\r\n                        <List>\r\n                            {listBuisness && listBuisness.map((item, index) => {\r\n                                return (\r\n                                    <>\r\n                                        <ListItem onClick={() => ChangeUpdateBuisness(item._id)}>\r\n                                            <ListItemAvatar>\r\n                                                <IconButton edge=\"end\" >\r\n                                                    <Avatar>\r\n                                                    </Avatar>\r\n                                                </IconButton>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText\r\n                                                primary={item.name}\r\n                                                secondary={secondary ? 'Secondary text' : null}\r\n                                            />\r\n                                        </ListItem>\r\n                                        <UpdateBuisness GetAllBuisnessOfUser={GetCurrentBuisnessFunc} id={item._id} /></>\r\n\r\n                                )\r\n                            })}\r\n                        </List>\r\n                    </div>\r\n                </Grid>\r\n\r\n            </Grid> : null}\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { updateBuisness: state.businessPart.updateBuisness };\r\n}\r\nexport default connect(mapStateToProps, { ChangeUpdateBuisness })(ListBuisness);","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdateBuisness\\UpdateBuisnes.js",["466","467","468","469","470","471","472","473","474","475"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../../classes/business'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getAllCategories, UpdateBuisnessFunc } from '../../../util/index';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport { ChangeUpdateBuisness } from '../../../actions/index';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n}));\r\n\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nfunction UpdateBuisness(props) {\r\n\r\n    // עיצוב\r\n    const classes = useStyles();\r\n\r\n    const [currentBuisness, setcurrentBuisness] = useState(null);\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n\r\n    let listCategory = useRef([]);\r\n    const [categoriesArr, setCategoriesArr] = useState([]);\r\n    const [ifSelect, setIfSelect] = useState(false);\r\n\r\n    // משתנה לעדכון \r\n    let updateBuisness = new business();\r\n\r\n    // טופס\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const name = register('name', { minLength: { value: 2, message: \"Min 2\" } })\r\n    const email = register('email', { pattern: { value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, message: \"Email No Valid\" } })\r\n    const phone = register('phone', { pattern: { value: /0[0-9]{9}/, message: \"Phone No Valid\" } })\r\n    const adress = register('adress');\r\n\r\n\r\n\r\n    // לא לשכוח\r\n    // this.img = \"\";\r\n    // this.advertising = \"\";\r\n\r\n\r\n\r\n    // פונקצית העדכון\r\n    const onSubmit = async data => {\r\n\r\n        updateBuisness.listCategory = listCategory.current.getSelectedItems();\r\n\r\n        UpdateBuisnessFunc(props.updateBuisness._id, data).then(succ => {\r\n\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"Updating Success\");\r\n            handleClick();\r\n            props.GetAllBuisnessOfUser();\r\n\r\n        }).catch(error => {\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    const onKeyUp = (e, type) => {\r\n        updateBuisness[type] = e.target.value;\r\n        e.target.value = updateBuisness[type];\r\n        if (updateBuisness[type] == '')\r\n            updateBuisness[type] = null;\r\n    }\r\n\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n    useEffect(() => {\r\n\r\n        getAllCategories().then((succ) => {\r\n            let arrName = succ.data.map((data) => data.name);\r\n            setCategoriesArr(arrName);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        }); \r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n            </Snackbar>\r\n            {props.updateBuisness && props.updateBuisness._id == props.id && <form className={classes.form} noValidate onSubmit={handleSubmit(() => onSubmit(updateBuisness))}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            autoComplete=\"fname\"\r\n                            name=\"name\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            defaultValue={props.updateBuisness.name}\r\n                            onKeyUp={(e) => onKeyUp(e, \"name\")}\r\n                            {...name}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"name\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            defaultValue={props.updateBuisness.email}\r\n                            onKeyUp={(e) => onKeyUp(e, \"email\")}\r\n                            {...email}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"email\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n                        {props.ifExist ? <p className=\"redColor\">This Email Alrady Exist</p> : null}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Multiselect\r\n                            onSelect={(e) => setIfSelect(false)}\r\n                            label=\"Category\"\r\n                            name=\"category\"\r\n                            options={categoriesArr ? categoriesArr : []}\r\n                            isObject={false}\r\n                            ref={listCategory} type=\"text\"\r\n                            selectedValues={props.updateBuisness.listCategory}\r\n                        />\r\n                        {ifSelect && <p className=\"redColor\">This is required.</p>}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"phone\"\r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            autoComplete=\"phone\"\r\n                            defaultValue={props.updateBuisness.phoneNamber}\r\n                            onKeyUp={(e) => onKeyUp(e, \"phoneNamber\")}\r\n                           \r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"phone\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            autoComplete=\"fname\"\r\n                            name=\"address\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"address\"\r\n                            label=\"Address\"\r\n                            defaultValue={props.updateBuisness.adress}\r\n                            onKeyUp={(e) => onKeyUp(e, \"adress\")}\r\n                            {...adress}\r\n                        />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}>\r\n                    Update\r\n          </Button>\r\n              \r\n            </form>}\r\n        </>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { updateBuisness: state.businessPart.updateBuisness };\r\n}\r\nexport default connect(mapStateToProps, { ChangeUpdateBuisness })(UpdateBuisness);\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Tasks.js",["476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../../components/classes/business'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { Redirect, useRouteMatch, Link, Route, Switch } from 'react-router-dom';\r\nimport { GetCurrentUser, GetTaskByUserId } from '../../util/index';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport { ChangeUpdateBuisness } from '../../actions/index';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useParams } from 'react-router-dom'\r\nimport AddCtegory from '../Tasks/AddCtegory'\r\nimport AddUser from '../Tasks/AddUser';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n}));\r\n\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nfunction Tasks(props) {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [tasksArr, settasksArr] = useState([]);\r\n\r\n    const { url, path } = useRouteMatch();\r\n    // עיצוב\r\n    const classes = useStyles();\r\n\r\n    // טופס\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const name = register('name', { minLength: { value: 2, message: \"Min 2\" } })\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n    useEffect(() => {\r\n        GetCurrentUser().then(succ => {\r\n            setCurrentUser(succ.data);\r\n            GetTaskByUserId(succ.data._id).then((item) => {\r\n                settasksArr(item.data);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n            </Snackbar>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <h3>הפניות שלך</h3>\r\n                    {tasksArr && tasksArr.map((task) => <><p>נושא:{task.type.name}</p>\r\n                        <p>תאור:{task.desription}</p>\r\n                        <p>תאריך:{task.date}</p>\r\n                        <p>טופל:{task.status}</p></>)}\r\n                </Grid>\r\n            </Grid>\r\n            <h3>פניה חדשה</h3>\r\n            <Link to={`${url}/addUser`}>הוספת משתמש</Link>\r\n            <br />\r\n            <Link to={`${url}/addCategory`}>הוספת קטגוריה</Link>\r\n            <Switch>\r\n                <Route path={`${path}/addUser`}>\r\n                     <AddUser/>\r\n                </Route>\r\n                <Route path={`${path}/addCategory`}>\r\n                    <AddCtegory />\r\n                </Route>\r\n            </Switch>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {};\r\n}\r\nexport default connect(mapStateToProps, {})(Tasks);\r\n\r\n","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\AddCtegory.js",["493","494","495","496"],"import React, { useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AddTask, GetAllTypeTsks } from '../../util/index';\r\nimport task from '../classes/task';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { useParams } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nconst AddCtegory = (props) => {\r\n\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const category = register('category', { required: \"This is required.\", minLength: { value: 5, message: \"Min 5\" } })\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    let Task = new task();\r\n\r\n    const AddTaskFunc = async (data) => {\r\n        Task.date = new Date();\r\n\r\n        Task.codeUser = localStorage.getItem(\"currentUserId\");\r\n\r\n        let all = await GetAllTypeTsks();\r\n        Task.type = all.data.find((type) => type.code ==2)._id;\r\n\r\n        Task.otherbuisness = null;\r\n        Task.status = false;\r\n        Task.desription = data.category;\r\n        Task.otherUser = null;\r\n\r\n        AddTask(Task).then((succ) => {\r\n\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"נשלח בהצלחה\");\r\n            handleClick();\r\n\r\n\r\n        }).catch((error) => {\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n\r\n        });\r\n        console.log(Task);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, [])\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n\r\n\r\n    // alerts\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (<>\r\n\r\n\r\n        {/* alerts */}\r\n\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n        </Snackbar>\r\n\r\n        {/* alerts */}\r\n\r\n\r\n        <div>\r\n            <form noValidate onSubmit={handleSubmit(AddTaskFunc)}>\r\n                <TextField\r\n                    label=\"Dense\"\r\n                    id=\"outlined-margin-dense\"\r\n                    className={classes.textField}\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"category\"\r\n                    {...category}\r\n                />\r\n                <ErrorMessage errors={errors} name=\"category\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                    הגש בקשה\r\n      </Button>\r\n            </form>\r\n        </div></>);\r\n}\r\n\r\nexport default AddCtegory;","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Tasks\\AddUser.js",["497","498","499","500"],"import React, { useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AddTask, GetAllTypeTsks } from '../../util/index';\r\nimport task from '../classes/task';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { useParams } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nconst AddUser = (props) => {\r\n\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const mail = register('mail', { required: \"This is required.\" })\r\n\r\n    const classes = useStyles();\r\n\r\n    let Task = new task();\r\n\r\n    const AddTaskFunc = async (data) => {\r\n        Task.date = new Date();\r\n\r\n        Task.codeUser = localStorage.getItem(\"currentUserId\");\r\n\r\n        let all = await GetAllTypeTsks();\r\n        Task.type = all.data.find((type) => type.code ==3)._id;\r\n\r\n        Task.otherbuisness = null;\r\n        Task.status = false;\r\n        Task.desription = \"הוסף את המשתמש עם המייל:\"+data.mail;\r\n        Task.otherUser = null;\r\n        Task.mail=data.mail;\r\n\r\n        AddTask(Task).then((succ) => {\r\n\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"נשלח בהצלחה\");\r\n            handleClick();\r\n\r\n\r\n        }).catch((error) => {\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n            handleClick();\r\n\r\n        });\r\n        console.log(Task);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, [])\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n\r\n\r\n    // alerts\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (<>\r\n\r\n\r\n        {/* alerts */}\r\n\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n        </Snackbar>\r\n\r\n        {/* alerts */}\r\n\r\n\r\n        <div>\r\n            <form noValidate onSubmit={handleSubmit(AddTaskFunc)}>\r\n                <TextField\r\n                    label=\"Dense\"\r\n                    id=\"outlined-margin-dense\"\r\n                    className={classes.textField}\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    name=\"mail\"\r\n                    {...mail}\r\n                />\r\n                <ErrorMessage errors={errors} name=\"mail\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n                \r\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                    הגש בקשה\r\n      </Button>\r\n            </form>\r\n        </div></>);\r\n}\r\n\r\nexport default AddUser;","D:\\תכנות\\שעורי בית\\שנה ב\\Project\\endProject\\Project\\Client\\src\\components\\Heder.js",["501","502","503","504","505"],{"ruleId":"506","replacedBy":"507"},{"ruleId":"508","replacedBy":"509"},{"ruleId":"510","severity":1,"message":"511","line":5,"column":8,"nodeType":"512","messageId":"513","endLine":5,"endColumn":17},{"ruleId":"510","severity":1,"message":"514","line":7,"column":8,"nodeType":"512","messageId":"513","endLine":7,"endColumn":18},{"ruleId":"510","severity":1,"message":"515","line":4,"column":8,"nodeType":"512","messageId":"513","endLine":4,"endColumn":19},{"ruleId":"510","severity":1,"message":"516","line":5,"column":8,"nodeType":"512","messageId":"513","endLine":5,"endColumn":22},{"ruleId":"517","severity":1,"message":"518","line":51,"column":15,"nodeType":"519","endLine":62,"endColumn":6},{"ruleId":"520","severity":1,"message":"521","line":72,"column":25,"nodeType":"522","endLine":72,"endColumn":83},{"ruleId":"510","severity":1,"message":"523","line":2,"column":17,"nodeType":"512","messageId":"513","endLine":2,"endColumn":26},{"ruleId":"510","severity":1,"message":"524","line":2,"column":39,"nodeType":"512","messageId":"513","endLine":2,"endColumn":47},{"ruleId":"525","severity":1,"message":"526","line":15,"column":5,"nodeType":"527","messageId":"528","endLine":90,"endColumn":6},{"ruleId":"510","severity":1,"message":"529","line":2,"column":8,"nodeType":"512","messageId":"513","endLine":2,"endColumn":26},{"ruleId":"510","severity":1,"message":"530","line":3,"column":8,"nodeType":"512","messageId":"513","endLine":3,"endColumn":15},{"ruleId":"510","severity":1,"message":"531","line":4,"column":10,"nodeType":"512","messageId":"513","endLine":4,"endColumn":21},{"ruleId":"525","severity":1,"message":"526","line":15,"column":6,"nodeType":"527","messageId":"528","endLine":88,"endColumn":6},{"ruleId":"510","severity":1,"message":"532","line":11,"column":10,"nodeType":"512","messageId":"513","endLine":11,"endColumn":18},{"ruleId":"510","severity":1,"message":"533","line":11,"column":20,"nodeType":"512","messageId":"513","endLine":11,"endColumn":30},{"ruleId":"510","severity":1,"message":"534","line":11,"column":32,"nodeType":"512","messageId":"513","endLine":11,"endColumn":43},{"ruleId":"510","severity":1,"message":"535","line":12,"column":28,"nodeType":"512","messageId":"513","endLine":12,"endColumn":43},{"ruleId":"510","severity":1,"message":"536","line":43,"column":12,"nodeType":"512","messageId":"513","endLine":43,"endColumn":23},{"ruleId":"510","severity":1,"message":"537","line":43,"column":25,"nodeType":"512","messageId":"513","endLine":43,"endColumn":39},{"ruleId":"538","severity":1,"message":"539","line":75,"column":17,"nodeType":"522","endLine":75,"endColumn":105},{"ruleId":"538","severity":1,"message":"539","line":80,"column":17,"nodeType":"522","endLine":80,"endColumn":101},{"ruleId":"510","severity":1,"message":"524","line":4,"column":21,"nodeType":"512","messageId":"513","endLine":4,"endColumn":29},{"ruleId":"510","severity":1,"message":"532","line":6,"column":10,"nodeType":"512","messageId":"513","endLine":6,"endColumn":18},{"ruleId":"510","severity":1,"message":"533","line":6,"column":20,"nodeType":"512","messageId":"513","endLine":6,"endColumn":30},{"ruleId":"510","severity":1,"message":"534","line":6,"column":32,"nodeType":"512","messageId":"513","endLine":6,"endColumn":43},{"ruleId":"510","severity":1,"message":"540","line":7,"column":8,"nodeType":"512","messageId":"513","endLine":7,"endColumn":24},{"ruleId":"541","severity":1,"message":"542","line":21,"column":27,"nodeType":"543","messageId":"544","endLine":21,"endColumn":28,"suggestions":"545"},{"ruleId":"541","severity":1,"message":"542","line":21,"column":43,"nodeType":"543","messageId":"544","endLine":21,"endColumn":44,"suggestions":"546"},{"ruleId":"547","severity":1,"message":"548","line":32,"column":31,"nodeType":"549","messageId":"550","endLine":32,"endColumn":33},{"ruleId":"547","severity":1,"message":"548","line":49,"column":96,"nodeType":"549","messageId":"550","endLine":49,"endColumn":98},{"ruleId":"510","severity":1,"message":"551","line":12,"column":44,"nodeType":"512","messageId":"513","endLine":12,"endColumn":62},{"ruleId":"510","severity":1,"message":"552","line":24,"column":12,"nodeType":"512","messageId":"513","endLine":24,"endColumn":25},{"ruleId":"510","severity":1,"message":"553","line":24,"column":27,"nodeType":"512","messageId":"513","endLine":24,"endColumn":43},{"ruleId":"547","severity":1,"message":"548","line":28,"column":55,"nodeType":"549","messageId":"550","endLine":28,"endColumn":57},{"ruleId":"547","severity":1,"message":"554","line":44,"column":120,"nodeType":"549","messageId":"550","endLine":44,"endColumn":122},{"ruleId":"547","severity":1,"message":"554","line":60,"column":72,"nodeType":"549","messageId":"550","endLine":60,"endColumn":74},{"ruleId":"517","severity":1,"message":"555","line":65,"column":8,"nodeType":"556","endLine":65,"endColumn":27,"suggestions":"557"},{"ruleId":"558","severity":1,"message":"559","line":75,"column":74,"nodeType":"560","endLine":75,"endColumn":85},{"ruleId":"558","severity":1,"message":"559","line":79,"column":79,"nodeType":"560","endLine":79,"endColumn":90},{"ruleId":"558","severity":1,"message":"559","line":84,"column":72,"nodeType":"560","endLine":84,"endColumn":83},{"ruleId":"558","severity":1,"message":"559","line":89,"column":91,"nodeType":"560","endLine":89,"endColumn":102},{"ruleId":"510","severity":1,"message":"561","line":1,"column":17,"nodeType":"512","messageId":"513","endLine":1,"endColumn":26},{"ruleId":"510","severity":1,"message":"524","line":1,"column":28,"nodeType":"512","messageId":"513","endLine":1,"endColumn":36},{"ruleId":"510","severity":1,"message":"524","line":1,"column":28,"nodeType":"512","messageId":"513","endLine":1,"endColumn":36},{"ruleId":"510","severity":1,"message":"562","line":1,"column":28,"nodeType":"512","messageId":"513","endLine":1,"endColumn":34},{"ruleId":"510","severity":1,"message":"563","line":7,"column":8,"nodeType":"512","messageId":"513","endLine":7,"endColumn":24},{"ruleId":"547","severity":1,"message":"548","line":57,"column":55,"nodeType":"549","messageId":"550","endLine":57,"endColumn":57},{"ruleId":"510","severity":1,"message":"563","line":14,"column":8,"nodeType":"512","messageId":"513","endLine":14,"endColumn":24},{"ruleId":"510","severity":1,"message":"564","line":15,"column":8,"nodeType":"512","messageId":"513","endLine":15,"endColumn":16},{"ruleId":"510","severity":1,"message":"562","line":22,"column":31,"nodeType":"512","messageId":"513","endLine":22,"endColumn":37},{"ruleId":"510","severity":1,"message":"565","line":25,"column":10,"nodeType":"512","messageId":"513","endLine":25,"endColumn":41},{"ruleId":"510","severity":1,"message":"566","line":25,"column":43,"nodeType":"512","messageId":"513","endLine":25,"endColumn":55},{"ruleId":"510","severity":1,"message":"567","line":76,"column":23,"nodeType":"512","messageId":"513","endLine":76,"endColumn":35},{"ruleId":"510","severity":1,"message":"568","line":77,"column":27,"nodeType":"512","messageId":"513","endLine":77,"endColumn":43},{"ruleId":"510","severity":1,"message":"562","line":22,"column":31,"nodeType":"512","messageId":"513","endLine":22,"endColumn":37},{"ruleId":"510","severity":1,"message":"562","line":1,"column":28,"nodeType":"512","messageId":"513","endLine":1,"endColumn":34},{"ruleId":"510","severity":1,"message":"563","line":7,"column":8,"nodeType":"512","messageId":"513","endLine":7,"endColumn":24},{"ruleId":"547","severity":1,"message":"548","line":57,"column":55,"nodeType":"549","messageId":"550","endLine":57,"endColumn":57},{"ruleId":"510","severity":1,"message":"524","line":2,"column":28,"nodeType":"512","messageId":"513","endLine":2,"endColumn":36},{"ruleId":"510","severity":1,"message":"569","line":14,"column":8,"nodeType":"512","messageId":"513","endLine":14,"endColumn":14},{"ruleId":"510","severity":1,"message":"570","line":19,"column":8,"nodeType":"512","messageId":"513","endLine":19,"endColumn":21},{"ruleId":"510","severity":1,"message":"571","line":23,"column":10,"nodeType":"512","messageId":"513","endLine":23,"endColumn":24},{"ruleId":"510","severity":1,"message":"532","line":24,"column":10,"nodeType":"512","messageId":"513","endLine":24,"endColumn":18},{"ruleId":"517","severity":1,"message":"572","line":204,"column":8,"nodeType":"556","endLine":204,"endColumn":10,"suggestions":"573"},{"ruleId":"510","severity":1,"message":"574","line":5,"column":10,"nodeType":"512","messageId":"513","endLine":5,"endColumn":20},{"ruleId":"510","severity":1,"message":"530","line":6,"column":8,"nodeType":"512","messageId":"513","endLine":6,"endColumn":15},{"ruleId":"510","severity":1,"message":"523","line":7,"column":17,"nodeType":"512","messageId":"513","endLine":7,"endColumn":26},{"ruleId":"510","severity":1,"message":"524","line":7,"column":39,"nodeType":"512","messageId":"513","endLine":7,"endColumn":47},{"ruleId":"510","severity":1,"message":"531","line":8,"column":10,"nodeType":"512","messageId":"513","endLine":8,"endColumn":21},{"ruleId":"510","severity":1,"message":"529","line":9,"column":8,"nodeType":"512","messageId":"513","endLine":9,"endColumn":26},{"ruleId":"510","severity":1,"message":"575","line":2,"column":8,"nodeType":"512","messageId":"513","endLine":2,"endColumn":17},{"ruleId":"510","severity":1,"message":"576","line":4,"column":8,"nodeType":"512","messageId":"513","endLine":4,"endColumn":11},{"ruleId":"510","severity":1,"message":"577","line":5,"column":8,"nodeType":"512","messageId":"513","endLine":5,"endColumn":16},{"ruleId":"510","severity":1,"message":"578","line":6,"column":8,"nodeType":"512","messageId":"513","endLine":6,"endColumn":18},{"ruleId":"510","severity":1,"message":"579","line":13,"column":8,"nodeType":"512","messageId":"513","endLine":13,"endColumn":18},{"ruleId":"510","severity":1,"message":"580","line":15,"column":8,"nodeType":"512","messageId":"513","endLine":15,"endColumn":29},{"ruleId":"510","severity":1,"message":"581","line":16,"column":8,"nodeType":"512","messageId":"513","endLine":16,"endColumn":27},{"ruleId":"510","severity":1,"message":"562","line":17,"column":10,"nodeType":"512","messageId":"513","endLine":17,"endColumn":16},{"ruleId":"510","severity":1,"message":"582","line":21,"column":10,"nodeType":"512","messageId":"513","endLine":21,"endColumn":20},{"ruleId":"510","severity":1,"message":"583","line":22,"column":8,"nodeType":"512","messageId":"513","endLine":22,"endColumn":19},{"ruleId":"510","severity":1,"message":"584","line":26,"column":8,"nodeType":"512","messageId":"513","endLine":26,"endColumn":21},{"ruleId":"510","severity":1,"message":"585","line":39,"column":12,"nodeType":"512","messageId":"513","endLine":39,"endColumn":16},{"ruleId":"510","severity":1,"message":"586","line":39,"column":18,"nodeType":"512","messageId":"513","endLine":39,"endColumn":25},{"ruleId":"547","severity":1,"message":"548","line":86,"column":34,"nodeType":"549","messageId":"550","endLine":86,"endColumn":36},{"ruleId":"547","severity":1,"message":"548","line":88,"column":39,"nodeType":"549","messageId":"550","endLine":88,"endColumn":41},{"ruleId":"547","severity":1,"message":"548","line":90,"column":39,"nodeType":"549","messageId":"550","endLine":90,"endColumn":41},{"ruleId":"547","severity":1,"message":"548","line":92,"column":39,"nodeType":"549","messageId":"550","endLine":92,"endColumn":41},{"ruleId":"547","severity":1,"message":"548","line":108,"column":34,"nodeType":"549","messageId":"550","endLine":108,"endColumn":36},{"ruleId":"517","severity":1,"message":"587","line":113,"column":8,"nodeType":"556","endLine":113,"endColumn":10,"suggestions":"588"},{"ruleId":"547","severity":1,"message":"548","line":6,"column":62,"nodeType":"549","messageId":"550","endLine":6,"endColumn":64},{"ruleId":"547","severity":1,"message":"548","line":9,"column":103,"nodeType":"549","messageId":"550","endLine":9,"endColumn":105},{"ruleId":"510","severity":1,"message":"589","line":9,"column":8,"nodeType":"512","messageId":"513","endLine":9,"endColumn":13},{"ruleId":"510","severity":1,"message":"532","line":10,"column":10,"nodeType":"512","messageId":"513","endLine":10,"endColumn":18},{"ruleId":"510","severity":1,"message":"533","line":10,"column":20,"nodeType":"512","messageId":"513","endLine":10,"endColumn":30},{"ruleId":"510","severity":1,"message":"534","line":10,"column":32,"nodeType":"512","messageId":"513","endLine":10,"endColumn":43},{"ruleId":"510","severity":1,"message":"524","line":2,"column":10,"nodeType":"512","messageId":"513","endLine":2,"endColumn":18},{"ruleId":"510","severity":1,"message":"589","line":12,"column":8,"nodeType":"512","messageId":"513","endLine":12,"endColumn":13},{"ruleId":"541","severity":1,"message":"542","line":71,"column":95,"nodeType":"543","messageId":"544","endLine":71,"endColumn":96,"suggestions":"590"},{"ruleId":"541","severity":1,"message":"542","line":71,"column":111,"nodeType":"543","messageId":"544","endLine":71,"endColumn":112,"suggestions":"591"},{"ruleId":"510","severity":1,"message":"592","line":73,"column":11,"nodeType":"512","messageId":"513","endLine":73,"endColumn":19},{"ruleId":"547","severity":1,"message":"548","line":100,"column":60,"nodeType":"549","messageId":"550","endLine":100,"endColumn":62},{"ruleId":"510","severity":1,"message":"593","line":118,"column":12,"nodeType":"512","messageId":"513","endLine":118,"endColumn":17},{"ruleId":"510","severity":1,"message":"594","line":3,"column":8,"nodeType":"512","messageId":"513","endLine":3,"endColumn":17},{"ruleId":"510","severity":1,"message":"576","line":16,"column":8,"nodeType":"512","messageId":"513","endLine":16,"endColumn":11},{"ruleId":"541","severity":1,"message":"542","line":88,"column":93,"nodeType":"543","messageId":"544","endLine":88,"endColumn":94,"suggestions":"595"},{"ruleId":"541","severity":1,"message":"542","line":88,"column":109,"nodeType":"543","messageId":"544","endLine":88,"endColumn":110,"suggestions":"596"},{"ruleId":"547","severity":1,"message":"548","line":105,"column":28,"nodeType":"549","messageId":"550","endLine":105,"endColumn":30},{"ruleId":"547","severity":1,"message":"548","line":119,"column":32,"nodeType":"549","messageId":"550","endLine":119,"endColumn":34},{"ruleId":"510","severity":1,"message":"597","line":179,"column":9,"nodeType":"512","messageId":"513","endLine":179,"endColumn":21},{"ruleId":"517","severity":1,"message":"572","line":212,"column":6,"nodeType":"556","endLine":212,"endColumn":8,"suggestions":"598"},{"ruleId":"510","severity":1,"message":"530","line":2,"column":8,"nodeType":"512","messageId":"513","endLine":2,"endColumn":15},{"ruleId":"510","severity":1,"message":"589","line":15,"column":8,"nodeType":"512","messageId":"513","endLine":15,"endColumn":13},{"ruleId":"510","severity":1,"message":"532","line":16,"column":10,"nodeType":"512","messageId":"513","endLine":16,"endColumn":18},{"ruleId":"510","severity":1,"message":"533","line":16,"column":20,"nodeType":"512","messageId":"513","endLine":16,"endColumn":30},{"ruleId":"510","severity":1,"message":"534","line":16,"column":32,"nodeType":"512","messageId":"513","endLine":16,"endColumn":43},{"ruleId":"510","severity":1,"message":"536","line":70,"column":12,"nodeType":"512","messageId":"513","endLine":70,"endColumn":23},{"ruleId":"510","severity":1,"message":"537","line":70,"column":25,"nodeType":"512","messageId":"513","endLine":70,"endColumn":39},{"ruleId":"541","severity":1,"message":"542","line":93,"column":64,"nodeType":"543","messageId":"544","endLine":93,"endColumn":65,"suggestions":"599"},{"ruleId":"541","severity":1,"message":"542","line":93,"column":80,"nodeType":"543","messageId":"544","endLine":93,"endColumn":81,"suggestions":"600"},{"ruleId":"517","severity":1,"message":"601","line":183,"column":8,"nodeType":"556","endLine":183,"endColumn":28,"suggestions":"602"},{"ruleId":"510","severity":1,"message":"529","line":3,"column":8,"nodeType":"512","messageId":"513","endLine":3,"endColumn":26},{"ruleId":"510","severity":1,"message":"530","line":4,"column":8,"nodeType":"512","messageId":"513","endLine":4,"endColumn":15},{"ruleId":"510","severity":1,"message":"531","line":5,"column":10,"nodeType":"512","messageId":"513","endLine":5,"endColumn":21},{"ruleId":"547","severity":1,"message":"554","line":30,"column":106,"nodeType":"549","messageId":"550","endLine":30,"endColumn":108},{"ruleId":"547","severity":1,"message":"548","line":30,"column":147,"nodeType":"549","messageId":"550","endLine":30,"endColumn":149},{"ruleId":"547","severity":1,"message":"548","line":19,"column":29,"nodeType":"549","messageId":"550","endLine":19,"endColumn":31},{"ruleId":"547","severity":1,"message":"548","line":22,"column":29,"nodeType":"549","messageId":"550","endLine":22,"endColumn":31},{"ruleId":"547","severity":1,"message":"548","line":42,"column":36,"nodeType":"549","messageId":"550","endLine":42,"endColumn":38},{"ruleId":"547","severity":1,"message":"548","line":47,"column":36,"nodeType":"549","messageId":"550","endLine":47,"endColumn":38},{"ruleId":"510","severity":1,"message":"562","line":1,"column":38,"nodeType":"512","messageId":"513","endLine":1,"endColumn":44},{"ruleId":"510","severity":1,"message":"603","line":7,"column":8,"nodeType":"512","messageId":"513","endLine":7,"endColumn":16},{"ruleId":"510","severity":1,"message":"604","line":9,"column":10,"nodeType":"512","messageId":"513","endLine":9,"endColumn":22},{"ruleId":"510","severity":1,"message":"532","line":10,"column":10,"nodeType":"512","messageId":"513","endLine":10,"endColumn":18},{"ruleId":"510","severity":1,"message":"605","line":12,"column":10,"nodeType":"512","messageId":"513","endLine":12,"endColumn":21},{"ruleId":"510","severity":1,"message":"606","line":13,"column":10,"nodeType":"512","messageId":"513","endLine":13,"endColumn":30},{"ruleId":"510","severity":1,"message":"607","line":71,"column":36,"nodeType":"512","messageId":"513","endLine":71,"endColumn":42},{"ruleId":"510","severity":1,"message":"562","line":4,"column":10,"nodeType":"512","messageId":"513","endLine":4,"endColumn":16},{"ruleId":"510","severity":1,"message":"524","line":6,"column":17,"nodeType":"512","messageId":"513","endLine":6,"endColumn":25},{"ruleId":"510","severity":1,"message":"608","line":7,"column":22,"nodeType":"512","messageId":"513","endLine":7,"endColumn":30},{"ruleId":"510","severity":1,"message":"569","line":8,"column":10,"nodeType":"512","messageId":"513","endLine":8,"endColumn":16},{"ruleId":"510","severity":1,"message":"609","line":9,"column":10,"nodeType":"512","messageId":"513","endLine":9,"endColumn":14},{"ruleId":"510","severity":1,"message":"610","line":9,"column":16,"nodeType":"512","messageId":"513","endLine":9,"endColumn":21},{"ruleId":"510","severity":1,"message":"611","line":14,"column":18,"nodeType":"512","messageId":"513","endLine":14,"endColumn":22},{"ruleId":"612","severity":1,"message":"613","line":23,"column":31,"nodeType":"614","messageId":"615","endLine":23,"endColumn":33},{"ruleId":"612","severity":1,"message":"616","line":23,"column":49,"nodeType":"614","messageId":"615","endLine":23,"endColumn":51},{"ruleId":"612","severity":1,"message":"613","line":23,"column":49,"nodeType":"614","messageId":"615","endLine":23,"endColumn":51},{"ruleId":"612","severity":1,"message":"616","line":23,"column":67,"nodeType":"614","messageId":"615","endLine":23,"endColumn":69},{"ruleId":"510","severity":1,"message":"617","line":33,"column":13,"nodeType":"512","messageId":"513","endLine":33,"endColumn":21},{"ruleId":"547","severity":1,"message":"548","line":65,"column":41,"nodeType":"549","messageId":"550","endLine":65,"endColumn":43},{"ruleId":"520","severity":1,"message":"521","line":74,"column":30,"nodeType":"522","endLine":74,"endColumn":35},{"ruleId":"547","severity":1,"message":"548","line":76,"column":73,"nodeType":"549","messageId":"550","endLine":76,"endColumn":75},{"ruleId":"547","severity":1,"message":"548","line":76,"column":135,"nodeType":"549","messageId":"550","endLine":76,"endColumn":137},{"ruleId":"547","severity":1,"message":"548","line":77,"column":94,"nodeType":"549","messageId":"550","endLine":77,"endColumn":96},{"ruleId":"547","severity":1,"message":"548","line":77,"column":156,"nodeType":"549","messageId":"550","endLine":77,"endColumn":158},{"ruleId":"547","severity":1,"message":"548","line":80,"column":94,"nodeType":"549","messageId":"550","endLine":80,"endColumn":96},{"ruleId":"547","severity":1,"message":"548","line":80,"column":156,"nodeType":"549","messageId":"550","endLine":80,"endColumn":158},{"ruleId":"547","severity":1,"message":"548","line":81,"column":72,"nodeType":"549","messageId":"550","endLine":81,"endColumn":74},{"ruleId":"547","severity":1,"message":"548","line":81,"column":134,"nodeType":"549","messageId":"550","endLine":81,"endColumn":136},{"ruleId":"547","severity":1,"message":"548","line":87,"column":86,"nodeType":"549","messageId":"550","endLine":87,"endColumn":88},{"ruleId":"547","severity":1,"message":"548","line":88,"column":69,"nodeType":"549","messageId":"550","endLine":88,"endColumn":71},{"ruleId":"547","severity":1,"message":"548","line":88,"column":133,"nodeType":"549","messageId":"550","endLine":88,"endColumn":135},{"ruleId":"547","severity":1,"message":"548","line":91,"column":68,"nodeType":"549","messageId":"550","endLine":91,"endColumn":70},{"ruleId":"547","severity":1,"message":"548","line":91,"column":132,"nodeType":"549","messageId":"550","endLine":91,"endColumn":134},{"ruleId":"547","severity":1,"message":"548","line":92,"column":87,"nodeType":"549","messageId":"550","endLine":92,"endColumn":89},{"ruleId":"510","severity":1,"message":"562","line":4,"column":10,"nodeType":"512","messageId":"513","endLine":4,"endColumn":16},{"ruleId":"510","severity":1,"message":"609","line":5,"column":10,"nodeType":"512","messageId":"513","endLine":5,"endColumn":14},{"ruleId":"510","severity":1,"message":"610","line":5,"column":16,"nodeType":"512","messageId":"513","endLine":5,"endColumn":21},{"ruleId":"510","severity":1,"message":"569","line":6,"column":10,"nodeType":"512","messageId":"513","endLine":6,"endColumn":16},{"ruleId":"510","severity":1,"message":"618","line":11,"column":8,"nodeType":"512","messageId":"513","endLine":11,"endColumn":22},{"ruleId":"510","severity":1,"message":"611","line":17,"column":18,"nodeType":"512","messageId":"513","endLine":17,"endColumn":22},{"ruleId":"510","severity":1,"message":"619","line":22,"column":18,"nodeType":"512","messageId":"513","endLine":22,"endColumn":25},{"ruleId":"612","severity":1,"message":"613","line":40,"column":31,"nodeType":"614","messageId":"615","endLine":40,"endColumn":33},{"ruleId":"612","severity":1,"message":"616","line":40,"column":49,"nodeType":"614","messageId":"615","endLine":40,"endColumn":51},{"ruleId":"612","severity":1,"message":"613","line":40,"column":49,"nodeType":"614","messageId":"615","endLine":40,"endColumn":51},{"ruleId":"612","severity":1,"message":"616","line":40,"column":67,"nodeType":"614","messageId":"615","endLine":40,"endColumn":69},{"ruleId":"517","severity":1,"message":"620","line":60,"column":8,"nodeType":"556","endLine":60,"endColumn":10,"suggestions":"621"},{"ruleId":"510","severity":1,"message":"617","line":62,"column":13,"nodeType":"512","messageId":"513","endLine":62,"endColumn":21},{"ruleId":"547","severity":1,"message":"548","line":75,"column":45,"nodeType":"549","messageId":"550","endLine":75,"endColumn":47},{"ruleId":"547","severity":1,"message":"548","line":80,"column":73,"nodeType":"549","messageId":"550","endLine":80,"endColumn":75},{"ruleId":"547","severity":1,"message":"548","line":80,"column":127,"nodeType":"549","messageId":"550","endLine":80,"endColumn":129},{"ruleId":"547","severity":1,"message":"548","line":83,"column":72,"nodeType":"549","messageId":"550","endLine":83,"endColumn":74},{"ruleId":"547","severity":1,"message":"548","line":83,"column":126,"nodeType":"549","messageId":"550","endLine":83,"endColumn":128},{"ruleId":"520","severity":1,"message":"521","line":86,"column":29,"nodeType":"522","endLine":86,"endColumn":64},{"ruleId":"510","severity":1,"message":"532","line":10,"column":10,"nodeType":"512","messageId":"513","endLine":10,"endColumn":18},{"ruleId":"510","severity":1,"message":"533","line":10,"column":20,"nodeType":"512","messageId":"513","endLine":10,"endColumn":30},{"ruleId":"510","severity":1,"message":"534","line":10,"column":32,"nodeType":"512","messageId":"513","endLine":10,"endColumn":43},{"ruleId":"510","severity":1,"message":"589","line":11,"column":8,"nodeType":"512","messageId":"513","endLine":11,"endColumn":13},{"ruleId":"510","severity":1,"message":"536","line":35,"column":12,"nodeType":"512","messageId":"513","endLine":35,"endColumn":23},{"ruleId":"510","severity":1,"message":"622","line":38,"column":23,"nodeType":"512","messageId":"513","endLine":38,"endColumn":35},{"ruleId":"547","severity":1,"message":"548","line":47,"column":29,"nodeType":"549","messageId":"550","endLine":47,"endColumn":31},{"ruleId":"623","severity":1,"message":"624","line":66,"column":82,"nodeType":"519","messageId":"625","endLine":66,"endColumn":84},{"ruleId":"510","severity":1,"message":"532","line":10,"column":10,"nodeType":"512","messageId":"513","endLine":10,"endColumn":18},{"ruleId":"541","severity":1,"message":"542","line":82,"column":64,"nodeType":"543","messageId":"544","endLine":82,"endColumn":65,"suggestions":"626"},{"ruleId":"541","severity":1,"message":"542","line":82,"column":80,"nodeType":"543","messageId":"544","endLine":82,"endColumn":81,"suggestions":"627"},{"ruleId":"510","severity":1,"message":"628","line":83,"column":11,"nodeType":"512","messageId":"513","endLine":83,"endColumn":16},{"ruleId":"547","severity":1,"message":"548","line":120,"column":34,"nodeType":"549","messageId":"550","endLine":120,"endColumn":36},{"ruleId":"517","severity":1,"message":"629","line":158,"column":8,"nodeType":"556","endLine":158,"endColumn":10,"suggestions":"630"},{"ruleId":"510","severity":1,"message":"532","line":10,"column":10,"nodeType":"512","messageId":"513","endLine":10,"endColumn":18},{"ruleId":"510","severity":1,"message":"533","line":10,"column":20,"nodeType":"512","messageId":"513","endLine":10,"endColumn":30},{"ruleId":"510","severity":1,"message":"534","line":10,"column":32,"nodeType":"512","messageId":"513","endLine":10,"endColumn":43},{"ruleId":"510","severity":1,"message":"589","line":11,"column":8,"nodeType":"512","messageId":"513","endLine":11,"endColumn":13},{"ruleId":"510","severity":1,"message":"536","line":35,"column":12,"nodeType":"512","messageId":"513","endLine":35,"endColumn":23},{"ruleId":"510","severity":1,"message":"622","line":39,"column":23,"nodeType":"512","messageId":"513","endLine":39,"endColumn":35},{"ruleId":"547","severity":1,"message":"548","line":49,"column":29,"nodeType":"549","messageId":"550","endLine":49,"endColumn":31},{"ruleId":"623","severity":1,"message":"624","line":67,"column":79,"nodeType":"519","messageId":"625","endLine":67,"endColumn":81},{"ruleId":"510","severity":1,"message":"524","line":1,"column":28,"nodeType":"512","messageId":"513","endLine":1,"endColumn":36},{"ruleId":"510","severity":1,"message":"622","line":34,"column":23,"nodeType":"512","messageId":"513","endLine":34,"endColumn":35},{"ruleId":"517","severity":1,"message":"631","line":65,"column":8,"nodeType":"556","endLine":65,"endColumn":10,"suggestions":"632"},{"ruleId":"510","severity":1,"message":"532","line":10,"column":10,"nodeType":"512","messageId":"513","endLine":10,"endColumn":18},{"ruleId":"510","severity":1,"message":"633","line":65,"column":12,"nodeType":"512","messageId":"513","endLine":65,"endColumn":27},{"ruleId":"510","severity":1,"message":"634","line":65,"column":29,"nodeType":"512","messageId":"513","endLine":65,"endColumn":47},{"ruleId":"510","severity":1,"message":"536","line":66,"column":12,"nodeType":"512","messageId":"513","endLine":66,"endColumn":23},{"ruleId":"510","severity":1,"message":"537","line":66,"column":25,"nodeType":"512","messageId":"513","endLine":66,"endColumn":39},{"ruleId":"541","severity":1,"message":"542","line":79,"column":64,"nodeType":"543","messageId":"544","endLine":79,"endColumn":65,"suggestions":"635"},{"ruleId":"541","severity":1,"message":"542","line":79,"column":80,"nodeType":"543","messageId":"544","endLine":79,"endColumn":81,"suggestions":"636"},{"ruleId":"510","severity":1,"message":"628","line":80,"column":11,"nodeType":"512","messageId":"513","endLine":80,"endColumn":16},{"ruleId":"547","severity":1,"message":"548","line":118,"column":34,"nodeType":"549","messageId":"550","endLine":118,"endColumn":36},{"ruleId":"547","severity":1,"message":"548","line":159,"column":63,"nodeType":"549","messageId":"550","endLine":159,"endColumn":65},{"ruleId":"510","severity":1,"message":"562","line":1,"column":38,"nodeType":"512","messageId":"513","endLine":1,"endColumn":44},{"ruleId":"510","severity":1,"message":"569","line":2,"column":8,"nodeType":"512","messageId":"513","endLine":2,"endColumn":14},{"ruleId":"510","severity":1,"message":"594","line":3,"column":8,"nodeType":"512","messageId":"513","endLine":3,"endColumn":17},{"ruleId":"510","severity":1,"message":"603","line":7,"column":8,"nodeType":"512","messageId":"513","endLine":7,"endColumn":16},{"ruleId":"510","severity":1,"message":"604","line":9,"column":10,"nodeType":"512","messageId":"513","endLine":9,"endColumn":22},{"ruleId":"510","severity":1,"message":"532","line":10,"column":10,"nodeType":"512","messageId":"513","endLine":10,"endColumn":18},{"ruleId":"510","severity":1,"message":"605","line":12,"column":10,"nodeType":"512","messageId":"513","endLine":12,"endColumn":21},{"ruleId":"510","severity":1,"message":"606","line":13,"column":10,"nodeType":"512","messageId":"513","endLine":13,"endColumn":30},{"ruleId":"510","severity":1,"message":"637","line":16,"column":10,"nodeType":"512","messageId":"513","endLine":16,"endColumn":19},{"ruleId":"510","severity":1,"message":"638","line":64,"column":12,"nodeType":"512","messageId":"513","endLine":64,"endColumn":23},{"ruleId":"510","severity":1,"message":"639","line":69,"column":11,"nodeType":"512","messageId":"513","endLine":69,"endColumn":18},{"ruleId":"510","severity":1,"message":"607","line":72,"column":36,"nodeType":"512","messageId":"513","endLine":72,"endColumn":42},{"ruleId":"510","severity":1,"message":"640","line":72,"column":46,"nodeType":"512","messageId":"513","endLine":72,"endColumn":58},{"ruleId":"510","severity":1,"message":"641","line":73,"column":11,"nodeType":"512","messageId":"513","endLine":73,"endColumn":15},{"ruleId":"510","severity":1,"message":"642","line":79,"column":23,"nodeType":"512","messageId":"513","endLine":79,"endColumn":35},{"ruleId":"510","severity":1,"message":"643","line":80,"column":20,"nodeType":"512","messageId":"513","endLine":80,"endColumn":29},{"ruleId":"510","severity":1,"message":"644","line":82,"column":11,"nodeType":"512","messageId":"513","endLine":82,"endColumn":22},{"ruleId":"510","severity":1,"message":"562","line":1,"column":28,"nodeType":"512","messageId":"513","endLine":1,"endColumn":34},{"ruleId":"510","severity":1,"message":"563","line":7,"column":8,"nodeType":"512","messageId":"513","endLine":7,"endColumn":24},{"ruleId":"510","severity":1,"message":"637","line":10,"column":10,"nodeType":"512","messageId":"513","endLine":10,"endColumn":19},{"ruleId":"547","severity":1,"message":"548","line":54,"column":55,"nodeType":"549","messageId":"550","endLine":54,"endColumn":57},{"ruleId":"510","severity":1,"message":"562","line":1,"column":28,"nodeType":"512","messageId":"513","endLine":1,"endColumn":34},{"ruleId":"510","severity":1,"message":"563","line":7,"column":8,"nodeType":"512","messageId":"513","endLine":7,"endColumn":24},{"ruleId":"510","severity":1,"message":"637","line":10,"column":10,"nodeType":"512","messageId":"513","endLine":10,"endColumn":19},{"ruleId":"547","severity":1,"message":"548","line":53,"column":55,"nodeType":"549","messageId":"550","endLine":53,"endColumn":57},{"ruleId":"510","severity":1,"message":"645","line":20,"column":10,"nodeType":"512","messageId":"513","endLine":20,"endColumn":23},{"ruleId":"510","severity":1,"message":"646","line":24,"column":7,"nodeType":"512","messageId":"513","endLine":24,"endColumn":11},{"ruleId":"517","severity":1,"message":"647","line":84,"column":3,"nodeType":"648","endLine":84,"endColumn":18,"suggestions":"649"},{"ruleId":"547","severity":1,"message":"548","line":85,"column":18,"nodeType":"549","messageId":"550","endLine":85,"endColumn":20},{"ruleId":"547","severity":1,"message":"548","line":85,"column":43,"nodeType":"549","messageId":"550","endLine":85,"endColumn":45},"no-native-reassign",["650"],"no-negated-in-lhs",["651"],"no-unused-vars","'SimpleMap' is defined but never used.","Identifier","unusedVar","'MyLocation' is defined but never used.","'UsersSearch' is defined but never used.","'BusinessSearch' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'useState' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'GeolocationService' is defined but never used.","'Geocode' is defined but never used.","'FromAddress' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'GetCurrentUser2' is defined but never used.","'ifGoToLogin' is assigned a value but never used.","'setifGoToLogin' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ResultSearchUser' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["652","653"],["654","655"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'GetAllBusinessFunc' is defined but never used.","'countBusiness' is assigned a value but never used.","'setCountBusiness' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'ifSorted' and 'props.SaveAllBusiness'. Either include them or remove the dependency array.","ArrayExpression",["656"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","'useRef' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'GetCurrentUserByPaaswordAndMail' is defined but never used.","'CheckManager' is defined but never used.","'setifManager' is assigned a value but never used.","'setifNoGoToLogin' is assigned a value but never used.","'Button' is defined but never used.","'SearchHistory' is defined but never used.","'GetCurrentUser' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["657"],"'geolocated' is defined but never used.","'PropTypes' is defined but never used.","'Box' is defined but never used.","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'KeyboardArrowUpIcon' is defined but never used.","'withRouter' is defined but never used.","'queryString' is defined but never used.","'UpdateBuisnes' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'idTask' and 'url'. Either include them or remove the dependency array.",["658"],"'axios' is defined but never used.",["659","660"],["661","662"],"'category' is assigned a value but never used.","'check' is assigned a value but never used.","'TextField' is defined but never used.",["663","664"],["665","666"],"'onFileChange' is assigned a value but never used.",["667"],["668","669"],["670","671"],"React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["672"],"'business' is defined but never used.","'ErrorMessage' is defined but never used.","'Multiselect' is defined but never used.","'ChangeUpdateBuisness' is defined but never used.","'errors' is assigned a value but never used.","'GetImage' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'path' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'myWindow' is assigned a value but never used.","'UpdataBusiness' is defined but never used.","'SetZoom' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.business.adress'. Either include it or remove the dependency array.",["673"],"'setSecondary' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["674","675"],["676","677"],"'phone' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["678"],"React Hook useEffect has a missing dependency: 'GetCurrentBuisnessFunc'. Either include it or remove the dependency array.",["679"],"'currentBuisness' is assigned a value but never used.","'setcurrentBuisness' is assigned a value but never used.",["680","681"],["682","683"],"'useParams' is defined but never used.","'currentUser' is assigned a value but never used.","'classes' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'name' is assigned a value but never used.","'settypeAlert' is assigned a value but never used.","'setmasseg' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'useRouteMatch' is defined but never used.","'Main' is assigned a value but never used.","React Hook useEffect contains a call to 'setcolor'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [pathname] as a second argument to the useEffect Hook.","MemberExpression",["684"],"no-global-assign","no-unsafe-negation",{"messageId":"685","fix":"686","desc":"687"},{"messageId":"688","fix":"689","desc":"690"},{"messageId":"685","fix":"691","desc":"687"},{"messageId":"688","fix":"692","desc":"690"},{"desc":"693","fix":"694"},{"desc":"695","fix":"696"},{"desc":"697","fix":"698"},{"messageId":"685","fix":"699","desc":"687"},{"messageId":"688","fix":"700","desc":"690"},{"messageId":"685","fix":"701","desc":"687"},{"messageId":"688","fix":"702","desc":"690"},{"messageId":"685","fix":"703","desc":"687"},{"messageId":"688","fix":"704","desc":"690"},{"messageId":"685","fix":"705","desc":"687"},{"messageId":"688","fix":"706","desc":"690"},{"desc":"695","fix":"707"},{"messageId":"685","fix":"708","desc":"687"},{"messageId":"688","fix":"709","desc":"690"},{"messageId":"685","fix":"710","desc":"687"},{"messageId":"688","fix":"711","desc":"690"},{"desc":"712","fix":"713"},{"desc":"714","fix":"715"},{"messageId":"685","fix":"716","desc":"687"},{"messageId":"688","fix":"717","desc":"690"},{"messageId":"685","fix":"718","desc":"687"},{"messageId":"688","fix":"719","desc":"690"},{"desc":"720","fix":"721"},{"desc":"722","fix":"723"},{"messageId":"685","fix":"724","desc":"687"},{"messageId":"688","fix":"725","desc":"690"},{"messageId":"685","fix":"726","desc":"687"},{"messageId":"688","fix":"727","desc":"690"},{"desc":"728","fix":"729"},"removeEscape",{"range":"730","text":"731"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"732","text":"733"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"734","text":"731"},{"range":"735","text":"733"},"Update the dependencies array to be: [ifSorted, props.AllBusiness, props.SaveAllBusiness]",{"range":"736","text":"737"},"Update the dependencies array to be: [props]",{"range":"738","text":"739"},"Update the dependencies array to be: [idTask, url]",{"range":"740","text":"741"},{"range":"742","text":"731"},{"range":"743","text":"733"},{"range":"744","text":"731"},{"range":"745","text":"733"},{"range":"746","text":"731"},{"range":"747","text":"733"},{"range":"748","text":"731"},{"range":"749","text":"733"},{"range":"750","text":"739"},{"range":"751","text":"731"},{"range":"752","text":"733"},{"range":"753","text":"731"},{"range":"754","text":"733"},"Update the dependencies array to be: [id, props, props.idUserUpdate]",{"range":"755","text":"756"},"Update the dependencies array to be: [props.business.adress]",{"range":"757","text":"758"},{"range":"759","text":"731"},{"range":"760","text":"733"},{"range":"761","text":"731"},{"range":"762","text":"733"},"Update the dependencies array to be: [id]",{"range":"763","text":"764"},"Update the dependencies array to be: [GetCurrentBuisnessFunc]",{"range":"765","text":"766"},{"range":"767","text":"731"},{"range":"768","text":"733"},{"range":"769","text":"731"},{"range":"770","text":"733"},"Add dependencies array: [pathname]",{"range":"771","text":"772"},[799,800],"",[799,799],"\\",[815,816],[815,815],[2160,2179],"[ifSorted, props.AllBusiness, props.SaveAllBusiness]",[5504,5506],"[props]",[4439,4441],"[idTask, url]",[2198,2199],[2198,2198],[2214,2215],[2214,2214],[2732,2733],[2732,2732],[2748,2749],[2748,2748],[5952,5954],[2872,2873],[2872,2872],[2888,2889],[2888,2888],[5483,5503],"[id, props, props.idUserUpdate]",[1684,1686],"[props.business.adress]",[2522,2523],[2522,2522],[2538,2539],[2538,2538],[4365,4367],"[id]",[1894,1896],"[GetCurrentBuisnessFunc]",[2381,2382],[2381,2381],[2397,2398],[2397,2397],[2997,2997],", [pathname]"]