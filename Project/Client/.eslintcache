[{"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\index.js":"1","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\reportWebVitals.js":"2","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\App.js":"3","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\reduces\\index.js":"4","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\Home.js":"5","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\reduces\\users.js":"6","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\reduces\\business.js":"7","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\UseresSearch.js":"8","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\Search.js":"9","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\BusinessSearch.js":"10","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\LogIn\\singIn.js":"11","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\LogIn\\SingUp.js":"12","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\ActionTypes.js":"13","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\actions\\index.js":"14","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\ResultSearchUser.js":"15","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\ResultSearchBusiness.js":"16","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\classes\\user.js":"17","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\classes\\business.js":"18","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\actions\\business.js":"19","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\actions\\users.js":"20","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\Business.js":"21","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\User.js":"22","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\util\\index.js":"23","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\util\\UtilUser.js":"24","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\PrivateArea.js":"25","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\BusinessInformationUpdate.js":"26","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\AddingBusiness.js":"27","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdatePersonalDetails.js":"28","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\SearchHistory.js":"29","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Histories\\Users.js":"30","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Histories\\Buisness.js":"31","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\LogIn\\BasicDetails.js":"32","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\LogIn\\ExpandingDetails.js":"33","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\MyLocation.js":"34","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdateBuisness\\ListBuisness.js":"35","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdateBuisness\\UpdateBuisnes.js":"36","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\util\\UtilBuisness.js":"37","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\util\\UtilCategory.js":"38","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\Manager\\Manager.js":"39","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\util\\Tasks.js":"40","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\Manager\\TableTasks.js":"41"},{"size":1117,"mtime":1629294697652,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"43"},{"size":630,"mtime":1629115184809,"results":"45","hashOfConfig":"43"},{"size":86,"mtime":1624912735970,"results":"46","hashOfConfig":"43"},{"size":3658,"mtime":1629813422095,"results":"47","hashOfConfig":"43"},{"size":2536,"mtime":1629016848966,"results":"48","hashOfConfig":"43"},{"size":1445,"mtime":1629305241544,"results":"49","hashOfConfig":"43"},{"size":3297,"mtime":1629455403690,"results":"50","hashOfConfig":"43"},{"size":3916,"mtime":1629455403685,"results":"51","hashOfConfig":"43"},{"size":4036,"mtime":1629455301610,"results":"52","hashOfConfig":"43"},{"size":6045,"mtime":1629830434090,"results":"53","hashOfConfig":"43"},{"size":2078,"mtime":1629454567916,"results":"54","hashOfConfig":"43"},{"size":984,"mtime":1629289158842,"results":"55","hashOfConfig":"43"},{"size":431,"mtime":1629289158840,"results":"56","hashOfConfig":"43"},{"size":743,"mtime":1629455301609,"results":"57","hashOfConfig":"43"},{"size":1248,"mtime":1629594650796,"results":"58","hashOfConfig":"43"},{"size":412,"mtime":1621790708310,"results":"59","hashOfConfig":"43"},{"size":291,"mtime":1624912735917,"results":"60","hashOfConfig":"43"},{"size":2538,"mtime":1629297794710,"results":"61","hashOfConfig":"43"},{"size":3812,"mtime":1629815987451,"results":"62","hashOfConfig":"43"},{"size":4653,"mtime":1629059739083,"results":"63","hashOfConfig":"43"},{"size":6394,"mtime":1629455403686,"results":"64","hashOfConfig":"43"},{"size":376,"mtime":1629820368195,"results":"65","hashOfConfig":"43"},{"size":1671,"mtime":1629819485412,"results":"66","hashOfConfig":"43"},{"size":6159,"mtime":1629458216798,"results":"67","hashOfConfig":"43"},{"size":521,"mtime":1629458078438,"results":"68","hashOfConfig":"43"},{"size":8278,"mtime":1629458059043,"results":"69","hashOfConfig":"43"},{"size":11911,"mtime":1629843840117,"results":"70","hashOfConfig":"43"},{"size":3286,"mtime":1629458437060,"results":"71","hashOfConfig":"43"},{"size":8932,"mtime":1629642752146,"results":"72","hashOfConfig":"43"},{"size":3304,"mtime":1629640878382,"results":"73","hashOfConfig":"43"},{"size":7907,"mtime":1629455301601,"results":"74","hashOfConfig":"43"},{"size":3825,"mtime":1629110263810,"results":"75","hashOfConfig":"43"},{"size":1275,"mtime":1629594650796,"results":"76","hashOfConfig":"43"},{"size":3765,"mtime":1629571558101,"results":"77","hashOfConfig":"43"},{"size":8925,"mtime":1629457612759,"results":"78","hashOfConfig":"43"},{"size":796,"mtime":1629457816866,"results":"79","hashOfConfig":"43"},{"size":136,"mtime":1629284233275,"results":"80","hashOfConfig":"43"},{"size":206,"mtime":1629662225522,"results":"81","hashOfConfig":"43"},{"size":256,"mtime":1629805779729,"results":"82","hashOfConfig":"43"},{"size":4845,"mtime":1629833011463,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"15p6o0x",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"86"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"86"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"86"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"86"},"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\index.js",[],["198","199"],"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\reportWebVitals.js",[],"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\App.js",["200","201"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Home from './components/Home'\r\nimport SimpleMap from './components/search/MyLocation'\r\nimport { connect } from \"react-redux\";\r\nimport MyLocation from './components/search/MyLocation';\r\nconst app = (props) => {\r\n    return (<>\r\n        <Home/>\r\n        {/* <SimpleMap/> */}\r\n        {/* <MyLocation /> */}\r\n        {/* console.log(\"jjj\"); */}\r\n        {/* tamar */}\r\n    </>)\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { CurrentUser: state.usersPart.CurrentUser };\r\n}\r\nexport default connect(mapStateToProps, {})(app);\r\n\r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\reduces\\index.js",[],"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\Home.js",["202","203","204"],"import React, { useEffect } from 'react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport UsersSearch from './search/UseresSearch';\r\nimport BusinessSearch from './search/BusinessSearch';\r\nimport Search from './search/Search';\r\nimport { connect } from \"react-redux\";\r\nimport SingIn from './LogIn/singIn';\r\nimport SignUp from './LogIn/SingUp';\r\nimport PrivateArea from './PrivateArea/PrivateArea';\r\nimport './Home.scss';\r\nimport Button from '@material-ui/core/Button';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport home2 from './img/home3.png';\r\nimport Manager from '../components/Manager/Manager';\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(purple[500]),\r\n        backgroundColor: purple[500],\r\n        '&:hover': {\r\n            backgroundColor: purple[700],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nconst Home = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n\r\n    })\r\n    return (\r\n        <>\r\n            {/* <Manager/> */}\r\n\r\n            <Switch>\r\n\r\n                <Route exact path={'/'}>\r\n                    <div className=\"back-home\">\r\n                        <img src={home2} style={{ width: \"100%\" }}></img>\r\n                        <div className=\"href\">\r\n                            <Link to=\"/SignUp\" >\r\n                                <ColorButton variant=\"contained\" color=\"primary\" className={classes.margin}>\r\n                                    SignUp\r\n                                </ColorButton>\r\n\r\n                            </Link>\r\n                            <Link to=\"/SignIn\" >\r\n                                <ColorButton variant=\"contained\" color=\"primary\" className={classes.margin}>\r\n                                    SingIn\r\n                                </ColorButton>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"href2\">\r\n                            <Link to=\"/SignUp\" >\r\n                                <ColorButton variant=\"contained\" color=\"primary\" style={{ \"border-radius\": \"19px\" }} className={classes.margin + \" search\"}>\r\n                                    Search Users\r\n                                </ColorButton>\r\n\r\n                            </Link>\r\n                            <Link to=\"/SignIn\" >\r\n                                <ColorButton variant=\"contained\" color=\"primary\" style={{ \"border-radius\": \"19px\" }} className={classes.margin + \" search\"}>\r\n                                    Search Buisness\r\n                                </ColorButton>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </Route>\r\n\r\n                <Route path={'/Search'}>\r\n                    <Search />\r\n                </Route>\r\n                <Route path={'/Manager'}>\r\n                    <Manager />\r\n                </Route>\r\n                <Route path={'/SignUp'}>\r\n                    <SignUp />\r\n                </Route>\r\n                <Route path={'/PrivateArea'}>\r\n                    <PrivateArea />\r\n                </Route>\r\n                <Route path={'/SignIn'}>\r\n                    <SingIn />\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { CurrentUser: state.usersPart.CurrentUser };\r\n}\r\nexport default connect(mapStateToProps, {})(Home); \r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\reduces\\users.js",["205"],"import * as actionTypes from '../ActionTypes'\r\nconst initialUsers = {\r\n    AllUsers: [],\r\n    UserSearch: null,\r\n    SelectedUser: null,\r\n    ColorFirstName: \"\",\r\n    ColorLastName: \"\",\r\n    CurrentUser: null,\r\n    SingUp: false,\r\n    IfExist: false,\r\n    ErrorInAdd: false\r\n}\r\nexport const usersReducer = (state = initialUsers, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FILL_ALL_USERS:\r\n            return {\r\n                ...state,\r\n                AllUsers: action.payload\r\n            };\r\n        case actionTypes.REFRESH_RESULT:\r\n            return {\r\n                ...state,\r\n                UserSearch: action.payload\r\n            }\r\n        case actionTypes.DELETE_RESULT_USER:\r\n            return {\r\n                ...state,\r\n                UserSearch: action.payload\r\n            }\r\n        case actionTypes.SELECTED_USER:\r\n            return {\r\n                ...state,\r\n                SelectedUser: action.payload\r\n            }\r\n        case actionTypes.NO_SELECTED_USER:\r\n            return {\r\n                ...state,\r\n                SelectedUser: action.payload\r\n            }\r\n        case actionTypes.CHANGE_COLOR_FIRST_NAME:\r\n            return {\r\n                ...state,\r\n                ColorFirstName: action.payload\r\n            }\r\n        case actionTypes.CHANGE_COLOR_LAST_NAME:\r\n            return {\r\n                ...state,\r\n                ColorLastName: action.payload\r\n            }\r\n        case actionTypes.SING_IN:\r\n            localStorage.setItem(\"currentUser\", null);\r\n            localStorage.setItem(\"currentUserPassword\", action.payload.password);\r\n            localStorage.setItem(\"currentUserMail\", action.payload.email);\r\n            localStorage.setItem(\"currentUserId\", action.payload._id);\r\n\r\n            return {\r\n                ...state,\r\n                CurrentUser: action.payload\r\n            }\r\n\r\n\r\n        case actionTypes.SING_OUT:\r\n            localStorage.setItem(\"currentUserPassword\", null);\r\n            localStorage.setItem(\"currentUserMail\", null);\r\n            localStorage.setItem(\"currentUserId\", null);\r\n            return {\r\n                ...state,\r\n                CurrentUser: null\r\n            }\r\n\r\n        case actionTypes.IF_EXIST:\r\n            return {\r\n                ...state,\r\n                IfExist: action.payload\r\n            }\r\n\r\n        case actionTypes.IF_ERROR_IN_ADD:\r\n            return {\r\n                ...state,\r\n                ErrorInAdd: action.payload\r\n            }\r\n\r\n\r\n    }\r\n    return state;\r\n}\r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\reduces\\business.js",["206"],"import * as actionTypes from '../ActionTypes';\r\nconst initialBusiness = {\r\n    AllBusiness: [],\r\n    BusinessSearch: [],\r\n    SelectedBusiness: null,\r\n    ColorName: \"\",\r\n    updateBuisness: null\r\n}\r\nexport const businessReducer = (state = initialBusiness, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FILL_ALL_BUSINESS:\r\n            return {\r\n                ...state,\r\n                AllBusiness: action.payload\r\n            };\r\n        case actionTypes.REFRESH_RESULT_BUSINESS:\r\n            return {\r\n                ...state,\r\n                BusinessSearch: action.payload\r\n            }\r\n        case actionTypes.DELETE_RESULT_BUSINESS:\r\n            return {\r\n                ...state,\r\n                BusinessSearch: action.payload\r\n            }\r\n        case actionTypes.SELECTED_BUSINESS:\r\n            return {\r\n                ...state,\r\n                SelectedBusiness: action.payload\r\n            }\r\n        // case actionTypes.NO_SELECTED_USER:\r\n        //     return {\r\n        //         ...state,\r\n        //         SelectedUser: action.payload\r\n        //     }\r\n        case actionTypes.CHANGE_COLOR_NAME:\r\n            return {\r\n                ...state,\r\n                ColorName: action.payload\r\n            }\r\n        case actionTypes.UPDATE_BUISNESS:\r\n            return {\r\n                ...state,\r\n                updateBuisness: action.payload\r\n            }\r\n\r\n    }\r\n    return state;\r\n}\r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\UseresSearch.js",["207","208","209","210","211","212"],"import 'react-bootstrap';\r\nimport { GetAllUsers, SaveResultUsers, SearchUsers, DeleteResultUser, ChangeColorFirstName, ChangeColorLastName } from '../../actions/index';\r\nimport user from '../classes/user';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport ResultSearchUser from './ResultSearchUser';\r\n\r\nconst UsersSearch = (props) => {\r\n\r\n    let firstName = useRef();\r\n    let lastName = useRef();\r\n    let phoneNamber = useRef();\r\n    let email = useRef();\r\n    let adress = useRef();\r\n\r\n    // props.AllUsers פעם ראשונה שמבקר באתר נשלף כל המשתמשים למערך\r\n    if (props.AllUsers.length == 0)\r\n        props.GetAllUsers();\r\n\r\n\r\n    // פונקצית חיפוש Users\r\n    const searchUsers = () => {\r\n\r\n        let User = new user();\r\n        User.firstName = firstName.current.value;\r\n        User.lastName = lastName.current.value;\r\n        User.phoneNamber = phoneNamber.current.value;\r\n        User.email = email.current.value;\r\n        User.adress = adress.current.value;\r\n        if (User.firstName || User.lastName || User.phoneNamber || User.email || User.adress) {\r\n            props.ChangeColorFirstName(User.firstName);\r\n            props.ChangeColorLastName(User.lastName);\r\n            props.SearchUsers(User, props.AllUsers);\r\n        }\r\n        else\r\n            props.SaveResultUsers([]);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n\r\n    return (<>\r\n        {<form className=\"ui form\">\r\n            <div className=\"ui form\">\r\n                <div className=\"two fields\">\r\n                    <div className=\"field\">\r\n                        <label>First Name</label>\r\n                        <input placeholder=\"First Name\" ref={firstName} type=\"text\" onKeyUp={searchUsers} />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Last Name</label>\r\n                        <input placeholder=\"Last Name\" ref={lastName} type=\"text\" onKeyUp={searchUsers} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Email</label>\r\n                    <input type=\"text\" placeholder=\"Email\" ref={email} onKeyUp={searchUsers} />\r\n                </div>\r\n                <div className=\"two fields\">\r\n                    <div className=\"field\">\r\n                        <label>Phone Number</label>\r\n                        <input placeholder=\"Phone Number\" ref={phoneNamber} type=\"number\" onKeyUp={searchUsers} />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Address</label>\r\n                        <input placeholder=\"Address\" ref={adress} type=\"text\" onKeyUp={searchUsers} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n                   }\r\n    </>);\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { CurrentUser: state.usersPart.CurrentUser, AllUsers: state.usersPart.AllUsers, UserSearch: state.usersPart.UserSearch };\r\n}\r\nexport default connect(mapStateToProps, { GetAllUsers, SaveResultUsers, SearchUsers, DeleteResultUser, ChangeColorFirstName, ChangeColorLastName })(UsersSearch);","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\Search.js",["213","214","215","216","217","218"],"import './Search.scss'\r\nimport React, { useEffect, useState } from 'react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport UsersSearch from './UseresSearch';\r\nimport BusinessSearch from './BusinessSearch';\r\nimport ResultSearchUser from './ResultSearchUser';\r\nimport ResultSearchBusiness from './ResultSearchBusiness';\r\nimport { connect } from \"react-redux\";\r\nimport { GetCurrentUser } from '../../actions/index';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport { GetCurrentUser as GetCurrentUser2 } from '../../util';\r\nimport Button from '@material-ui/core/Button';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(purple[500]),\r\n        backgroundColor: purple[500],\r\n        '&:hover': {\r\n            backgroundColor: purple[700],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n        position: \"absolute\",\r\n        top: \"-21%\",\r\n        right: \"102%\"\r\n    },\r\n}));\r\nconst Search = (props) => {\r\n    const classes = useStyles();\r\n\r\n    let users = React.createRef();\r\n    let business = React.createRef();\r\n\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n\r\n    const ChangeButtonUsers = (e) => {\r\n        e.target.classList.add(\"active\");\r\n        e.target.classList.add(\"teal\");\r\n        business.current.classList.remove(\"active\");\r\n        business.current.classList.remove(\"teal\");\r\n    }\r\n    const ChangeButtonBusiness = (e) => {\r\n        e.target.classList.add(\"active\");\r\n        e.target.classList.add(\"teal\");\r\n        users.current.classList.remove(\"active\");\r\n        users.current.classList.remove(\"teal\");\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetCurrentUser2().catch(error => { setifGoToLogin(true) });\r\n    }, [])\r\n    return (<>\r\n        {!ifGoToLogin ? <div className=\"back-search\">\r\n            <div className=\"ui pointing menu three serach_div\">\r\n                <Link to=\"/PrivateArea\">\r\n                    <ColorButton variant=\"contained\" color=\"primary\" className={classes.margin}>\r\n                        PrivateArea\r\n                        </ColorButton>\r\n                </Link>\r\n                <Link to=\"/search/users\" className=\"div_link\">\r\n                    <a className=\"item sizetab item-user\" ref={users} onClick={(e) => ChangeButtonUsers(e)}>\r\n                        Users</a>\r\n                </Link>\r\n                <Link to=\"/search/business\" className=\"div_link\">\r\n                    <a className=\"item sizetab\" ref={business} onClick={(e) => ChangeButtonBusiness(e)}>\r\n                        Business</a>\r\n                </Link>\r\n                <div className=\"place_search\">\r\n                    <Route path=\"/search/users\">\r\n                        {localStorage.getItem(\"currentUserMail\") != \"null\" ? <>  <UsersSearch />\r\n                            <div className=\"place_result\">\r\n                                <ResultSearchUser />\r\n                            </div></> : <Redirect to={'/SignIn'} />}\r\n                    </Route>\r\n                    <Route path=\"/search/business\">\r\n                        {localStorage.getItem(\"currentUserMail\") != \"null\" ? <>    <BusinessSearch />\r\n                            <div className=\"place_result\">\r\n                                <ResultSearchBusiness />\r\n                            </div></> : <Redirect to={'/SignIn'} />}\r\n                    </Route>\r\n                </div>\r\n            </div>\r\n\r\n        </div> : <Redirect to={'/SignIn'} />}</>);\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { CurrentUser: state.usersPart.CurrentUser };\r\n}\r\nexport default connect(mapStateToProps, { GetCurrentUser })(Search);\r\n\r\n\r\n\r\n// // import './Search.scss'\r\n// // import React, { useEffect } from 'react'\r\n// // import 'semantic-ui-css/semantic.min.css';\r\n// // import { Link, Route } from 'react-router-dom';\r\n// import UsersSearch from './UseresSearch';\r\n// import BusinessSearch from './BusinessSearch';\r\n// import { connect } from \"react-redux\";\r\n// import { GetCurrentUser } from '../../actions/index';\r\n// // import { Redirect, useHistory, useLocation } from 'react-router-dom';\r\n\r\n\r\n// import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import Tabs from '@material-ui/core/Tabs';\r\n// import Tab from '@material-ui/core/Tab';\r\n// import PhoneIcon from '@material-ui/icons/Phone';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import PersonPinIcon from '@material-ui/icons/PersonPin';\r\n// import HelpIcon from '@material-ui/icons/Help';\r\n// import ShoppingBasket from '@material-ui/icons/ShoppingBasket';\r\n// import ThumbDown from '@material-ui/icons/ThumbDown';\r\n// import ThumbUp from '@material-ui/icons/ThumbUp';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import Box from '@material-ui/core/Box';\r\n\r\n// function TabPanel(props) {\r\n//     const { children, value, index, ...other } = props;\r\n\r\n//     return (\r\n//         <div\r\n//             role=\"tabpanel\"\r\n//             hidden={value !== index}\r\n//             id={`scrollable-force-tabpanel-${index}`}\r\n//             aria-labelledby={`scrollable-force-tab-${index}`}\r\n//             {...other}\r\n//         >\r\n//             {value === index && (\r\n//                 <Box p={3}>\r\n//                     <Typography>{children}</Typography>\r\n//                 </Box>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// TabPanel.propTypes = {\r\n//     children: PropTypes.node,\r\n//     index: PropTypes.any.isRequired,\r\n//     value: PropTypes.any.isRequired,\r\n// };\r\n\r\n// function a11yProps(index) {\r\n//     return {\r\n//         id: `scrollable-force-tab-${index}`,\r\n//         'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n//     };\r\n// }\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//         width: '100%',\r\n//         backgroundColor: theme.palette.background.paper,\r\n//     },\r\n// }));\r\n\r\n// const Search=(props)=> {\r\n//     const classes = useStyles();\r\n//     const [value, setValue] = React.useState(0);\r\n\r\n//     const handleChange = (event, newValue) => {\r\n//         setValue(newValue);\r\n//     };\r\n\r\n//     return (\r\n//         localStorage.getItem(\"currentUserMail\") != \"null\" ? <div className={classes.root}>\r\n//             <AppBar position=\"static\" color=\"default\">\r\n//                 <Tabs\r\n//                     value={value}\r\n//                     onChange={handleChange}\r\n//                     variant=\"scrollable\"\r\n//                     scrollButtons=\"on\"\r\n//                     indicatorColor=\"primary\"\r\n//                     textColor=\"primary\"\r\n//                     aria-label=\"scrollable force tabs example\"\r\n//                 >\r\n//                     <Tab label=\"Item One\" icon={<PersonPinIcon />} {...a11yProps(0)} />\r\n//                     <Tab label=\"Item Two\" icon={<PersonPinIcon />} {...a11yProps(1)} />\r\n//                 </Tabs>\r\n//             </AppBar>\r\n//             <TabPanel value={value} index={0}>\r\n//                 <UsersSearch />\r\n\r\n//             </TabPanel>\r\n//             <TabPanel value={value} index={1}>\r\n//                 <BusinessSearch />\r\n\r\n//             </TabPanel>\r\n\r\n//         </div> : null\r\n//     );\r\n// }\r\n// const mapStateToProps = (state) => {\r\n//     return { CurrentUser: state.usersPart.CurrentUser };\r\n// }\r\n// export default connect(mapStateToProps, { GetCurrentUser })(Search);\r\n\r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\BusinessSearch.js",["219","220","221","222","223","224"],"import 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../classes/business';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport {\r\n    GetAllBusiness, SaveResultBusiness, SearchBusiness, DeleteResultBusiness,\r\n    ChangeColorName, GetCurrentUser\r\n} from '../../actions/index';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport './BusinessSearch.scss'\r\nimport { getAllCategories } from '../../util/index'\r\n\r\nconst BusinessSearch = (props) => {\r\n\r\n\r\n    let name = useRef();\r\n    let phoneNamber = useRef();\r\n    let email = useRef();\r\n    let adress = useRef();\r\n    let listCategory = useRef();\r\n    const [categoriesArr, setCategoriesArr] = useState([]);\r\n\r\n    // props.AllUsers פעם ראשונה שמבקר באתר נשלף כל המשתמשים למערך\r\n    if (props.AllBusiness.length == 0)\r\n        props.GetAllBusiness();\r\n\r\n\r\n    // פונקצית חיפוש Users\r\n    const searchBusiness = () => {\r\n\r\n        let Business = new business();\r\n        Business.name = name.current.value;\r\n        Business.phoneNamber = phoneNamber.current.value;\r\n        Business.email = email.current.value;\r\n        Business.adress = adress.current.value;\r\n        Business.listCategory = listCategory.current.getSelectedItems();\r\n        if (Business.name || Business.phoneNamber || Business.email || Business.adress || Business.listCategory.length != 0) {\r\n            props.ChangeColorName(Business.name);\r\n            props.SearchBusiness(Business, props.AllBusiness);\r\n        }\r\n        else\r\n            props.SaveResultBusiness([]);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        getAllCategories().then(scss => {\r\n            let arrName = scss.data.map((data) => data.name);\r\n            setCategoriesArr(arrName);\r\n        });\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    return (<>\r\n        {<form className=\"ui form\">\r\n            <div className=\"ui form\">\r\n                <div className=\"two fields\">\r\n                    <div className=\"field\">\r\n                        <label>Name</label>\r\n                        <input placeholder=\"Name\" type=\"text\" ref={name} type=\"text\" onKeyUp={searchBusiness} />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Address</label>\r\n                        <input placeholder=\"Address\" type=\"text\" ref={adress} type=\"text\" onKeyUp={searchBusiness} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Email</label>\r\n                    <input type=\"text\" placeholder=\"Email\" ref={email} type=\"text\" onKeyUp={searchBusiness} />\r\n                </div>\r\n                <div className=\"two fields\">\r\n                    <div className=\"field\">\r\n                        <label>Phone Number</label>\r\n                        <input placeholder=\"Phone Number\" type=\"number\" ref={phoneNamber} type=\"text\" onKeyUp={searchBusiness} />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Category</label>\r\n                        <Multiselect\r\n                            options={categoriesArr ? categoriesArr : []}\r\n                            isObject={false}\r\n                            ref={listCategory} type=\"text\"\r\n                            onSelect={searchBusiness}\r\n                            onRemove={searchBusiness}\r\n                        />\r\n                        {/* <input placeholder=\"category\" type=\"text\" ref={listCategory} type=\"text\" onKeyUp={searchBusiness} /> */}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </form>}\r\n\r\n\r\n    </>);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { CurrentUser: state.usersPart.CurrentUser, AllBusiness: state.businessPart.AllBusiness, BusinessSearch: state.businessPart.BusinessSearch };\r\n}\r\nexport default connect(mapStateToProps, { GetCurrentUser, GetAllBusiness, SaveResultBusiness, SearchBusiness, DeleteResultBusiness, ChangeColorName })(BusinessSearch);","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\LogIn\\singIn.js",["225","226","227"],"\r\n\r\n\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { GetCurrentUser, SignOut } from '../../actions/index';\r\nimport './SignIn.scss';\r\nimport React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    // backgroundImage:'url(./img/back.png)'\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#e860ff'\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: '#e860ff'\r\n  },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nconst SingIn = (props) => {\r\n\r\n  const classes = useStyles();\r\n  let password;\r\n  let mail;\r\n\r\n  const [ifManager, setifManager] = useState(false);\r\n  const [ifNoGoToLogin, setifNoGoToLogin] = useState(false);\r\n\r\n  // alerts\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  // alerts\r\n\r\n  useEffect(() => {\r\n\r\n  }, [])\r\n\r\n  const GetCurrentUser = async () => {\r\n\r\n    await props.GetCurrentUser({ \"password\": password, \"mail\": mail });\r\n\r\n    if (!props.CurrentUser)\r\n      handleClick();\r\n\r\n    else {\r\n\r\n      // אימות למנהל\r\n      let mailManager = localStorage.getItem(\"managerMail\").split(\"@\");\r\n      let mailArr = mailManager[0].split(\"\");\r\n      let mail = mailArr.filter((elem, index) => index % 2 == 0).join(\"\");\r\n      let newMail = mail + \"@\" + mailManager[1];\r\n\r\n      let idManager = localStorage.getItem(\"managerId\").split(\"\").filter((elem, index) => index % 2 == 0).join(\"\");\r\n\r\n      if (props.CurrentUser.email === newMail && props.CurrentUser.password === idManager) {\r\n        setifManager(true);\r\n        setifNoGoToLogin(true);\r\n      }\r\n      else\r\n        setifNoGoToLogin(true);\r\n\r\n    }\r\n  }\r\n\r\n  if (ifNoGoToLogin)\r\n    return ifManager ? <Redirect to={'/Manager'} /> : <Redirect to={{ pathname: \"/Search/users\" }} />;\r\n\r\n  return (\r\n    <>\r\n\r\n      {/* alerts */}\r\n\r\n      <Snackbar\r\n        open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">Sing In System</Alert>\r\n      </Snackbar>\r\n\r\n      {/* alerts */}\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n          </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onKeyUp={(e) => mail = e.target.value}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onKeyUp={(e) => password = e.target.value}\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                className={classes.submit}\r\n                onClick={async () => {\r\n                  await GetCurrentUser();\r\n                }}>\r\n                Sign In\r\n            </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link variant=\"body2\">\r\n                    Forgot password?\r\n                </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link to=\"SignUp\">\r\n                    Don't have an account? Sign Up\r\n                </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={2} md={7} className={classes.image + \" opcityandimg\"} />\r\n      </Grid>\r\n    </>\r\n\r\n\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  return { CurrentUser: state.usersPart.CurrentUser, SingUp: state.usersPart.SingUp };\r\n}\r\nexport default connect(mapStateToProps, { GetCurrentUser, SignOut })(SingIn);","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\LogIn\\SingUp.js",["228","229","230","231","232","233","234","235","236","237","238","239","240","241","242"],"import React, { useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport './SingUp.scss';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport BasicDetails from './BasicDetails';\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor:'#e860ff'\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: '#e860ff'\r\n  },\r\n}));\r\n\r\n\r\nfunction SignUp(props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n\r\n  useEffect(() => {\r\n  }, [])\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n    \r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n        <BasicDetails/>\r\n        {/* <ExpandingDetails/> */}\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12} sm={2} md={7} className={classes.image+\" opcityandimg\"} />\r\n    </Grid>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {  };\r\n}\r\nexport default connect(mapStateToProps, {  })(SignUp);","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\ActionTypes.js",[],"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\actions\\index.js",[],"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\ResultSearchUser.js",[],"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\ResultSearchBusiness.js",["243"],"import Business from \"./Business\";\r\nimport { connect } from \"react-redux\";\r\nimport { List } from 'semantic-ui-react'\r\nimport { useEffect, useState } from 'react';\r\nimport { GetCurrentUser } from '../../actions/index';\r\nimport MyLocation from \"./MyLocation\";\r\nimport { log } from \"util\";\r\n\r\nconst ResultSearchBusiness = (props) => {\r\n    // const [Location, setLocation] = useState({ lat: '', len: '' });\r\n    // const [Let, setLet] = useState('');\r\n    // const [Len, setLen] = useState('');\r\n    useEffect(() => {\r\n        // console.log('change')\r\n    }, []);\r\n\r\n    return (<>\r\n        {<List divided verticalAlign='middle'>\r\n            {props.BusinessSearch && props.BusinessSearch.map((item) => {\r\n                return (<Business ifAdd=\"true\" key={item._id} business={item} />);\r\n            })}</List>}\r\n\r\n        {/* <MyLocation setLocation={setLocation} Location={Location} /> */}\r\n        {/* {Location && Location.lat}\r\n        {Let && Let} */}\r\n    </>);\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { CurrentUser: state.usersPart.CurrentUser, BusinessSearch: state.businessPart.BusinessSearch };\r\n}\r\nexport default connect(mapStateToProps, { GetCurrentUser })(ResultSearchBusiness); ","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\classes\\user.js",[],"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\classes\\business.js",[],"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\actions\\business.js",["244","245"],"import axios from 'axios';\r\nimport * as actionTypes from '../ActionTypes'\r\n\r\nexport const GetAllBusiness = () => {\r\n    return (dispatch) => {\r\n        axios.get(\"http://localhost:4000/business\").then(succ => {\r\n            console.log(succ.data);\r\n            dispatch(SaveAllBusiness(succ.data));\r\n        }).catch(ee => {\r\n            console.log(ee.massege);\r\n        });\r\n    }\r\n}\r\nexport const SearchBusiness = (business, allBusiness) => {\r\n    return (dispatch) => {\r\n        let name = business.name || \"\";\r\n        let phoneNamber = business.phoneNamber || [];\r\n        let email = business.email || \"\";\r\n        let adress = business.adress || \"\";\r\n        let listCategory =  [];\r\n        if (business.listCategory)\r\n            business.listCategory.forEach((e)=>listCategory.push(e));\r\n        let businesses = allBusiness.filter((b) => {\r\n            return b.name.includes(name) && (b.listCategory.filter(c=> business.listCategory.indexOf(c) != -1).length>0||listCategory.length==0)\r\n                && b.email.includes(email) && b.adress.includes(adress) && b.phoneNamber.filter((e) => e.includes(phoneNamber)).length > 0\r\n        });\r\n        dispatch(SaveResultBusiness(businesses));\r\n    }\r\n\r\n}\r\n// export const AddBusiness = (business) => {\r\n//     return (dispatch) => {\r\n//         axios.post(\"http://localhost:4000/business/\",business).then((succ) => {\r\n//             console.log(succ.data);\r\n//         }).catch(ee => {\r\n//             console.log(ee.massege);\r\n\r\n//         });\r\n//     }\r\n// }\r\nexport const SaveAllBusiness = (business) => {\r\n    return {\r\n        type: actionTypes.FILL_ALL_BUSINESS,\r\n        payload: business\r\n    }\r\n}\r\nexport const SaveResultBusiness = (business) => {\r\n    return {\r\n        type: actionTypes.REFRESH_RESULT_BUSINESS,\r\n        payload: business\r\n    }\r\n}\r\n\r\nexport const SelectedBusiness = (business) => {\r\n    return {\r\n        type: actionTypes.SELECTED_BUSINESS,\r\n        payload: business\r\n    }\r\n}\r\nexport const NoSelectedBusiness = () => {\r\n    return {\r\n        type: actionTypes.SELECTED_BUSINESS,\r\n        payload: null\r\n    }\r\n}\r\nexport const DeleteResultBusiness = () => {\r\n    return {\r\n        type: actionTypes.DELETE_RESULT_BUSINESS,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const ChangeColorName = (name) => {\r\n    return {\r\n        type: actionTypes.CHANGE_COLOR_NAME,\r\n        payload: name\r\n    }\r\n}\r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\actions\\users.js",["246","247","248","249"],"import axios from 'axios';\r\nimport * as actionTypes from '../ActionTypes'\r\n\r\nexport const GetAllUsers = () => {\r\n    return (dispatch) => {\r\n        axios.get(\"http://localhost:4000/users\").then(succ => {\r\n            console.log(succ.data);\r\n            dispatch(SaveAllUsers(succ.data));\r\n        }).catch(ee => {\r\n            console.log(ee.massege);\r\n        });\r\n    }\r\n}\r\nexport const GetCurrentUser = (user) => {\r\n    return async (dispatch) => {\r\n        // { params: { password: user.password,mail:user.mail } }\r\n        // let succ = await axios.get(`http://localhost:4000/users/getByPassword/${user.password}&${user.mail}`);\r\n        axios.get(`http://localhost:4000/users/getByPassword/${user.password}&${user.mail}`).then((data, error) => {\r\n            if (data.status == 400)\r\n                console.log(\"kkkkkkkkkkk\");\r\n\r\n            if (data.status == 200)\r\n                dispatch(SignIn(data.data));\r\n        })\r\n\r\n\r\n\r\n    }\r\n}\r\nexport const AddUser = (user) => {\r\n    return (dispatch) => {\r\n        axios.post(\"http://localhost:4000/users\", user).then((succ) => {\r\n            console.log(succ.data);\r\n            if (succ.data != null) {\r\n                dispatch(SignIn(succ.data));\r\n                dispatch(IfExist(false));\r\n                dispatch(ErrorInAdd(false));\r\n            }\r\n\r\n        }).catch(ee => {\r\n            console.log(ee.massege);\r\n            if (ee.response.status == 404) {\r\n                dispatch(IfExist(true));\r\n                dispatch(ErrorInAdd(false));\r\n            }\r\n\r\n            if (ee.response.status == 400) {\r\n                dispatch(ErrorInAdd(true));\r\n                dispatch(IfExist(false));\r\n            }\r\n\r\n        });\r\n    }\r\n}\r\nexport const SearchUsers = (user, allUsers) => {\r\n    return (dispatch) => {\r\n        let firstName = user.firstName || \"\";\r\n        let lastName = user.lastName || \"\";\r\n        let phoneNamber = user.phoneNamber || \"\";\r\n        let email = user.email || \"\";\r\n        let adress = user.adress || \"\";\r\n        let users = allUsers.filter((u) => {\r\n            return u.firstName.includes(firstName) && u.lastName.includes(lastName)\r\n                && u.email.includes(email) && u.adress.includes(adress) && u.phoneNamber.filter((e) => e.includes(phoneNamber)).length > 0\r\n        });\r\n        dispatch(SaveResultUsers(users));\r\n    }\r\n\r\n}\r\n\r\nexport const SaveAllUsers = (users) => {\r\n    return {\r\n        type: actionTypes.FILL_ALL_USERS,\r\n        payload: users\r\n    }\r\n}\r\nexport const SaveResultUsers = (users) => {\r\n    return {\r\n        type: actionTypes.REFRESH_RESULT,\r\n        payload: users\r\n    }\r\n}\r\n\r\nexport const SelectedUser = (user) => {\r\n    return {\r\n        type: actionTypes.SELECTED_USER,\r\n        payload: user\r\n    }\r\n}\r\nexport const NoSelectedUser = () => {\r\n    return {\r\n        type: actionTypes.SELECTED_USER,\r\n        payload: null\r\n    }\r\n}\r\nexport const DeleteResultUser = () => {\r\n    return {\r\n        type: actionTypes.DELETE_RESULT_USER,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const ChangeColorFirstName = (name) => {\r\n    return {\r\n        type: actionTypes.CHANGE_COLOR_FIRST_NAME,\r\n        payload: name\r\n    }\r\n}\r\nexport const ChangeColorLastName = (name) => {\r\n    return {\r\n        type: actionTypes.CHANGE_COLOR_LAST_NAME,\r\n        payload: name\r\n    }\r\n}\r\nexport const SignIn = (user) => {\r\n    return {\r\n        type: actionTypes.SING_IN,\r\n        payload: user\r\n    }\r\n}\r\nexport const SignOut = () => {\r\n    return {\r\n        type: actionTypes.SING_OUT,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const IfExist = (ifExist) => {\r\n    return {\r\n        type: actionTypes.IF_EXIST,\r\n        payload: ifExist\r\n    }\r\n}\r\nexport const ErrorInAdd = (ifErrorInAdd) => {\r\n    return {\r\n        type: actionTypes.IF_ERROR_IN_ADD,\r\n        payload: ifErrorInAdd\r\n    }\r\n}","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\Business.js",["250","251","252","253","254","255","256","257","258","259","260","261","262"],"import { connect } from \"react-redux\";\r\nimport './Business.scss';\r\nimport { SelectedBusiness, ChangeColorName } from '../../actions/index';\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { Button, Image, Modal, List } from 'semantic-ui-react';\r\nimport ico from './img/alex.png';\r\nimport { AddHistoryBusiness } from '../../util/index';\r\n\r\nconst Business = (props) => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    let indexName = props.business.name.indexOf(props.ColorName);\r\n    let start = props.business.name.substring(0, indexName);\r\n    let end = props.business.name.substring(indexName + props.ColorName.length, props.business.name.length);\r\n    const checkName = (name) => {\r\n        return name[0] >= 'A' && name[0] <= 'Z' || name[0] >= 'a' && name[0] <= 'z';\r\n    }\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n    return (\r\n        <List.Item key={props.business._id}>\r\n            <List.Content floated='right'>\r\n                <Modal\r\n                    onClose={() => setOpen(false)}\r\n                    onOpen={() => setOpen(true)}\r\n                    open={open}\r\n                    trigger={<div>\r\n                        <div className=\"place_business\" onClick={() => {\r\n                            props.SelectedBusiness(props.business)\r\n                            AddHistoryBusiness(localStorage.getItem(\"currentUserId\"), props.business._id)\r\n                            }}>\r\n                            <p className=\"display\">&nbsp;</p>\r\n                            <p className=\"display\">{checkName(props.business.name) ? start : end}</p>\r\n                            {!checkName(props.business.name) && (end[0] == ' ' || props.ColorName[props.ColorName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                            <p className=\"color_name display\">{props.ColorName}</p>\r\n                            {checkName(props.business.name) && (end[0] == ' ' || props.ColorName[props.ColorName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                            <p className=\"display\">{checkName(props.business.name) ? end : start}</p>\r\n                            <img className=\"img_ico\" src={ico}></img>\r\n                        </div>\r\n                    </div>}\r\n                >\r\n                    <div className=\"div_content\">\r\n                        <div className=\"name_business\">\r\n                            <p className=\"place_name\">{props.business.name}</p>\r\n                        </div>\r\n                        <div className=\"img_business\">\r\n                            <Image size='medium' src={ico} wrapped className=\"place_img\" />\r\n                        </div>\r\n                    </div>\r\n                    <Modal.Actions>\r\n                        <div>\r\n                            <div className=\"div-ico\" data-tooltip=\"הוסף לאנשי קשר\">\r\n                                <i class=\"user plus icon i\" ></i>\r\n                            </div>\r\n                            <div className=\"div-ico\" data-tooltip=\"דווח על תקלה\">\r\n                                <i class=\"exclamation triangle icon\"></i>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Modal.Actions>\r\n\r\n                    <h2 className=\"place_detailes\">\r\n\r\n                        <div className=\"div_all\">\r\n                            <i class=\"phone icon\"></i>\r\n                            <div className=\"place_div\">\r\n                                <p> {props.business.phoneNamber}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"div_all\">\r\n                            <div className=\"place_div\">\r\n                                <i class=\"envelope icon\"></i>\r\n                                <p><a href=\"mailto:abc@example.com?subject = Feedback&body = Message\">{props.business.email}</a></p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"div_all\">\r\n                            <i class=\"map marker alternate icon\"></i>\r\n                            <div className=\"place_div\"> <p> {props.business.adress}</p> </div>\r\n                        </div>\r\n\r\n                    </h2>\r\n                </Modal>\r\n            </List.Content>\r\n        </List.Item>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { ColorName: state.businessPart.ColorName };\r\n}\r\nexport default connect(mapStateToProps, { SelectedBusiness, ChangeColorName })(Business);\r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\User.js",["263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285"],"import { connect } from \"react-redux\";\r\nimport './User.scss';\r\nimport { SelectedUser, ChangeColorFirstName, ChangeColorLastName } from '../../actions/index';\r\nimport { useRef, useEffect } from \"react\";\r\nimport { Link, Route } from 'react-router-dom';\r\nimport ico from './img/alex.png';\r\nimport React from 'react';\r\nimport { AddHistory } from '../../util/index';\r\nimport { Button, Image, Modal, List } from 'semantic-ui-react';\r\n\r\nconst User = (props) => {\r\n\r\n    let indexName = props.user.firstName.indexOf(props.ColorFirstName);\r\n    let start = props.user.firstName.substring(0, indexName);\r\n    let end = props.user.firstName.substring(indexName + props.ColorFirstName.length, props.user.firstName.length);\r\n    let indexLastName = props.user.lastName.indexOf(props.ColorLastName);\r\n    let Laststart = props.user.lastName.substring(0, indexLastName);\r\n    let Lastend = props.user.lastName.substring(indexLastName + props.ColorLastName.length, props.user.lastName.length);\r\n    const checkName = (name) => {\r\n        return name[0] >= 'A' && name[0] <= 'Z' || name[0] >= 'a' && name[0] <= 'z';\r\n    }\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    return (\r\n        <List.Item key={props.user._id}>\r\n            <List.Content floated='right'>\r\n                <Modal\r\n                    onClose={() => setOpen(false)}\r\n                    onOpen={() => setOpen(true)}\r\n                    open={open}\r\n                    trigger={<div ><div className=\"place_user\" onClick={() => {\r\n                        props.SelectedUser(props.user);\r\n                        if(props.ifAdd==\"true\")\r\n                        AddHistory(localStorage.getItem(\"currentUserId\"), props.user._id)\r\n                    }}>\r\n                        <p className=\"display\">{checkName(props.user.lastName) ? Laststart : Lastend}</p>\r\n                        {!checkName(props.user.lastName) && (Lastend[0] == ' ' || props.ColorLastName[props.ColorLastName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n                        {checkName(props.user.firstName) && (Laststart[Laststart.length - 1] == ' ' || props.ColorLastName[props.ColorLastName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                        <p className=\"color_name display\">{props.ColorLastName}</p>\r\n                        {!checkName(props.user.lastName) && (Laststart[Laststart.length - 1] == ' ' || props.ColorLastName[props.ColorLastName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n                        {checkName(props.user.lastName) && (Lastend[0] == ' ' || props.ColorLastName[props.ColorLastName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                        <p className=\"display\">{checkName(props.user.lastName) ? Lastend : Laststart}</p>\r\n                        <p className=\"display\">&nbsp;</p>\r\n                        <p className=\"display\">{checkName(props.user.firstName) ? start : end}</p>\r\n\r\n                        {checkName(props.user.lastName) && (start[start.length - 1]) == ' ' ? <p className=\"display\">&nbsp;</p> : null}\r\n                        {!checkName(props.user.lastName) && (end[0] == ' ' || props.ColorFirstName[props.ColorFirstName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                        <p className=\"color_name display\">{props.ColorFirstName}</p>\r\n                        {checkName(props.user.lastName) && (end[0] == ' ' || props.ColorFirstName[props.ColorFirstName.length - 1] == ' ') ? <p className=\"display\">&nbsp;</p> : null}\r\n                        {!checkName(props.user.lastName) && (start[start.length - 1]) == ' ' ? <p className=\"display\">&nbsp;</p> : null}\r\n\r\n                        <p className=\"display\">{checkName(props.user.firstName) ? end : start}</p>\r\n                        <img className=\"img_ico\" src={ico}></img>\r\n                    </div>\r\n\r\n                    </div>}\r\n                >\r\n                    <div className=\"div_content\">\r\n\r\n                        <div className=\"name_user\">\r\n                            <p className=\"place_name\">{props.user.firstName} {props.user.lastName}</p>\r\n                        </div>\r\n                        <div className=\"img_user\">\r\n                            <Image size='medium' src={ico} wrapped className=\"place_img\" />\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <Modal.Actions>\r\n                        <div>\r\n                            <div className=\"div-ico\" data-tooltip=\"הוסף לאנשי קשר\">\r\n                                <i class=\"user plus icon i\" ></i>\r\n                            </div>\r\n                            <div className=\"div-ico\" data-tooltip=\"דווח על תקלה\">\r\n                                <i class=\"exclamation triangle icon\"></i>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Modal.Actions>\r\n\r\n                    <h2 className=\"place_detailes\">\r\n\r\n                        <div className=\"div_all\">\r\n                            <i class=\"phone icon\"></i>\r\n                            <div className=\"place_div\">\r\n                                <p> {props.user.phoneNamber}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"div_all\">\r\n                            <div className=\"place_div\">\r\n                                <i class=\"envelope icon\"></i>\r\n                                <p><a href=\"mailto:abc@example.com?subject = Feedback&body = Message\">{props.user.email}</a></p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"div_all\">\r\n                            <i class=\"map marker alternate icon\"></i>\r\n                            <div className=\"place_div\"> <p> {props.user.adress}</p> </div>\r\n                        </div>\r\n                    </h2>\r\n                </Modal>\r\n            </List.Content>\r\n        </List.Item>\r\n        // style={{ textDecoration: 'none', color: 'black' }}\r\n\r\n    );\r\n    // </Link>\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { ColorFirstName: state.usersPart.ColorFirstName, ColorLastName: state.usersPart.ColorLastName };\r\n}\r\nexport default connect(mapStateToProps, { SelectedUser, ChangeColorFirstName, ChangeColorLastName })(User);\r\n\r\n\r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\util\\index.js",[],"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\util\\UtilUser.js",["286"],"import axios from 'axios';\r\nimport Geocode from \"react-geocode\";\r\n\r\nexport const GetCurrentUser = async () => {\r\n    return axios.get(`http://localhost:4000/users/${localStorage.getItem(\"currentUserId\")}`);\r\n}\r\nexport const GetCurrentUserById = async (id) => {\r\n    return axios.get(`http://localhost:4000/users/${id}`);\r\n}\r\nexport const AddHistory = async (currentId, userId) => {\r\n\r\n    axios.put(`http://localhost:4000/users/addToHistory/${currentId}&${userId}`);\r\n\r\n}\r\nexport const AddHistoryBusiness = async (currentId, businessId) => {\r\n\r\n    axios.put(`http://localhost:4000/users/addToHistoryBusiness/${currentId}&${businessId}`);\r\n\r\n}\r\nexport const AddUser = async (user) => {\r\n    return axios.post(\"http://localhost:4000/users\", user)\r\n}\r\n\r\nexport const DeleteHistoryUsers = async (index) => {\r\n    return axios.put(`http://localhost:4000/users/deleteHistoryUser/${localStorage.getItem(\"currentUserId\")}&${index}`);\r\n}\r\nexport const UpdateUser = async (id,user) => {\r\n    return axios.put(`http://localhost:4000/users/${id}`, user);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const ChangeAdrres = async (address,setLen,setLet) => {\r\n//     let location;\r\n//     Geocode.fromAddress(address).then(\r\n//         (response) => {\r\n//             const { lat, lng } = response.results[0].geometry.location;\r\n//             console.log(lat, lng);\r\n//             // location = {\r\n//             //     \"latitude\":lat,\r\n//             //     \"longitude\": lng\r\n//             // }\r\n//             setLet(lat);\r\n//             setLen(lng)\r\n//             return location\r\n//         },\r\n//         (error) => {\r\n//             console.error(error);\r\n//         }\r\n//     );\r\n// }\r\n\r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\PrivateArea.js",["287","288"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport UpdatePersonalDetails from './UpdatePersonalDetails';\r\nimport BusinessInformationUpdate from './BusinessInformationUpdate';\r\nimport AddingBusiness from './AddingBusiness';\r\nimport SearchHistory from './SearchHistory';\r\nimport ScrollableTabsButtonAuto from './SearchHistory';\r\nimport { connect } from \"react-redux\";\r\nimport { ChangeUpdateBuisness } from '../../actions/index'\r\nimport { GetCurrentUser } from '../../util';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n    root: {\r\n        color: '#eaeaf0',\r\n        display: 'flex',\r\n        height: 22,\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        color: '#784af4',\r\n    },\r\n    circle: {\r\n        width: 8,\r\n        height: 8,\r\n        borderRadius: '50%',\r\n        backgroundColor: 'currentColor',\r\n    },\r\n    completed: {\r\n        color: '#784af4',\r\n        zIndex: 1,\r\n        fontSize: 18,\r\n    },\r\n});\r\n\r\nfunction QontoStepIcon(props) {\r\n    const classes = useQontoStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n            })}\r\n        >\r\n            {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n    active: PropTypes.bool,\r\n    completed: PropTypes.bool,\r\n};\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 22,\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    line: {\r\n        height: 3,\r\n        border: 0,\r\n        backgroundColor: '#eaeaf0',\r\n        borderRadius: 1,\r\n    },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: '#ccc',\r\n        zIndex: 1,\r\n        color: '#fff',\r\n        width: 50,\r\n        height: 50,\r\n        display: 'flex',\r\n        borderRadius: '50%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n    },\r\n    completed: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons = {\r\n        1: <SettingsIcon />,\r\n        2: <GroupAddIcon />,\r\n        3: <VideoLabelIcon />,\r\n        4: <VideoLabelIcon />\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n                [classes.completed]: completed,\r\n            })}\r\n        >\r\n            {icons[String(props.icon)]}\r\n        </div>\r\n    );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n\r\n    active: PropTypes.bool,\r\n\r\n    completed: PropTypes.bool,\r\n\r\n    icon: PropTypes.node,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction getSteps() {\r\n    return ['Update Personal Details', 'Business Information Update', 'Adding Business', 'Search History'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n    switch (step) {\r\n        case 0:\r\n            return <UpdatePersonalDetails />;\r\n        case 1:\r\n            return <BusinessInformationUpdate />;\r\n        case 2:\r\n            return <AddingBusiness />;\r\n        case 3:\r\n            return <ScrollableTabsButtonAuto />;\r\n        default:\r\n            return <UpdatePersonalDetails />;\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction PrivateArea(props) {\r\n\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(4);\r\n    const steps = getSteps();\r\n\r\n\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n\r\n    const handleNext = (index) => {\r\n        setActiveStep(index);\r\n    };\r\n\r\n    useEffect(() => {\r\n        GetCurrentUser().catch(error => { setifGoToLogin(true) });\r\n    }, []);\r\n    \r\n    return (\r\n        !ifGoToLogin ? <div className={classes.root}>\r\n            <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\r\n                {steps.map((label, index) => (\r\n                    <Step key={index} onClick={() => handleNext(index)}>\r\n                        <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n\r\n        </div> : <Redirect to={'/SignIn'} />\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { updateBuisness: state.businessPart.updateBuisness };\r\n}\r\nexport default connect(mapStateToProps, { ChangeUpdateBuisness })(PrivateArea);\r\n\r\n\r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\BusinessInformationUpdate.js",["289"],"import ListBuisness from \"./UpdateBuisness/ListBuisness\";\r\nimport { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { ChangeUpdateBuisness } from '../../actions/index';\r\n\r\n\r\nconst BusinessInformationUpdate = (props) => {\r\n\r\n\r\n    return (<>\r\n        <ListBuisness/>\r\n\r\n    </>);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { updateBuisness: state.businessPart.updateBuisness };\r\n}\r\nexport default connect(mapStateToProps, { ChangeUpdateBuisness })(BusinessInformationUpdate);\r\n\r\n\r\n\r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\AddingBusiness.js",["290","291","292","293","294","295"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../classes/business'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport '../LogIn/SingUp.scss';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport axios from 'axios';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { AddBusiness, getAllCategories } from '../../util/index';\r\n\r\n\r\n//לא לשכוח\r\n//   img\r\n//   advertising\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\nfunction AddingBusiness(props) {\r\n    const classes = useStyles();\r\n\r\n\r\n    let Business = new business();\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const name = register('name', { required: \"This is required.\", minLength: { value: 2, message: \"Min 2\" }, maxLength: { value: 11, message: \"Max 11\" } })\r\n    const adress = register('adress', { required: \"This is required.\" })\r\n    const email = register('email', { required: \"This is required.\", pattern: { value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, message: \"Email No Valid\" } })\r\n    const phone = register('phone', { required: \"This is required.\", pattern: { value: /0[0-9]{9}/, message: \"Phone No Valid\" } })\r\n    const category = register('category', { minLength: { value: 1, message: \"hhhhh\" } })\r\n\r\n\r\n    const AddBusinessFunc = async (business) => {\r\n\r\n        AddBusiness(business).then((succ) => {\r\n            console.log(succ.data);\r\n\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"Adding Success\");\r\n            handleClick();\r\n\r\n        }).catch(ee => {\r\n\r\n            console.log(ee.massege);\r\n\r\n            settypeAlert(\"error\");\r\n            setmasseg(ee.response.data)\r\n\r\n            handleClick();\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const onSubmit = data => {\r\n        if (listCategory.current.getSelectedItems().length == 0)\r\n            setIfSelect(true);\r\n        else {\r\n            Business.phoneNamber = [];\r\n            Business.phoneNamber.push(data.phone);\r\n            Business.userId = localStorage.getItem(\"currentUserId\");\r\n            Business.listCategory = listCategory.current.getSelectedItems();\r\n            Business.name = data.name;\r\n            Business.email = data.email;\r\n            Business.adress = data.adress;\r\n            AddBusinessFunc(Business);\r\n        }\r\n    }\r\n\r\n    let listCategory = useRef([]);\r\n    const [categoriesArr, setCategoriesArr] = useState([]);\r\n    const [ifSelect, setIfSelect] = useState(false);\r\n\r\n    const [check, setCheck] = useState(false);\r\n\r\n    onchange = (e) => {\r\n        console.log(e);\r\n        setCheck(e.target.checked);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        getAllCategories().then(scss => {\r\n            let arrName = scss.data.map((data) => data.name);\r\n            setCategoriesArr(arrName);\r\n        });\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n\r\n\r\n    \r\n    return (<>\r\n        {/* alerts */}\r\n\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n        </Snackbar>\r\n\r\n        {/* alerts */}\r\n\r\n        {/* form */}\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        autoComplete=\"fname\"\r\n                        name=\"name\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"name\"\r\n                        {...name}\r\n                    />\r\n                    <ErrorMessage errors={errors} name=\"name\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"adress\"\r\n                        label=\"Address\"\r\n                        name=\"adress\"\r\n                        autoComplete=\"lname\"\r\n                        {...adress}\r\n                    />\r\n                    <ErrorMessage errors={errors} name=\"adress\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        {...email}\r\n                    />\r\n                    <ErrorMessage errors={errors} name=\"email\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n                    {props.ifExist ? <p className=\"redColor\">This Email Alrady Exist</p> : null}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Multiselect\r\n                        onSelect={(e) => setIfSelect(false)}\r\n                        label=\"Category\"\r\n                        name=\"category\"\r\n                        options={categoriesArr ? categoriesArr : []}\r\n                        isObject={false}\r\n                        ref={listCategory} type=\"text\"\r\n                    />\r\n                    {ifSelect && <p className=\"redColor\">This is required.</p>}\r\n\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"phone\"\r\n                        label=\"Phone Namber\"\r\n                        name=\"phone\"\r\n                        autoComplete=\"phone\"\r\n                        {...phone}\r\n                    />\r\n                    <ErrorMessage errors={errors} name=\"phone\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n            {props.errorInAdd ? <p className=\"redColor\">Error System</p> : null}\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n            > Sign Up</Button>\r\n\r\n        </form>\r\n        {/* form */}\r\n    </>\r\n\r\n\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {};\r\n}\r\nexport default connect(mapStateToProps, {})(AddingBusiness);","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdatePersonalDetails.js",["296","297","298","299","300","301"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport { AddUser } from '../../actions/index';\r\nimport user from '../classes/user';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport '../LogIn/SingUp.scss';\r\nimport { IfExist, ErrorInAdd } from '../../actions/index';\r\nimport axios from 'axios';\r\nimport { Redirect, useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { GetCurrentUser } from '../../util/index';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { UpdateUser, GetCurrentUserById } from '../../util/index';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nfunction UpdatePersonalDetails(props) {\r\n\r\n    // עיצוב\r\n    const classes = useStyles();\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n\r\n    const { id } = useParams();\r\n\r\n\r\n    // משתנה לעדכון \r\n    let updateUser = new user();\r\n    updateUser.firstName = null;\r\n    updateUser.lastName = null;\r\n    updateUser.password = null;\r\n    updateUser.phoneNamber = null;\r\n    updateUser.adress = null;\r\n\r\n\r\n    // טופס\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const firstName = register('firstName', { minLength: { value: 2, message: \"Min 2\" }, maxLength: { value: 11, message: \"Max 11\" } })\r\n    const lastName = register('lastName', { minLength: { value: 2, message: \"Min 2\" }, maxLength: { value: 10, message: \"Max 10\" } })\r\n    const email = register('email', { pattern: { value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, message: \"Email No Valid\" } })\r\n    const phone = register('phone', { pattern: { value: /0[0-9]{9}/, message: \"Phone No Valid\" } })\r\n    const password = register('password', { minLength: { value: 5, message: \"Min 5\" }, maxLength: { value: 5, message: \"Max 5\" }, pattern: { value: /[0-9a-zA-Z]{5}/, message: \"Make sure it's at least 5 characters OR characters including a number , a lowercase letter and a upperrcase letter\" } })\r\n    const address = register('address');\r\n\r\n\r\n    // פונקצית העדכון\r\n    const onSubmit = async data => {\r\n\r\n        data.ifMessege = data.ifMessege === \"\" ? currentUser.ifMessege : data.ifMessege;\r\n        if (updateUser.firstName === \"\" || updateUser.lastName === \"\" || updateUser.adress === \"\" || updateUser.phoneNamber === \"\" || updateUser.password === \"\") {\r\n            settypeAlert(\"error\");\r\n            setmasseg(\"ALL INPUT IS REQUIRED\");\r\n            handleClick();\r\n        }\r\n        else {\r\n            UpdateUser(id?id:localStorage.getItem(\"currentUserId\"), data).then(succ => {\r\n\r\n                settypeAlert(\"success\");\r\n                setmasseg(\"Updating Success\");\r\n                handleClick();\r\n\r\n            }).catch(error => {\r\n\r\n                settypeAlert(\"error\");\r\n                setmasseg(error.response.data)\r\n                handleClick();\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const onKeyUp = (e, type) => {\r\n\r\n        updateUser[type] = e.target.value;\r\n        // e.target.value = updateUser[type];\r\n        // if (updateUser[type] == '')\r\n        //     updateUser[type] = null;\r\n    }\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n\r\n    useEffect(() => {\r\n\r\n        if (id)\r\n            GetCurrentUserById(id).then(data => {\r\n                setCurrentUser(data.data);\r\n\r\n            }).catch(() => {\r\n                setifGoToLogin(true);\r\n            });\r\n\r\n        else\r\n            // שליפת המשתמש הנוכחי\r\n            GetCurrentUser().then(data => {\r\n                setCurrentUser(data.data);\r\n\r\n            }).catch(() => {\r\n                setifGoToLogin(true);\r\n            });\r\n\r\n        return (props.IfExist(false), props.ErrorInAdd(false));\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* alerts */}\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n            </Snackbar>\r\n            {/* alerts */}\r\n\r\n            {ifGoToLogin ? <Redirect to={'/SignIn'} /> : currentUser && <form className={classes.form} noValidate onSubmit={handleSubmit(() => onSubmit(updateUser))}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            autoComplete=\"fname\"\r\n                            name=\"firstName\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"firstName\"\r\n                            label=\"First Name\"\r\n                            defaultValue={currentUser.firstName}\r\n                            onKeyUp={(e) => onKeyUp(e, \"firstName\")}\r\n                            {...firstName}\r\n                        // onLoad={() => updateUser.firstName = currentUser.firstName}\r\n                        />\r\n                        <p></p>\r\n                        <ErrorMessage errors={errors} name=\"firstName\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"lastName\"\r\n                            label=\"Last Name\"\r\n                            name=\"lastName\"\r\n                            autoComplete=\"lname\"\r\n                            defaultValue={currentUser.lastName}\r\n                            onKeyUp={(e) => onKeyUp(e, \"lastName\")}\r\n                            {...lastName}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"lastName\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            defaultValue={currentUser.email}\r\n                            onKeyUp={(e) => onKeyUp(e, \"email\")}\r\n                            {...email}\r\n                            disabled=\"true\"\r\n                        />\r\n\r\n                        <ErrorMessage errors={errors} name=\"email\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n                        {props.ifExist ? <p className=\"redColor\">This Email Alrady Exist</p> : null}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            autoComplete=\"password\"\r\n                            name=\"password\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            defaultValue={currentUser.password}\r\n                            onKeyUp={(e) => onKeyUp(e, \"password\")}\r\n                            {...password}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"password\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"phone\"\r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            autoComplete=\"phone\"\r\n                            defaultValue={currentUser.phoneNamber}\r\n                            onKeyUp={(e) => onKeyUp(e, \"phoneNamber\")}\r\n                            {...phone}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"phone\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            autoComplete=\"fname\"\r\n                            name=\"address\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"address\"\r\n                            label=\"Address\"\r\n                            defaultValue={currentUser.adress}\r\n                            onKeyUp={(e) => onKeyUp(e, \"adress\")}\r\n                            {...address}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox defaultChecked={currentUser.ifMessege}\r\n                                color=\"primary\" onClick={(e) => {\r\n                                    updateUser.ifMessege = e.target.checked\r\n                                }} />}\r\n                            label=\"I want to be notified if they searched for me\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                {props.errorInAdd ? <p className=\"redColor\">Error System</p> : null}\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                    Update\r\n          </Button>\r\n\r\n            </form>}\r\n        </>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { ifExist: state.usersPart.IfExist, errorInAdd: state.usersPart.ErrorInAdd };\r\n}\r\nexport default connect(mapStateToProps, { AddUser, IfExist, ErrorInAdd })(UpdatePersonalDetails);\r\n\r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\SearchHistory.js",["302","303","304"],"\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport axios from 'axios';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport Users from './Histories/Users';\r\nimport Buisness from './Histories/Buisness';\r\nimport { GetCurrentUser } from '../../util/index';\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\n\r\nconst SearchHistory = (props) => {\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        GetCurrentUser().then(data => {\r\n            setCurrentUser(data.data);\r\n        }).catch(() => {\r\n            setifGoToLogin(true);\r\n        });\r\n\r\n    }, []);\r\n\r\n    \r\n    return (<>\r\n        {ifGoToLogin ? <Redirect to={'/SignIn'} /> : currentUser ?\r\n            <>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\" color=\"default\" width=\"22%\">\r\n                        <Tabs\r\n                            value={value}\r\n                            onChange={handleChange}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            variant=\"scrollable\"\r\n                            scrollButtons=\"auto\"\r\n                            aria-label=\"scrollable auto tabs example\"\r\n                        >\r\n                            <Tab label=\"Users\"  {...a11yProps(0)} />\r\n                            <Tab label=\"Business\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}><Users /></TabPanel>\r\n                    <TabPanel value={value} index={1}><Buisness /></TabPanel>\r\n                </div>\r\n            </>\r\n            : null}\r\n    </>);\r\n}\r\nexport default SearchHistory;\r\n\r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Histories\\Users.js",["305","306","307","308","309","310"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Users.scss'\r\nimport { GetCurrentUser, DeleteHistoryUsers } from '../../../util/index';\r\nimport User from \"../../search/User\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n    style: {\r\n        maxWidth: \"32%\"\r\n    }\r\n}));\r\n\r\nconst Users = (props) => {\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    // const [dense, setDense] = React.useState(false);\r\n    const [secondary, setSecondary] = React.useState(false);\r\n\r\n    const GetCuccentUserFunc = async () => {\r\n\r\n        GetCurrentUser().then(succ => setCurrentUser(succ.data)).catch(() => setifGoToLogin(true));\r\n\r\n    }\r\n    const DeleteHistoryFunc = async (index) => {\r\n\r\n        DeleteHistoryUsers(index).then(succ => {\r\n            if (succ.status == 200)\r\n                GetCuccentUserFunc();\r\n        })\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetCuccentUserFunc();\r\n    }, []);\r\n\r\n    return (<>\r\n        {ifGoToLogin ? <Redirect to={'/SingIn'} /> : currentUser ?\r\n            <>\r\n                <Grid item xs={12} md={6}>\r\n                    <div className={classes.demo}>\r\n                        <List>\r\n                            {\r\n                                currentUser.lastSearchUsers.map((item, index) => {\r\n                                    if (index < 10)\r\n                                        return (<ListItem>\r\n                                            <ListItemAvatar>\r\n                                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => DeleteHistoryFunc(index)}>\r\n                                                    <DeleteIcon style={{ \"font-size\": \"1.5em\" }} />\r\n                                                </IconButton>\r\n\r\n                                            </ListItemAvatar>\r\n                                            {/* <p>{item.date}</p> */}\r\n                                            <ListItemText\r\n                                                primary={<User ifAdd=\"false\" user={item.userSearch} key={index} />}\r\n                                                secondary={secondary ? 'Secondary text' : null}\r\n                                            />\r\n                                        </ListItem>)\r\n                                })\r\n                            }\r\n                        </List>\r\n                    </div>\r\n                </Grid>\r\n            </>\r\n            : null}\r\n\r\n    </>);\r\n}\r\n\r\nexport default Users;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import List from '@material-ui/core/List';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\n// import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import FormGroup from '@material-ui/core/FormGroup';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import FolderIcon from '@material-ui/icons/Folder';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//     maxWidth: 752,\r\n//   },\r\n//   demo: {\r\n//     backgroundColor: theme.palette.background.paper,\r\n//   },\r\n//   title: {\r\n//     margin: theme.spacing(4, 0, 2),\r\n//   },\r\n// }));\r\n\r\n// function generate(element) {\r\n//   return [0, 1, 2].map((value) =>\r\n//     React.cloneElement(element, {\r\n//       key: value,\r\n//     }),\r\n//   );\r\n// }\r\n\r\n// export default function InteractiveList() {\r\n//   const classes = useStyles();\r\n//   const [dense, setDense] = React.useState(false);\r\n//   const [secondary, setSecondary] = React.useState(false);\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <FormGroup row>\r\n//         <FormControlLabel\r\n//           control={\r\n//             <Checkbox checked={dense} onChange={(event) => setDense(event.target.checked)} />\r\n//           }\r\n//           label=\"Enable dense\"\r\n//         />\r\n//         <FormControlLabel\r\n//           control={\r\n//             <Checkbox\r\n//               checked={secondary}\r\n//               onChange={(event) => setSecondary(event.target.checked)}\r\n//             />\r\n//           }\r\n//           label=\"Enable secondary text\"\r\n//         />\r\n//       </FormGroup>\r\n//       <Grid container spacing={2}>\r\n//         <Grid item xs={12} md={6}>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             Text only\r\n//           </Typography>\r\n//           <div className={classes.demo}>\r\n//             <List dense={dense}>\r\n//               {generate(\r\n//                 <ListItem>\r\n//                   <ListItemText\r\n//                     primary=\"Single-line item\"\r\n//                     secondary={secondary ? 'Secondary text' : null}\r\n//                   />\r\n//                 </ListItem>,\r\n//               )}\r\n//             </List>\r\n//           </div>\r\n//         </Grid>\r\n//         <Grid item xs={12} md={6}>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             Icon with text\r\n//           </Typography>\r\n//           <div className={classes.demo}>\r\n//             <List dense={dense}>\r\n//               {generate(\r\n//                 <ListItem>\r\n//                   <ListItemIcon>\r\n//                     <FolderIcon />\r\n//                   </ListItemIcon>\r\n//                   <ListItemText\r\n//                     primary=\"Single-line item\"\r\n//                     secondary={secondary ? 'Secondary text' : null}\r\n//                   />\r\n//                 </ListItem>,\r\n//               )}\r\n//             </List>\r\n//           </div>\r\n//         </Grid>\r\n//       </Grid>\r\n//       <Grid container spacing={2}>\r\n//         <Grid item xs={12} md={6}>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             Avatar with text\r\n//           </Typography>\r\n//           <div className={classes.demo}>\r\n//             <List dense={dense}>\r\n//               {generate(\r\n//                 <ListItem>\r\n//                   <ListItemAvatar>\r\n//                     <Avatar>\r\n//                       <FolderIcon />\r\n//                     </Avatar>\r\n//                   </ListItemAvatar>\r\n//                   <ListItemText\r\n//                     primary=\"Single-line item\"\r\n//                     secondary={secondary ? 'Secondary text' : null}\r\n//                   />\r\n//                 </ListItem>,\r\n//               )}\r\n//             </List>\r\n//           </div>\r\n//         </Grid>\r\n//         <Grid item xs={12} md={6}>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             Avatar with text and icon\r\n//           </Typography>\r\n//           <div className={classes.demo}>\r\n//             <List dense={dense}>\r\n//               {generate(\r\n//                 <ListItem>\r\n//                   <ListItemAvatar>\r\n//                     <Avatar>\r\n//                       <FolderIcon />\r\n//                     </Avatar>\r\n//                   </ListItemAvatar>\r\n//                   <ListItemText\r\n//                     primary=\"Single-line item\"\r\n//                     secondary={secondary ? 'Secondary text' : null}\r\n//                   />\r\n//                   <ListItemSecondaryAction>\r\n//                     <IconButton edge=\"end\" aria-label=\"delete\">\r\n//                       <DeleteIcon />\r\n//                     </IconButton>\r\n//                   </ListItemSecondaryAction>\r\n//                 </ListItem>,\r\n//               )}\r\n//             </List>\r\n//           </div>\r\n//         </Grid>\r\n//       </Grid>\r\n//     </div>\r\n//   );\r\n// }","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\Histories\\Buisness.js",["311","312","313","314","315","316"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Users.scss';\r\nimport Business from \"../../search/Business\";\r\nimport { GetCurrentUser, DeleteHistoryBusiness } from '../../../util/index';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n    style: {\r\n        maxWidth: \"32%\"\r\n    }\r\n}));\r\n\r\nconst Buisness = (props) => {\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    const [secondary, setSecondary] = React.useState(false);\r\n\r\n    const GetCuccentUserFunc = async () => {\r\n\r\n        GetCurrentUser().then(succ => setCurrentUser(succ.data)).catch(() => setifGoToLogin(true));\r\n    }\r\n\r\n    const DeleteHistoryFunc = async (index) => {\r\n        DeleteHistoryBusiness(index).then(succ => {\r\n            if (succ.status == 200)\r\n                GetCuccentUserFunc();\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        GetCuccentUserFunc();\r\n\r\n    }, []);\r\n\r\n    return (<>\r\n        {ifGoToLogin ? <Redirect to={'/SingIn'} /> : currentUser ?\r\n            <>\r\n                <Grid item xs={12} md={6}>\r\n                    <div className={classes.demo}>\r\n                        <List>\r\n                            {\r\n                                currentUser.lastSearchBusiness.map((item, index) => {\r\n                                    if (index < 10)\r\n                                        return (<ListItem>\r\n                                            <ListItemAvatar>\r\n                                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => DeleteHistoryFunc(index)}>\r\n                                                    <DeleteIcon style={{ \"font-size\": \"1.5em\" }} />\r\n                                                </IconButton>\r\n\r\n                                            </ListItemAvatar>\r\n                                            {/* <p>{item.date}</p> */}\r\n                                            <ListItemText\r\n                                                primary={<Business ifAdd=\"false\" business={item.businessSearch} key={index} />}\r\n                                                secondary={secondary ? 'Secondary text' : null}\r\n                                            />\r\n                                        </ListItem>)\r\n                                })\r\n                            }\r\n                        </List>\r\n                    </div>\r\n                </Grid>\r\n            </>\r\n            : null}\r\n\r\n    </>);\r\n}\r\n\r\nexport default Buisness;\r\n\r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\LogIn\\BasicDetails.js",["317","318","319","320","321"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport { IfExist, ErrorInAdd, SignIn } from '../../actions/index';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport './SingUp.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { AddUser } from '../../util/index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#e860ff'\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: '#e860ff'\r\n  },\r\n}));\r\n\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\n\r\nfunction BasicDetails(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [check, setCheck] = useState(false);\r\n\r\n\r\n  const { register, formState: { errors }, handleSubmit } = useForm();\r\n  const firstName = register('firstName', { required: \"This is required.\", minLength: { value: 2, message: \"Min 2\" }, maxLength: { value: 11, message: \"Max 11\" } })\r\n  const lastName = register('lastName', { required: \"This is required.\", minLength: { value: 2, message: \"Min 2\" }, maxLength: { value: 10, message: \"Max 10\" } })\r\n  const email = register('email', { required: \"This is required.\", pattern: { value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, message: \"Email No Valid\" } })\r\n  const phone = register('phone', { required: \"This is required.\", pattern: { value: /0[0-9]{9}/, message: \"Phone No Valid\" } })\r\n  const password = register('password', { required: \"This is required.\", minLength: { value: 5, message: \"Min 5\" }, maxLength: { value: 5, message: \"Max 5\" }, pattern: { value: /[0-9a-zA-Z]{5}/, message: \"Make sure it's at least 5 characters OR characters including a number , a lowercase letter and a upperrcase letter\" } })\r\n\r\n  const onSubmit = data => {\r\n\r\n\r\n    console.log(data);\r\n    data.dateLogin = new Date();\r\n    data.phoneNamber = [];\r\n    data.phoneNamber.push(data.phone);\r\n    data.ifMessege = false;\r\n    data.adress = \"\";\r\n\r\n\r\n\r\n    //util פונקציה מה \r\n    AddUser(data).then((succ) => {\r\n      console.log(succ.data);\r\n\r\n      props.SignIn(succ.data);\r\n      props.IfExist(false);\r\n      props.ErrorInAdd(false);\r\n      settypeAlert(\"success\");\r\n      setmasseg(\"Adding Success\");\r\n      handleClick();\r\n\r\n    }).catch(ee => {\r\n      console.log(ee.massege);\r\n      if (ee.response.status == 500) {\r\n        props.IfExist(true);\r\n        props.ErrorInAdd(false);\r\n      }\r\n\r\n      else {\r\n        props.ErrorInAdd(true);\r\n        props.IfExist(false);\r\n      }\r\n      settypeAlert(\"error\");\r\n      setmasseg(ee.response.data)\r\n\r\n      handleClick();\r\n    });\r\n  }\r\n\r\n  onchange = (e) => {\r\n    console.log(e);\r\n    setCheck(e.target.checked);\r\n\r\n  }\r\n\r\n  // alerts\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [typeAlert, settypeAlert] = React.useState(\"\");\r\n  const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n\r\n  // alerts\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    return (props.IfExist(false), props.ErrorInAdd(false))\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {/* alerts */}\r\n\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n      </Snackbar>\r\n\r\n      {/* alerts */}\r\n\r\n      <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              autoComplete=\"fname\"\r\n              name=\"firstName\"\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"firstName\"\r\n              label=\"First Name\"\r\n              autoFocus\r\n              {...firstName}\r\n            />\r\n            <ErrorMessage errors={errors} name=\"firstName\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"lastName\"\r\n              label=\"Last Name\"\r\n              name=\"lastName\"\r\n              autoComplete=\"lname\"\r\n              {...lastName}\r\n            />\r\n            <ErrorMessage errors={errors} name=\"lastName\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              {...email}\r\n            />\r\n            <ErrorMessage errors={errors} name=\"email\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              autoComplete=\"password\"\r\n              name=\"password\"\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              autoFocus\r\n              {...password}\r\n            />\r\n            <ErrorMessage errors={errors} name=\"password\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"phone\"\r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              autoComplete=\"phone\"\r\n              {...phone}\r\n            />\r\n            <ErrorMessage errors={errors} name=\"phone\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" onChange={(e) => onchange(e)} />}\r\n              label=\"agree the conditions of use\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          disabled={!check}\r\n        >\r\n          Sign Up\r\n          </Button>\r\n        <Grid container justifyContent=\"flex-end\">\r\n          <Grid item>\r\n            <Link to=\"/SignIn\">\r\n              Already have an account? Sign in\r\n              </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n\r\n\r\n    </>\r\n\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  return { ifExist: state.usersPart.IfExist, errorInAdd: state.usersPart.ErrorInAdd };\r\n}\r\nexport default connect(mapStateToProps, { IfExist, ErrorInAdd, SignIn })(BasicDetails);","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\LogIn\\ExpandingDetails.js",["322","323","324","325","326","327","328","329","330","331","332","333","334"],"import React, { useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from \"react-redux\";\r\nimport { AddUser } from '../../actions/index';\r\nimport user from '../classes/user';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport './SingUp.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { IfExist, ErrorInAdd } from '../../actions/index';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Input from '@material-ui/core/Input'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor:'#e860ff'\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: '#e860ff'\r\n  },\r\n}));\r\n\r\nfunction ExpandingDetails(props) {\r\n  const classes = useStyles();\r\n\r\n\r\n  let currentUser = new user();\r\n\r\n\r\n  const onSubmit = data => {\r\n\r\n  }\r\n  \r\n  onchange = (e) => {\r\n\r\n\r\n  }\r\n  useEffect(() => {\r\n\r\n  }, [])\r\n\r\n  return (\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"address\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"address\"\r\n                label=\"Address\"\r\n                autoFocus\r\n                onKeyUp={(e) => currentUser.adress = e.target.value}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Input\r\n                variant=\"outlined\"\r\n                required\r\n                type=\"file\"\r\n                fullWidth\r\n                id=\"image\"\r\n                label=\"Image\"\r\n                name=\"image\"\r\n                autoComplete=\"lname\"\r\n                onKeyUp={(e) => currentUser.img = e.target.value}\r\n              />\r\n            </Grid>\r\n            \r\n         \r\n          </Grid>\r\n          {props.errorInAdd ? <p className=\"redColor\">Error System</p> : null}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/SignIn\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  return { ifExist: state.usersPart.IfExist, errorInAdd: state.usersPart.ErrorInAdd };\r\n}\r\nexport default connect(mapStateToProps, { AddUser, IfExist, ErrorInAdd })(ExpandingDetails);",["335","336"],"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\search\\MyLocation.js",["337"],"// import React from \"react\";\r\n// import { geolocated } from \"react-geolocated\";\r\n// import { ChangeAdrres } from '../../util/index'\r\n// //check move to customhook\r\n// class MyLocation extends React.Component {\r\n\r\n\r\n//     constructor(props) {\r\n//         super(props)\r\n\r\n\r\n//     }\r\n\r\n\r\n//     componentDidUpdate() {\r\n//         // if (this.props.coords !== null) {\r\n//         //     if (!this.props.Location.lat)\r\n//         //         this.props.setLocation({ lat: this.props.coords.latitude, len: this.props.coords.longitude })\r\n//         // }\r\n//         // else {\r\n//         // if (!this.props.isGeolocationEnabled) {\r\n\r\n//         let location\r\n//         console.log(location);\r\n\r\n//         location = ChangeAdrres(\"Eiffel Tower\",this.props.setLen,this.props.setLet)\r\n//         //  {\r\n//         //     \"latitude\": 32.0852999,\r\n//         //     \"longitude\": 34.78176759999999\r\n//         // }\r\n//         // if (!this.props.Location.lat)\r\n//         //     this.props.setLocation({ lat: location.latitude, len: location.longitude })\r\n//         // }\r\n//     }\r\n//     // }\r\n//     render() {\r\n//         return (<></>)\r\n//     }\r\n// }\r\n// export default geolocated({ positionOptions: { enableHighAccuracy: false, }, userDecisionTimeout: 5000, })(MyLocation)\r\n\r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdateBuisness\\ListBuisness.js",["338","339","340"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ChangeUpdateBuisness } from '../../../actions/index';\r\nimport { connect } from \"react-redux\";\r\nimport { GetCurrentBuisness, GetAllBuisnessOfUser } from '../../../util/index';\r\nimport UpdateBuisness from './UpdateBuisnes';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nfunction ListBuisness(props) {\r\n    const classes = useStyles();\r\n    const [secondary, setSecondary] = React.useState(false);\r\n    const [listBuisness, setlistBuisness] = React.useState([]);\r\n\r\n\r\n    const GetCurrentBuisnessFunc = () => {\r\n\r\n        GetAllBuisnessOfUser().then(data => {\r\n            console.log(data.data);\r\n            setlistBuisness(data.data);\r\n            if (props.updateBuisness == null)\r\n                props.ChangeUpdateBuisness(data.data[0]);\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n\r\n        });\r\n\r\n    }\r\n    const ChangeUpdateBuisness = (id) => {\r\n\r\n        GetCurrentBuisness(id).then(data => {\r\n            props.ChangeUpdateBuisness(data.data);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        GetCurrentBuisnessFunc();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {listBuisness.length > 0 ? <Grid container spacing={2}>\r\n                <Grid item xs={9} md={8}>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n\r\n                    </Typography>\r\n                    <div className={classes.demo}>\r\n                        <List>\r\n                            {listBuisness && listBuisness.map((item, index) => {\r\n                                return (\r\n                                    <>\r\n                                        <ListItem onClick={() => ChangeUpdateBuisness(item._id)}>\r\n                                            <ListItemAvatar>\r\n                                                <IconButton edge=\"end\" >\r\n                                                    <Avatar>\r\n                                                    </Avatar>\r\n                                                </IconButton>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText\r\n                                                primary={item.name}\r\n                                                secondary={secondary ? 'Secondary text' : null}\r\n                                            />\r\n                                        </ListItem>\r\n                                        <UpdateBuisness GetAllBuisnessOfUser={GetCurrentBuisnessFunc} id={item._id} /></>\r\n\r\n                                )\r\n                            })}\r\n                        </List>\r\n                    </div>\r\n                </Grid>\r\n\r\n            </Grid> : null}\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { updateBuisness: state.businessPart.updateBuisness };\r\n}\r\nexport default connect(mapStateToProps, { ChangeUpdateBuisness })(ListBuisness);","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\PrivateArea\\UpdateBuisness\\UpdateBuisnes.js",["341","342","343","344","345","346"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport business from '../../classes/business'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {  getAllCategories, UpdateBuisnessFunc } from '../../../util/index';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport { ChangeUpdateBuisness } from '../../../actions/index';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#e860ff'\r\n    },\r\n}));\r\n\r\n//alerts\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={2} variant=\"filled\" {...props} />;\r\n}\r\n\r\n//alerts\r\n\r\n\r\nfunction UpdateBuisness(props) {\r\n\r\n    // עיצוב\r\n    const classes = useStyles();\r\n\r\n    const [currentBuisness, setcurrentBuisness] = useState(null);\r\n    const [ifGoToLogin, setifGoToLogin] = useState(false);\r\n\r\n\r\n    let listCategory = useRef([]);\r\n    const [categoriesArr, setCategoriesArr] = useState([]);\r\n    const [ifSelect, setIfSelect] = useState(false);\r\n\r\n    // משתנה לעדכון \r\n    let updateBuisness = new business();\r\n\r\n    // טופס\r\n    const { register, formState: { errors }, handleSubmit } = useForm();\r\n    const name = register('name', { minLength: { value: 2, message: \"Min 2\" } })\r\n    const email = register('email', { pattern: { value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, message: \"Email No Valid\" } })\r\n    const phone = register('phone', { pattern: { value: /0[0-9]{9}/, message: \"Phone No Valid\" } })\r\n    // const listCategory = register('listCategory')\r\n    const adress = register('adress');\r\n\r\n\r\n\r\n    // לא לשכוח\r\n    // this.img = \"\";\r\n    // this.advertising = \"\";\r\n\r\n\r\n\r\n    // פונקצית העדכון\r\n    const onSubmit = async data => {\r\n        updateBuisness.listCategory = listCategory.current.getSelectedItems();\r\n\r\n        UpdateBuisnessFunc(props.updateBuisness._id, data).then(succ => {\r\n            settypeAlert(\"success\");\r\n            setmasseg(\"Updating Success\");\r\n            handleClick();\r\n\r\n        }).catch(error => {\r\n            settypeAlert(\"error\");\r\n            setmasseg(error.response.data)\r\n\r\n            handleClick();\r\n        })\r\n    }\r\n\r\n\r\n    // onchange = (e) => {\r\n    //     console.log(e);\r\n    //     setCheck(e.target.checked);\r\n    // }\r\n\r\n    const onKeyUp = (e, type) => {\r\n        updateBuisness[type] = e.target.value;\r\n        e.target.value = updateBuisness[type];\r\n        if (updateBuisness[type] == '')\r\n            updateBuisness[type] = null;\r\n    }\r\n\r\n\r\n    // alerts\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [typeAlert, settypeAlert] = React.useState(\"\");\r\n    const [masseg, setmasseg] = React.useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // alerts\r\n    useEffect(() => {\r\n        getAllCategories().then((succ) => {\r\n            let arrName = succ.data.map((data) => data.name);\r\n            setCategoriesArr(arrName);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n        // GetCurrentBuisness(props.updateBuisness).then(succ => {\r\n        //     setcurrentBuisness(succ.data);\r\n        // }).catch(error => {\r\n        //     console.log(error);\r\n        // });\r\n\r\n        // return (props.IfExist(false), props.ErrorInAdd(false));\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={typeAlert}> {masseg}</Alert>\r\n            </Snackbar>\r\n            {ifGoToLogin ? <Redirect to={'/SingIn'} /> : props.updateBuisness && <form className={classes.form} noValidate onSubmit={handleSubmit(() => onSubmit(updateBuisness))}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            autoComplete=\"fname\"\r\n                            name=\"name\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            autoFocus\r\n                            defaultValue={props.updateBuisness.name}\r\n                            value={props.updateBuisness.name}\r\n                            onKeyUp={(e) => onKeyUp(e, \"name\")}\r\n                            {...name}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"name\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            defaultValue={props.updateBuisness.email}\r\n                            onKeyUp={(e) => onKeyUp(e, \"email\")}\r\n                            {...email}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"email\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n                        {props.ifExist ? <p className=\"redColor\">This Email Alrady Exist</p> : null}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Multiselect\r\n                            onSelect={(e) => setIfSelect(false)}\r\n                            label=\"Category\"\r\n                            name=\"category\"\r\n                            options={categoriesArr ? categoriesArr : []}\r\n                            isObject={false}\r\n                            ref={listCategory} type=\"text\"\r\n                            selectedValues={props.updateBuisness.listCategory}\r\n                        />\r\n                        {ifSelect && <p className=\"redColor\">This is required.</p>}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"phone\"\r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            autoComplete=\"phone\"\r\n                            autoFocus\r\n                            defaultValue={props.updateBuisness.phoneNamber}\r\n                            onKeyUp={(e) => onKeyUp(e, \"phoneNamber\")}\r\n                            {...phone}\r\n                        />\r\n                        <ErrorMessage errors={errors} name=\"phone\" render={({ message }) => <p className=\"redColor\">{message}</p>} />\r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            autoComplete=\"fname\"\r\n                            name=\"address\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"address\"\r\n                            label=\"Address\"\r\n                            autoFocus\r\n                            defaultValue={props.updateBuisness.adress}\r\n                            onKeyUp={(e) => onKeyUp(e, \"adress\")}\r\n                            {...adress}\r\n                        />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}>\r\n                    Update\r\n          </Button>\r\n                {props.updateBuisness.name}\r\n            </form>}\r\n        </>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { updateBuisness: state.businessPart.updateBuisness };\r\n}\r\nexport default connect(mapStateToProps, { ChangeUpdateBuisness })(UpdateBuisness);\r\n\r\n",["347","348"],"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\util\\UtilBuisness.js",[],"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\util\\UtilCategory.js",[],"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\Manager\\Manager.js",["349","350"],"import React, { useEffect, useState } from 'react';\r\nimport TableTasks from './TableTasks';\r\n\r\nconst Manager = (props) => {\r\n\r\n    return (<>\r\n    <TableTasks/>\r\n       </>);\r\n}\r\n\r\nexport default Manager;\r\n","D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\util\\Tasks.js",[],"D:\\תכנות\\שנה ב\\ProjectWithGit\\endProject\\Project\\Client\\src\\components\\Manager\\TableTasks.js",["351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport { GetAllTask, GetAllTypeTsks } from '../../util/index';\r\nimport { Link, Route, Switch, useRouteMatch, useParams } from 'react-router-dom';\r\nimport UpdatePersonalDetails from '../PrivateArea/UpdatePersonalDetails';\r\nimport { withRouter } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset',\r\n        },\r\n    },\r\n});\r\n\r\nfunction Row(props) {\r\n    const { row, action } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow className={classes.root}>\r\n\r\n                <TableCell align=\"right\">{action}</TableCell>\r\n                <TableCell align=\"right\">{row.type.name}</TableCell>\r\n                <TableCell align=\"right\">{row.desription}</TableCell>\r\n                <TableCell align=\"right\">{row.codeUser.firstName}&nbsp;{row.codeUser.lastName}</TableCell>\r\n                <TableCell align=\"right\">{row.date}</TableCell>\r\n            </TableRow>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default function TableTasks(props) {\r\n    const [rows, setRows] = useState([]);\r\n    const [typeTask, setTypeTask] = useState([]);\r\n\r\n    const { url, path } = useRouteMatch();\r\n\r\n    useEffect(() => {\r\n\r\n        GetAllTypeTsks().then(succ => {\r\n\r\n            let typeArr = [];\r\n            succ.data.forEach(element => {\r\n\r\n                if (element.code == 1)\r\n                    typeArr[0] = { id: element._id, action: (id) => <Link to={`${url}/updateUser/${id}`}>עדכון משתמש</Link> };\r\n                else if (element.code == 2)\r\n                    typeArr[1] = { id: element._id, action: () => <Link to={`${url}/addCategory`}>הוסף קטגוריה</Link> }\r\n                else if (element.code == 3)\r\n                    typeArr[2] = { id: element._id, action: () => <Link to={`${url}/sendAddUser`}>הוסף משתמש למערכת</Link> }\r\n                else if (element.code == 4)\r\n                    typeArr[3] = { id: element._id, action: (id) => <Link to={`${url}/updateBuisness/${id}`}>עדכן עסק</Link> }\r\n\r\n            });\r\n\r\n            setTypeTask(typeArr);\r\n\r\n        }).catch(error => console.log(error));\r\n\r\n        GetAllTask().then(succ => {\r\n            setRows(succ.data);\r\n        }).catch(erorr => {\r\n            console.log(erorr);\r\n        });\r\n\r\n    }, []);\r\n    return (<>{rows && <>\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"collapsible table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\">משימה</TableCell>\r\n                        <TableCell align=\"right\">תאור</TableCell>\r\n                        <TableCell align=\"right\">משתמש</TableCell>\r\n                        <TableCell align=\"right\">תאריך</TableCell>\r\n\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {typeTask && rows.map((row, index) => (\r\n                        <Row key={index} row={row} action={typeTask.find(elem => elem.id === row.type._id).action(row.otherUser && row.otherUser._id)} />\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n        <Switch>\r\n\r\n            <Route path={`${path}/updateUser/:id`}>\r\n                <UpdatePersonalDetails />\r\n            </Route>\r\n\r\n            <Route path={`${path}/sendAddUser`}>\r\n                <div>sendAddUser</div>\r\n            </Route>\r\n\r\n            <Route path={`${path}/addCategory`}>\r\n                <div>addCategory</div>\r\n            </Route>\r\n\r\n            <Route path={`${path}/updateBuisness/:id`}>\r\n                <div>updateBuisness</div>\r\n            </Route>\r\n\r\n        </Switch>\r\n    </>\r\n    }</>\r\n    );\r\n}",{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","replacedBy":"372"},{"ruleId":"373","severity":1,"message":"374","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":17},{"ruleId":"373","severity":1,"message":"377","line":6,"column":8,"nodeType":"375","messageId":"376","endLine":6,"endColumn":18},{"ruleId":"373","severity":1,"message":"378","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":19},{"ruleId":"373","severity":1,"message":"379","line":5,"column":8,"nodeType":"375","messageId":"376","endLine":5,"endColumn":22},{"ruleId":"380","severity":1,"message":"381","line":49,"column":25,"nodeType":"382","endLine":49,"endColumn":68},{"ruleId":"383","severity":1,"message":"384","line":14,"column":5,"nodeType":"385","messageId":"386","endLine":84,"endColumn":6},{"ruleId":"383","severity":1,"message":"384","line":10,"column":5,"nodeType":"385","messageId":"386","endLine":47,"endColumn":6},{"ruleId":"373","severity":1,"message":"387","line":4,"column":21,"nodeType":"375","messageId":"376","endLine":4,"endColumn":29},{"ruleId":"373","severity":1,"message":"388","line":6,"column":10,"nodeType":"375","messageId":"376","endLine":6,"endColumn":18},{"ruleId":"373","severity":1,"message":"389","line":6,"column":20,"nodeType":"375","messageId":"376","endLine":6,"endColumn":30},{"ruleId":"373","severity":1,"message":"390","line":6,"column":32,"nodeType":"375","messageId":"376","endLine":6,"endColumn":43},{"ruleId":"373","severity":1,"message":"391","line":7,"column":8,"nodeType":"375","messageId":"376","endLine":7,"endColumn":24},{"ruleId":"392","severity":1,"message":"393","line":18,"column":31,"nodeType":"394","messageId":"395","endLine":18,"endColumn":33},{"ruleId":"373","severity":1,"message":"389","line":11,"column":20,"nodeType":"375","messageId":"376","endLine":11,"endColumn":30},{"ruleId":"373","severity":1,"message":"390","line":11,"column":32,"nodeType":"375","messageId":"376","endLine":11,"endColumn":43},{"ruleId":"396","severity":1,"message":"397","line":70,"column":21,"nodeType":"382","endLine":70,"endColumn":109},{"ruleId":"396","severity":1,"message":"397","line":74,"column":21,"nodeType":"382","endLine":74,"endColumn":105},{"ruleId":"392","severity":1,"message":"398","line":79,"column":66,"nodeType":"394","messageId":"395","endLine":79,"endColumn":68},{"ruleId":"392","severity":1,"message":"398","line":85,"column":66,"nodeType":"394","messageId":"395","endLine":85,"endColumn":68},{"ruleId":"392","severity":1,"message":"393","line":28,"column":34,"nodeType":"394","messageId":"395","endLine":28,"endColumn":36},{"ruleId":"392","severity":1,"message":"398","line":41,"column":120,"nodeType":"394","messageId":"395","endLine":41,"endColumn":122},{"ruleId":"399","severity":1,"message":"400","line":66,"column":74,"nodeType":"401","endLine":66,"endColumn":85},{"ruleId":"399","severity":1,"message":"400","line":70,"column":79,"nodeType":"401","endLine":70,"endColumn":90},{"ruleId":"399","severity":1,"message":"400","line":75,"column":72,"nodeType":"401","endLine":75,"endColumn":83},{"ruleId":"399","severity":1,"message":"400","line":80,"column":91,"nodeType":"401","endLine":80,"endColumn":102},{"ruleId":"373","severity":1,"message":"402","line":22,"column":31,"nodeType":"375","messageId":"376","endLine":22,"endColumn":37},{"ruleId":"392","severity":1,"message":"393","line":111,"column":60,"nodeType":"394","messageId":"395","endLine":111,"endColumn":62},{"ruleId":"392","severity":1,"message":"393","line":114,"column":101,"nodeType":"394","messageId":"395","endLine":114,"endColumn":103},{"ruleId":"373","severity":1,"message":"387","line":9,"column":28,"nodeType":"375","messageId":"376","endLine":9,"endColumn":36},{"ruleId":"373","severity":1,"message":"403","line":11,"column":8,"nodeType":"375","messageId":"376","endLine":11,"endColumn":14},{"ruleId":"373","severity":1,"message":"404","line":13,"column":8,"nodeType":"375","messageId":"376","endLine":13,"endColumn":17},{"ruleId":"373","severity":1,"message":"405","line":14,"column":8,"nodeType":"375","messageId":"376","endLine":14,"endColumn":24},{"ruleId":"373","severity":1,"message":"406","line":15,"column":8,"nodeType":"375","messageId":"376","endLine":15,"endColumn":16},{"ruleId":"373","severity":1,"message":"407","line":17,"column":8,"nodeType":"375","messageId":"376","endLine":17,"endColumn":11},{"ruleId":"373","severity":1,"message":"408","line":21,"column":8,"nodeType":"375","messageId":"376","endLine":21,"endColumn":17},{"ruleId":"373","severity":1,"message":"409","line":23,"column":10,"nodeType":"375","messageId":"376","endLine":23,"endColumn":17},{"ruleId":"373","severity":1,"message":"410","line":24,"column":8,"nodeType":"375","messageId":"376","endLine":24,"endColumn":12},{"ruleId":"373","severity":1,"message":"411","line":25,"column":10,"nodeType":"375","messageId":"376","endLine":25,"endColumn":17},{"ruleId":"373","severity":1,"message":"412","line":26,"column":10,"nodeType":"375","messageId":"376","endLine":26,"endColumn":22},{"ruleId":"373","severity":1,"message":"413","line":28,"column":10,"nodeType":"375","messageId":"376","endLine":28,"endColumn":14},{"ruleId":"373","severity":1,"message":"414","line":29,"column":10,"nodeType":"375","messageId":"376","endLine":29,"endColumn":17},{"ruleId":"373","severity":1,"message":"415","line":29,"column":19,"nodeType":"375","messageId":"376","endLine":29,"endColumn":29},{"ruleId":"373","severity":1,"message":"416","line":32,"column":8,"nodeType":"375","messageId":"376","endLine":32,"endColumn":24},{"ruleId":"373","severity":1,"message":"417","line":7,"column":10,"nodeType":"375","messageId":"376","endLine":7,"endColumn":13},{"ruleId":"392","severity":1,"message":"398","line":24,"column":105,"nodeType":"394","messageId":"395","endLine":24,"endColumn":107},{"ruleId":"392","severity":1,"message":"393","line":24,"column":141,"nodeType":"394","messageId":"395","endLine":24,"endColumn":143},{"ruleId":"392","severity":1,"message":"393","line":19,"column":29,"nodeType":"394","messageId":"395","endLine":19,"endColumn":31},{"ruleId":"392","severity":1,"message":"393","line":22,"column":29,"nodeType":"394","messageId":"395","endLine":22,"endColumn":31},{"ruleId":"392","severity":1,"message":"393","line":42,"column":36,"nodeType":"394","messageId":"395","endLine":42,"endColumn":38},{"ruleId":"392","severity":1,"message":"393","line":47,"column":36,"nodeType":"394","messageId":"395","endLine":47,"endColumn":38},{"ruleId":"373","severity":1,"message":"402","line":4,"column":10,"nodeType":"375","messageId":"376","endLine":4,"endColumn":16},{"ruleId":"373","severity":1,"message":"413","line":5,"column":10,"nodeType":"375","messageId":"376","endLine":5,"endColumn":14},{"ruleId":"373","severity":1,"message":"418","line":5,"column":16,"nodeType":"375","messageId":"376","endLine":5,"endColumn":21},{"ruleId":"373","severity":1,"message":"403","line":6,"column":10,"nodeType":"375","messageId":"376","endLine":6,"endColumn":16},{"ruleId":"419","severity":1,"message":"420","line":18,"column":31,"nodeType":"421","messageId":"422","endLine":18,"endColumn":33},{"ruleId":"419","severity":1,"message":"420","line":18,"column":49,"nodeType":"421","messageId":"422","endLine":18,"endColumn":51},{"ruleId":"419","severity":1,"message":"423","line":18,"column":49,"nodeType":"421","messageId":"422","endLine":18,"endColumn":51},{"ruleId":"419","severity":1,"message":"423","line":18,"column":67,"nodeType":"421","messageId":"422","endLine":18,"endColumn":69},{"ruleId":"392","severity":1,"message":"393","line":37,"column":73,"nodeType":"394","messageId":"395","endLine":37,"endColumn":75},{"ruleId":"392","severity":1,"message":"393","line":37,"column":127,"nodeType":"394","messageId":"395","endLine":37,"endColumn":129},{"ruleId":"392","severity":1,"message":"393","line":40,"column":72,"nodeType":"394","messageId":"395","endLine":40,"endColumn":74},{"ruleId":"392","severity":1,"message":"393","line":40,"column":126,"nodeType":"394","messageId":"395","endLine":40,"endColumn":128},{"ruleId":"380","severity":1,"message":"381","line":43,"column":29,"nodeType":"382","endLine":43,"endColumn":64},{"ruleId":"373","severity":1,"message":"402","line":4,"column":10,"nodeType":"375","messageId":"376","endLine":4,"endColumn":16},{"ruleId":"373","severity":1,"message":"413","line":5,"column":10,"nodeType":"375","messageId":"376","endLine":5,"endColumn":14},{"ruleId":"373","severity":1,"message":"418","line":5,"column":16,"nodeType":"375","messageId":"376","endLine":5,"endColumn":21},{"ruleId":"373","severity":1,"message":"403","line":9,"column":10,"nodeType":"375","messageId":"376","endLine":9,"endColumn":16},{"ruleId":"419","severity":1,"message":"420","line":20,"column":31,"nodeType":"421","messageId":"422","endLine":20,"endColumn":33},{"ruleId":"419","severity":1,"message":"420","line":20,"column":49,"nodeType":"421","messageId":"422","endLine":20,"endColumn":51},{"ruleId":"419","severity":1,"message":"423","line":20,"column":49,"nodeType":"421","messageId":"422","endLine":20,"endColumn":51},{"ruleId":"419","severity":1,"message":"423","line":20,"column":67,"nodeType":"421","messageId":"422","endLine":20,"endColumn":69},{"ruleId":"392","severity":1,"message":"393","line":40,"column":73,"nodeType":"394","messageId":"395","endLine":40,"endColumn":75},{"ruleId":"392","severity":1,"message":"393","line":40,"column":135,"nodeType":"394","messageId":"395","endLine":40,"endColumn":137},{"ruleId":"392","severity":1,"message":"393","line":41,"column":94,"nodeType":"394","messageId":"395","endLine":41,"endColumn":96},{"ruleId":"392","severity":1,"message":"393","line":41,"column":156,"nodeType":"394","messageId":"395","endLine":41,"endColumn":158},{"ruleId":"392","severity":1,"message":"393","line":44,"column":94,"nodeType":"394","messageId":"395","endLine":44,"endColumn":96},{"ruleId":"392","severity":1,"message":"393","line":44,"column":156,"nodeType":"394","messageId":"395","endLine":44,"endColumn":158},{"ruleId":"392","severity":1,"message":"393","line":45,"column":72,"nodeType":"394","messageId":"395","endLine":45,"endColumn":74},{"ruleId":"392","severity":1,"message":"393","line":45,"column":134,"nodeType":"394","messageId":"395","endLine":45,"endColumn":136},{"ruleId":"392","severity":1,"message":"393","line":51,"column":86,"nodeType":"394","messageId":"395","endLine":51,"endColumn":88},{"ruleId":"392","severity":1,"message":"393","line":52,"column":69,"nodeType":"394","messageId":"395","endLine":52,"endColumn":71},{"ruleId":"392","severity":1,"message":"393","line":52,"column":133,"nodeType":"394","messageId":"395","endLine":52,"endColumn":135},{"ruleId":"392","severity":1,"message":"393","line":55,"column":68,"nodeType":"394","messageId":"395","endLine":55,"endColumn":70},{"ruleId":"392","severity":1,"message":"393","line":55,"column":132,"nodeType":"394","messageId":"395","endLine":55,"endColumn":134},{"ruleId":"392","severity":1,"message":"393","line":56,"column":87,"nodeType":"394","messageId":"395","endLine":56,"endColumn":89},{"ruleId":"380","severity":1,"message":"381","line":59,"column":25,"nodeType":"382","endLine":59,"endColumn":60},{"ruleId":"373","severity":1,"message":"424","line":2,"column":8,"nodeType":"375","messageId":"376","endLine":2,"endColumn":15},{"ruleId":"373","severity":1,"message":"403","line":14,"column":8,"nodeType":"375","messageId":"376","endLine":14,"endColumn":14},{"ruleId":"373","severity":1,"message":"425","line":19,"column":8,"nodeType":"375","messageId":"376","endLine":19,"endColumn":21},{"ruleId":"373","severity":1,"message":"387","line":2,"column":10,"nodeType":"375","messageId":"376","endLine":2,"endColumn":18},{"ruleId":"373","severity":1,"message":"426","line":12,"column":8,"nodeType":"375","messageId":"376","endLine":12,"endColumn":13},{"ruleId":"427","severity":1,"message":"428","line":71,"column":95,"nodeType":"429","messageId":"430","endLine":71,"endColumn":96,"suggestions":"431"},{"ruleId":"427","severity":1,"message":"428","line":71,"column":111,"nodeType":"429","messageId":"430","endLine":71,"endColumn":112,"suggestions":"432"},{"ruleId":"373","severity":1,"message":"433","line":73,"column":11,"nodeType":"375","messageId":"376","endLine":73,"endColumn":19},{"ruleId":"392","severity":1,"message":"393","line":100,"column":60,"nodeType":"394","messageId":"395","endLine":100,"endColumn":62},{"ruleId":"373","severity":1,"message":"434","line":118,"column":12,"nodeType":"375","messageId":"376","endLine":118,"endColumn":17},{"ruleId":"373","severity":1,"message":"426","line":15,"column":8,"nodeType":"375","messageId":"376","endLine":15,"endColumn":13},{"ruleId":"373","severity":1,"message":"389","line":16,"column":20,"nodeType":"375","messageId":"376","endLine":16,"endColumn":30},{"ruleId":"373","severity":1,"message":"390","line":16,"column":32,"nodeType":"375","messageId":"376","endLine":16,"endColumn":43},{"ruleId":"427","severity":1,"message":"428","line":89,"column":64,"nodeType":"429","messageId":"430","endLine":89,"endColumn":65,"suggestions":"435"},{"ruleId":"427","severity":1,"message":"428","line":89,"column":80,"nodeType":"429","messageId":"430","endLine":89,"endColumn":81,"suggestions":"436"},{"ruleId":"437","severity":1,"message":"438","line":174,"column":8,"nodeType":"439","endLine":174,"endColumn":10,"suggestions":"440"},{"ruleId":"373","severity":1,"message":"426","line":11,"column":8,"nodeType":"375","messageId":"376","endLine":11,"endColumn":13},{"ruleId":"373","severity":1,"message":"389","line":12,"column":20,"nodeType":"375","messageId":"376","endLine":12,"endColumn":30},{"ruleId":"373","severity":1,"message":"390","line":12,"column":32,"nodeType":"375","messageId":"376","endLine":12,"endColumn":43},{"ruleId":"373","severity":1,"message":"389","line":10,"column":20,"nodeType":"375","messageId":"376","endLine":10,"endColumn":30},{"ruleId":"373","severity":1,"message":"390","line":10,"column":32,"nodeType":"375","messageId":"376","endLine":10,"endColumn":43},{"ruleId":"373","severity":1,"message":"426","line":11,"column":8,"nodeType":"375","messageId":"376","endLine":11,"endColumn":13},{"ruleId":"373","severity":1,"message":"441","line":39,"column":23,"nodeType":"375","messageId":"376","endLine":39,"endColumn":35},{"ruleId":"392","severity":1,"message":"393","line":49,"column":29,"nodeType":"394","messageId":"395","endLine":49,"endColumn":31},{"ruleId":"442","severity":1,"message":"443","line":67,"column":79,"nodeType":"444","messageId":"445","endLine":67,"endColumn":81},{"ruleId":"373","severity":1,"message":"389","line":10,"column":20,"nodeType":"375","messageId":"376","endLine":10,"endColumn":30},{"ruleId":"373","severity":1,"message":"390","line":10,"column":32,"nodeType":"375","messageId":"376","endLine":10,"endColumn":43},{"ruleId":"373","severity":1,"message":"426","line":11,"column":8,"nodeType":"375","messageId":"376","endLine":11,"endColumn":13},{"ruleId":"373","severity":1,"message":"441","line":38,"column":23,"nodeType":"375","messageId":"376","endLine":38,"endColumn":35},{"ruleId":"392","severity":1,"message":"393","line":47,"column":29,"nodeType":"394","messageId":"395","endLine":47,"endColumn":31},{"ruleId":"442","severity":1,"message":"443","line":66,"column":82,"nodeType":"444","messageId":"445","endLine":66,"endColumn":84},{"ruleId":"373","severity":1,"message":"426","line":16,"column":8,"nodeType":"375","messageId":"376","endLine":16,"endColumn":13},{"ruleId":"427","severity":1,"message":"428","line":71,"column":93,"nodeType":"429","messageId":"430","endLine":71,"endColumn":94,"suggestions":"446"},{"ruleId":"427","severity":1,"message":"428","line":71,"column":109,"nodeType":"429","messageId":"430","endLine":71,"endColumn":110,"suggestions":"447"},{"ruleId":"392","severity":1,"message":"393","line":100,"column":30,"nodeType":"394","messageId":"395","endLine":100,"endColumn":32},{"ruleId":"437","severity":1,"message":"448","line":151,"column":6,"nodeType":"439","endLine":151,"endColumn":8,"suggestions":"449"},{"ruleId":"373","severity":1,"message":"387","line":1,"column":28,"nodeType":"375","messageId":"376","endLine":1,"endColumn":36},{"ruleId":"373","severity":1,"message":"450","line":2,"column":8,"nodeType":"375","messageId":"376","endLine":2,"endColumn":14},{"ruleId":"373","severity":1,"message":"451","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":19},{"ruleId":"373","severity":1,"message":"405","line":6,"column":8,"nodeType":"375","messageId":"376","endLine":6,"endColumn":24},{"ruleId":"373","severity":1,"message":"406","line":7,"column":8,"nodeType":"375","messageId":"376","endLine":7,"endColumn":16},{"ruleId":"373","severity":1,"message":"407","line":9,"column":8,"nodeType":"375","messageId":"376","endLine":9,"endColumn":11},{"ruleId":"373","severity":1,"message":"452","line":10,"column":8,"nodeType":"375","messageId":"376","endLine":10,"endColumn":24},{"ruleId":"373","severity":1,"message":"453","line":11,"column":8,"nodeType":"375","messageId":"376","endLine":11,"endColumn":18},{"ruleId":"373","severity":1,"message":"408","line":13,"column":8,"nodeType":"375","messageId":"376","endLine":13,"endColumn":17},{"ruleId":"373","severity":1,"message":"411","line":17,"column":10,"nodeType":"375","messageId":"376","endLine":17,"endColumn":17},{"ruleId":"373","severity":1,"message":"412","line":18,"column":10,"nodeType":"375","messageId":"376","endLine":18,"endColumn":22},{"ruleId":"373","severity":1,"message":"454","line":22,"column":8,"nodeType":"375","messageId":"376","endLine":22,"endColumn":13},{"ruleId":"373","severity":1,"message":"455","line":65,"column":9,"nodeType":"375","messageId":"376","endLine":65,"endColumn":17},{"ruleId":"369","replacedBy":"456"},{"ruleId":"371","replacedBy":"457"},{"ruleId":"458","severity":1,"message":"459","line":8,"column":5,"nodeType":"460","messageId":"461","endLine":12,"endColumn":6},{"ruleId":"373","severity":1,"message":"387","line":1,"column":28,"nodeType":"375","messageId":"376","endLine":1,"endColumn":36},{"ruleId":"373","severity":1,"message":"441","line":34,"column":23,"nodeType":"375","messageId":"376","endLine":34,"endColumn":35},{"ruleId":"437","severity":1,"message":"462","line":65,"column":8,"nodeType":"439","endLine":65,"endColumn":10,"suggestions":"463"},{"ruleId":"373","severity":1,"message":"464","line":62,"column":12,"nodeType":"375","messageId":"376","endLine":62,"endColumn":27},{"ruleId":"373","severity":1,"message":"465","line":62,"column":29,"nodeType":"375","messageId":"376","endLine":62,"endColumn":47},{"ruleId":"373","severity":1,"message":"466","line":63,"column":25,"nodeType":"375","messageId":"376","endLine":63,"endColumn":39},{"ruleId":"427","severity":1,"message":"428","line":76,"column":64,"nodeType":"429","messageId":"430","endLine":76,"endColumn":65,"suggestions":"467"},{"ruleId":"427","severity":1,"message":"428","line":76,"column":80,"nodeType":"429","messageId":"430","endLine":76,"endColumn":81,"suggestions":"468"},{"ruleId":"392","severity":1,"message":"393","line":115,"column":34,"nodeType":"394","messageId":"395","endLine":115,"endColumn":36},{"ruleId":"369","replacedBy":"469"},{"ruleId":"371","replacedBy":"470"},{"ruleId":"373","severity":1,"message":"471","line":1,"column":17,"nodeType":"375","messageId":"376","endLine":1,"endColumn":26},{"ruleId":"373","severity":1,"message":"387","line":1,"column":28,"nodeType":"375","messageId":"376","endLine":1,"endColumn":36},{"ruleId":"373","severity":1,"message":"472","line":2,"column":8,"nodeType":"375","messageId":"376","endLine":2,"endColumn":17},{"ruleId":"373","severity":1,"message":"407","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":11},{"ruleId":"373","severity":1,"message":"473","line":5,"column":8,"nodeType":"375","messageId":"376","endLine":5,"endColumn":16},{"ruleId":"373","severity":1,"message":"474","line":6,"column":8,"nodeType":"375","messageId":"376","endLine":6,"endColumn":18},{"ruleId":"373","severity":1,"message":"453","line":13,"column":8,"nodeType":"375","messageId":"376","endLine":13,"endColumn":18},{"ruleId":"373","severity":1,"message":"475","line":15,"column":8,"nodeType":"375","messageId":"376","endLine":15,"endColumn":29},{"ruleId":"373","severity":1,"message":"476","line":16,"column":8,"nodeType":"375","messageId":"376","endLine":16,"endColumn":27},{"ruleId":"373","severity":1,"message":"402","line":17,"column":10,"nodeType":"375","messageId":"376","endLine":17,"endColumn":16},{"ruleId":"373","severity":1,"message":"477","line":19,"column":46,"nodeType":"375","messageId":"376","endLine":19,"endColumn":55},{"ruleId":"373","severity":1,"message":"478","line":21,"column":10,"nodeType":"375","messageId":"376","endLine":21,"endColumn":20},{"ruleId":"373","severity":1,"message":"479","line":22,"column":8,"nodeType":"375","messageId":"376","endLine":22,"endColumn":19},{"ruleId":"373","severity":1,"message":"480","line":35,"column":12,"nodeType":"375","messageId":"376","endLine":35,"endColumn":16},{"ruleId":"373","severity":1,"message":"481","line":35,"column":18,"nodeType":"375","messageId":"376","endLine":35,"endColumn":25},{"ruleId":"392","severity":1,"message":"393","line":66,"column":34,"nodeType":"394","messageId":"395","endLine":66,"endColumn":36},{"ruleId":"392","severity":1,"message":"393","line":68,"column":39,"nodeType":"394","messageId":"395","endLine":68,"endColumn":41},{"ruleId":"392","severity":1,"message":"393","line":70,"column":39,"nodeType":"394","messageId":"395","endLine":70,"endColumn":41},{"ruleId":"392","severity":1,"message":"393","line":72,"column":39,"nodeType":"394","messageId":"395","endLine":72,"endColumn":41},{"ruleId":"437","severity":1,"message":"482","line":87,"column":8,"nodeType":"439","endLine":87,"endColumn":10,"suggestions":"483"},"no-native-reassign",["484"],"no-negated-in-lhs",["485"],"no-unused-vars","'SimpleMap' is defined but never used.","Identifier","unusedVar","'MyLocation' is defined but never used.","'UsersSearch' is defined but never used.","'BusinessSearch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'ResultSearchUser' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useRef' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'AddUser' is defined but never used.","'user' is defined but never used.","'useForm' is defined but never used.","'ErrorMessage' is defined but never used.","'Link' is defined but never used.","'IfExist' is defined but never used.","'ErrorInAdd' is defined but never used.","'ExpandingDetails' is defined but never used.","'log' is defined but never used.","'Route' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'Geocode' is defined but never used.","'SearchHistory' is defined but never used.","'axios' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["486","487"],["488","489"],"'category' is assigned a value but never used.","'check' is assigned a value but never used.",["490","491"],["492","493"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["494"],"'setSecondary' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["495","496"],["497","498"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["499"],"'Avatar' is defined but never used.","'CssBaseline' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Typography' is defined but never used.","'Paper' is defined but never used.","'onSubmit' is assigned a value but never used.",["484"],["485"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","React Hook useEffect has a missing dependency: 'GetCurrentBuisnessFunc'. Either include it or remove the dependency array.",["500"],"'currentBuisness' is assigned a value but never used.","'setcurrentBuisness' is assigned a value but never used.","'setifGoToLogin' is assigned a value but never used.",["501","502"],["503","504"],["484"],["485"],"'useEffect' is defined but never used.","'PropTypes' is defined but never used.","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'KeyboardArrowUpIcon' is defined but never used.","'useParams' is defined but never used.","'withRouter' is defined but never used.","'queryString' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["505"],"no-global-assign","no-unsafe-negation",{"messageId":"506","fix":"507","desc":"508"},{"messageId":"509","fix":"510","desc":"511"},{"messageId":"506","fix":"512","desc":"508"},{"messageId":"509","fix":"513","desc":"511"},{"messageId":"506","fix":"514","desc":"508"},{"messageId":"509","fix":"515","desc":"511"},{"messageId":"506","fix":"516","desc":"508"},{"messageId":"509","fix":"517","desc":"511"},{"desc":"518","fix":"519"},{"messageId":"506","fix":"520","desc":"508"},{"messageId":"509","fix":"521","desc":"511"},{"messageId":"506","fix":"522","desc":"508"},{"messageId":"509","fix":"523","desc":"511"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"messageId":"506","fix":"528","desc":"508"},{"messageId":"509","fix":"529","desc":"511"},{"messageId":"506","fix":"530","desc":"508"},{"messageId":"509","fix":"531","desc":"511"},{"desc":"532","fix":"533"},"removeEscape",{"range":"534","text":"535"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"536","text":"537"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"538","text":"535"},{"range":"539","text":"537"},{"range":"540","text":"535"},{"range":"541","text":"537"},{"range":"542","text":"535"},{"range":"543","text":"537"},"Update the dependencies array to be: [id, props]",{"range":"544","text":"545"},{"range":"546","text":"535"},{"range":"547","text":"537"},{"range":"548","text":"535"},{"range":"549","text":"537"},"Update the dependencies array to be: [props]",{"range":"550","text":"551"},"Update the dependencies array to be: [GetCurrentBuisnessFunc]",{"range":"552","text":"553"},{"range":"554","text":"535"},{"range":"555","text":"537"},{"range":"556","text":"535"},{"range":"557","text":"537"},"Update the dependencies array to be: [url]",{"range":"558","text":"559"},[2198,2199],"",[2198,2198],"\\",[2214,2215],[2214,2214],[2839,2840],[2839,2839],[2855,2856],[2855,2855],[5404,5406],"[id, props]",[2257,2258],[2257,2257],[2273,2274],[2273,2273],[4216,4218],"[props]",[1894,1896],"[GetCurrentBuisnessFunc]",[2375,2376],[2375,2375],[2391,2392],[2391,2391],[3300,3302],"[url]"]